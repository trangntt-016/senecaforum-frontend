{"version":3,"file":"accordion.d.ts","sources":["accordion.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { QueryList, AfterContentInit, OnDestroy } from '@angular/core';\r\nimport { BooleanInput } from '@angular/cdk/coercion';\r\nimport { CdkAccordion } from '@angular/cdk/accordion';\r\nimport { MatAccordionBase, MatAccordionDisplayMode, MatAccordionTogglePosition } from './accordion-base';\r\nimport { MatExpansionPanelHeader } from './expansion-panel-header';\r\n/**\r\n * Directive for a Material Design Accordion.\r\n */\r\nexport declare class MatAccordion extends CdkAccordion implements MatAccordionBase, AfterContentInit, OnDestroy {\r\n    private _keyManager;\r\n    /** Headers belonging to this accordion. */\r\n    private _ownHeaders;\r\n    /** All headers inside the accordion. Includes headers inside nested accordions. */\r\n    _headers: QueryList<MatExpansionPanelHeader>;\r\n    /** Whether the expansion indicator should be hidden. */\r\n    get hideToggle(): boolean;\r\n    set hideToggle(show: boolean);\r\n    private _hideToggle;\r\n    /**\r\n     * Display mode used for all expansion panels in the accordion. Currently two display\r\n     * modes exist:\r\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\r\n     *     panel at a different elevation from the rest of the accordion.\r\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\r\n     *     elevation.\r\n     */\r\n    displayMode: MatAccordionDisplayMode;\r\n    /** The position of the expansion indicator. */\r\n    togglePosition: MatAccordionTogglePosition;\r\n    ngAfterContentInit(): void;\r\n    /** Handles keyboard events coming in from the panel headers. */\r\n    _handleHeaderKeydown(event: KeyboardEvent): void;\r\n    _handleHeaderFocus(header: MatExpansionPanelHeader): void;\r\n    ngOnDestroy(): void;\r\n    static ngAcceptInputType_hideToggle: BooleanInput;\r\n}\r\n"]}