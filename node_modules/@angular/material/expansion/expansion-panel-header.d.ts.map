{"version":3,"file":"expansion-panel-header.d.ts","sources":["expansion-panel-header.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';\r\nimport { MatAccordionTogglePosition } from './accordion-base';\r\nimport { MatExpansionPanel, MatExpansionPanelDefaultOptions } from './expansion-panel';\r\n/**\r\n * Header element of a `<mat-expansion-panel>`.\r\n */\r\nexport declare class MatExpansionPanelHeader implements AfterViewInit, OnDestroy, FocusableOption {\r\n    panel: MatExpansionPanel;\r\n    private _element;\r\n    private _focusMonitor;\r\n    private _changeDetectorRef;\r\n    _animationMode?: string | undefined;\r\n    private _parentChangeSubscription;\r\n    constructor(panel: MatExpansionPanel, _element: ElementRef, _focusMonitor: FocusMonitor, _changeDetectorRef: ChangeDetectorRef, defaultOptions?: MatExpansionPanelDefaultOptions, _animationMode?: string | undefined);\r\n    /** Height of the header while the panel is expanded. */\r\n    expandedHeight: string;\r\n    /** Height of the header while the panel is collapsed. */\r\n    collapsedHeight: string;\r\n    /**\r\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\r\n     * @docs-private\r\n     */\r\n    get disabled(): any;\r\n    /** Toggles the expanded state of the panel. */\r\n    _toggle(): void;\r\n    /** Gets whether the panel is expanded. */\r\n    _isExpanded(): boolean;\r\n    /** Gets the expanded state string of the panel. */\r\n    _getExpandedState(): string;\r\n    /** Gets the panel id. */\r\n    _getPanelId(): string;\r\n    /** Gets the toggle position for the header. */\r\n    _getTogglePosition(): MatAccordionTogglePosition;\r\n    /** Gets whether the expand indicator should be shown. */\r\n    _showToggle(): boolean;\r\n    /**\r\n     * Gets the current height of the header. Null if no custom height has been\r\n     * specified, and if the default height from the stylesheet should be used.\r\n     */\r\n    _getHeaderHeight(): string | null;\r\n    /** Handle keydown event calling to toggle() if appropriate. */\r\n    _keydown(event: KeyboardEvent): void;\r\n    /**\r\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\r\n     * @param origin Origin of the action that triggered the focus.\r\n     * @docs-private\r\n     */\r\n    focus(origin?: FocusOrigin, options?: FocusOptions): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n/**\r\n * Description element of a `<mat-expansion-panel-header>`.\r\n */\r\nexport declare class MatExpansionPanelDescription {\r\n}\r\n/**\r\n * Title element of a `<mat-expansion-panel-header>`.\r\n */\r\nexport declare class MatExpansionPanelTitle {\r\n}\r\n"]}