{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, Output, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate } from 'primeng/api';\n\nfunction Button_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a1, a2, a3, a4) {\n  return {\n    \"p-button-icon\": true,\n    \"p-button-icon-left\": a1,\n    \"p-button-icon-right\": a2,\n    \"p-button-icon-top\": a3,\n    \"p-button-icon-bottom\": a4\n  };\n};\n\nfunction Button_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.loading ? \"p-button-loading-icon \" + ctx_r1.loadingIcon : ctx_r1.icon);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(4, _c0, ctx_r1.iconPos === \"left\" && ctx_r1.label, ctx_r1.iconPos === \"right\" && ctx_r1.label, ctx_r1.iconPos === \"top\" && ctx_r1.label, ctx_r1.iconPos === \"bottom\" && ctx_r1.label));\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction Button_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-hidden\", ctx_r2.icon && !ctx_r2.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.label || \"\\xA0\");\n  }\n}\n\nfunction Button_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.badgeClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.badgeStyleClass());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.badge);\n  }\n}\n\nconst _c1 = function (a1, a2, a3, a4, a5) {\n  return {\n    \"p-button p-component\": true,\n    \"p-button-icon-only\": a1,\n    \"p-button-vertical\": a2,\n    \"p-disabled\": a3,\n    \"p-button-loading\": a4,\n    \"p-button-loading-label-only\": a5\n  };\n};\n\nconst _c2 = [\"*\"];\n\nclass ButtonDirective {\n  constructor(el) {\n    this.el = el;\n    this.iconPos = 'left';\n    this.loadingIcon = \"pi pi-spinner pi-spin\";\n    this._loading = false;\n  }\n\n  ngAfterViewInit() {\n    this._initialStyleClass = this.el.nativeElement.className;\n    DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n    if (this.icon) {\n      this.createIconEl();\n    }\n\n    let labelElement = document.createElement(\"span\");\n\n    if (this.icon && !this.label) {\n      labelElement.setAttribute('aria-hidden', 'true');\n    }\n\n    labelElement.className = 'p-button-label';\n    if (this.label) labelElement.appendChild(document.createTextNode(this.label));else labelElement.innerHTML = '&nbsp;';\n    this.el.nativeElement.appendChild(labelElement);\n    this.initialized = true;\n  }\n\n  getStyleClass() {\n    let styleClass = 'p-button p-component';\n\n    if (this.icon && !this.label) {\n      styleClass = styleClass + ' p-button-icon-only';\n    }\n\n    if (this.loading) {\n      styleClass = styleClass + ' p-disabled p-button-loading';\n      if (!this.icon && this.label) styleClass = styleClass + ' p-button-loading-label-only';\n    }\n\n    return styleClass;\n  }\n\n  setStyleClass() {\n    let styleClass = this.getStyleClass();\n    this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n  }\n\n  createIconEl() {\n    let iconElement = document.createElement(\"span\");\n    iconElement.className = 'p-button-icon';\n    iconElement.setAttribute(\"aria-hidden\", \"true\");\n    let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n\n    if (iconPosClass) {\n      DomHandler.addClass(iconElement, iconPosClass);\n    }\n\n    DomHandler.addMultipleClasses(iconElement, this.getIconClass());\n    let labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label');\n    if (labelEl) this.el.nativeElement.insertBefore(iconElement, labelEl);else this.el.nativeElement.appendChild(iconElement);\n  }\n\n  getIconClass() {\n    return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\n  }\n\n  setIconClass() {\n    let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n\n    if (iconElement) {\n      if (this.iconPos) iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();else iconElement.className = 'p-button-icon ' + this.getIconClass();\n    } else {\n      this.createIconEl();\n    }\n  }\n\n  removeIconElement() {\n    let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n    this.el.nativeElement.removeChild(iconElement);\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(val) {\n    this._label = val;\n\n    if (this.initialized) {\n      DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n      this.setStyleClass();\n    }\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(val) {\n    this._icon = val;\n\n    if (this.initialized) {\n      this.setIconClass();\n      this.setStyleClass();\n    }\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  set loading(val) {\n    this._loading = val;\n\n    if (this.initialized) {\n      if (this.loading || this.icon) this.setIconClass();else this.removeIconElement();\n      this.setStyleClass();\n    }\n  }\n\n  ngOnDestroy() {\n    this.initialized = false;\n  }\n\n}\n\nButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ButtonDirective,\n  deps: [{\n    token: i0.ElementRef\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nButtonDirective.ɵdir = i0.ɵɵdefineDirective({\n  type: ButtonDirective,\n  selectors: [[\"\", \"pButton\", \"\"]],\n  inputs: {\n    iconPos: \"iconPos\",\n    loadingIcon: \"loadingIcon\",\n    label: \"label\",\n    icon: \"icon\",\n    loading: \"loading\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ButtonDirective,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pButton]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  },\n  propDecorators: {\n    iconPos: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }]\n  }\n});\n\nclass Button {\n  constructor() {\n    this.type = \"button\";\n    this.iconPos = 'left';\n    this.loading = false;\n    this.loadingIcon = \"pi pi-spinner pi-spin\";\n    this.onClick = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  badgeStyleClass() {\n    return {\n      'p-badge p-component': true,\n      'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n    };\n  }\n\n}\n\nButton.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: Button,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.Component\n});\nButton.ɵcmp = i0.ɵɵdefineComponent({\n  type: Button,\n  selectors: [[\"p-button\"]],\n  contentQueries: function Button_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    iconPos: \"iconPos\",\n    icon: \"icon\",\n    badge: \"badge\",\n    label: \"label\",\n    disabled: \"disabled\",\n    loading: \"loading\",\n    loadingIcon: \"loadingIcon\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    badgeClass: \"badgeClass\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  ngContentSelectors: _c2,\n  decls: 6,\n  vars: 16,\n  consts: [[\"pRipple\", \"\", 3, \"ngStyle\", \"disabled\", \"ngClass\", \"click\", \"focus\", \"blur\"], [4, \"ngTemplateOutlet\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [\"class\", \"p-button-label\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-button-label\"]],\n  template: function Button_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function Button_Template_button_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"focus\", function Button_Template_button_focus_0_listener($event) {\n        return ctx.onFocus.emit($event);\n      })(\"blur\", function Button_Template_button_blur_0_listener($event) {\n        return ctx.onBlur.emit($event);\n      });\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, Button_ng_container_2_Template, 1, 0, \"ng-container\", 1);\n      i0.ɵɵtemplate(3, Button_span_3_Template, 1, 9, \"span\", 2);\n      i0.ɵɵtemplate(4, Button_span_4_Template, 2, 2, \"span\", 3);\n      i0.ɵɵtemplate(5, Button_span_5_Template, 2, 4, \"span\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"disabled\", ctx.disabled || ctx.loading)(\"ngClass\", i0.ɵɵpureFunction5(10, _c1, ctx.icon && !ctx.label, (ctx.iconPos === \"top\" || ctx.iconPos === \"bottom\") && ctx.label, ctx.disabled || ctx.loading, ctx.loading, ctx.loading && !ctx.icon && ctx.label));\n      i0.ɵɵattribute(\"type\", ctx.type);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && (ctx.icon || ctx.loading));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && ctx.badge);\n    }\n  },\n  directives: [i1.Ripple, i2.NgStyle, i2.NgClass, i2.NgTemplateOutlet, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: Button,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-button',\n      template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\n                        'p-disabled': this.disabled || this.loading,\n                        'p-button-loading': this.loading,\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\n        </button>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  propDecorators: {\n    type: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    badge: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    badgeClass: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }]\n  }\n});\n\nclass ButtonModule {}\n\nButtonModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ButtonModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ButtonModule,\n  declarations: [ButtonDirective, Button],\n  imports: [CommonModule, RippleModule],\n  exports: [ButtonDirective, Button]\n});\nButtonModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ButtonModule,\n  imports: [[CommonModule, RippleModule]]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ButtonModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule],\n      exports: [ButtonDirective, Button],\n      declarations: [ButtonDirective, Button]\n    }]\n  }]\n});\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonDirective, ButtonModule }; //# sourceMappingURL=primeng-button.js.map","map":{"version":3,"sources":["C:/Users/trang/Projects/SenecaForum/node_modules/primeng/fesm2015/primeng-button.js"],"names":["i0","Directive","Input","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChildren","Output","NgModule","DomHandler","i2","CommonModule","i1","RippleModule","PrimeTemplate","ButtonDirective","constructor","el","iconPos","loadingIcon","_loading","ngAfterViewInit","_initialStyleClass","nativeElement","className","addMultipleClasses","getStyleClass","icon","createIconEl","labelElement","document","createElement","label","setAttribute","appendChild","createTextNode","innerHTML","initialized","styleClass","loading","setStyleClass","iconElement","iconPosClass","addClass","getIconClass","labelEl","findSingle","insertBefore","_icon","setIconClass","removeIconElement","removeChild","_label","val","textContent","ngOnDestroy","ɵfac","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","token","ElementRef","target","ɵɵFactoryTarget","ɵdir","ɵɵngDeclareClassMetadata","decorators","args","selector","ctorParameters","propDecorators","Button","onClick","onFocus","onBlur","ngAfterContentInit","templates","forEach","item","getType","contentTemplate","template","badgeStyleClass","badge","String","length","ɵcmp","Ripple","NgStyle","NgClass","NgTemplateOutlet","NgIf","changeDetection","OnPush","encapsulation","None","disabled","style","badgeClass","ButtonModule","ɵmod","ɵɵngDeclareNgModule","declarations","imports","exports","ɵinj","ɵɵngDeclareInjector"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,YAA3B,EAAyCC,SAAzC,EAAoDC,uBAApD,EAA6EC,iBAA7E,EAAgGC,eAAhG,EAAiHC,MAAjH,EAAyHC,QAAzH,QAAyI,eAAzI;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,aAA9B;;;;AAmHgQf,IAAAA,EAyDpP,sB;;;;;;;;;;;;;;;;AAzDoPA,IAAAA,EA0DpP,wB;;;;mBA1DoPA,E;AAAAA,IAAAA,EA+DxO,yF;AA/DwOA,IAAAA,EA0D9O,uBA1D8OA,EA0D9O,uM;AA1D8OA,IAAAA,EA+D1H,iC;;;;;;AA/D0HA,IAAAA,EAgEpP,6B;AAhEoPA,IAAAA,EAgE1J,U;AAhE0JA,IAAAA,EAgEvI,e;;;;mBAhEuIA,E;AAAAA,IAAAA,EAgEvN,yD;AAhEuNA,IAAAA,EAgE1J,a;AAhE0JA,IAAAA,EAgE1J,0C;;;;;;AAhE0JA,IAAAA,EAiEpP,6B;AAjEoPA,IAAAA,EAiEzJ,U;AAjEyJA,IAAAA,EAiEhJ,e;;;;mBAjEgJA,E;AAAAA,IAAAA,EAiEhN,8B;AAjEgNA,IAAAA,EAiE9O,gD;AAjE8OA,IAAAA,EAiEzJ,a;AAjEyJA,IAAAA,EAiEzJ,gC;;;;;;;;;;;;;;;;;AAlLvG,MAAMgB,eAAN,CAAsB;AAClBC,EAAAA,WAAW,CAACC,EAAD,EAAK;AACZ,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKC,OAAL,GAAe,MAAf;AACA,SAAKC,WAAL,GAAmB,uBAAnB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,SAAKC,kBAAL,GAA0B,KAAKL,EAAL,CAAQM,aAAR,CAAsBC,SAAhD;AACAf,IAAAA,UAAU,CAACgB,kBAAX,CAA8B,KAAKR,EAAL,CAAQM,aAAtC,EAAqD,KAAKG,aAAL,EAArD;;AACA,QAAI,KAAKC,IAAT,EAAe;AACX,WAAKC,YAAL;AACH;;AACD,QAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAnB;;AACA,QAAI,KAAKJ,IAAL,IAAa,CAAC,KAAKK,KAAvB,EAA8B;AAC1BH,MAAAA,YAAY,CAACI,YAAb,CAA0B,aAA1B,EAAyC,MAAzC;AACH;;AACDJ,IAAAA,YAAY,CAACL,SAAb,GAAyB,gBAAzB;AACA,QAAI,KAAKQ,KAAT,EACIH,YAAY,CAACK,WAAb,CAAyBJ,QAAQ,CAACK,cAAT,CAAwB,KAAKH,KAA7B,CAAzB,EADJ,KAGIH,YAAY,CAACO,SAAb,GAAyB,QAAzB;AACJ,SAAKnB,EAAL,CAAQM,aAAR,CAAsBW,WAAtB,CAAkCL,YAAlC;AACA,SAAKQ,WAAL,GAAmB,IAAnB;AACH;;AACDX,EAAAA,aAAa,GAAG;AACZ,QAAIY,UAAU,GAAG,sBAAjB;;AACA,QAAI,KAAKX,IAAL,IAAa,CAAC,KAAKK,KAAvB,EAA8B;AAC1BM,MAAAA,UAAU,GAAGA,UAAU,GAAG,qBAA1B;AACH;;AACD,QAAI,KAAKC,OAAT,EAAkB;AACdD,MAAAA,UAAU,GAAGA,UAAU,GAAG,8BAA1B;AACA,UAAI,CAAC,KAAKX,IAAN,IAAc,KAAKK,KAAvB,EACIM,UAAU,GAAGA,UAAU,GAAG,8BAA1B;AACP;;AACD,WAAOA,UAAP;AACH;;AACDE,EAAAA,aAAa,GAAG;AACZ,QAAIF,UAAU,GAAG,KAAKZ,aAAL,EAAjB;AACA,SAAKT,EAAL,CAAQM,aAAR,CAAsBC,SAAtB,GAAkCc,UAAU,GAAG,GAAb,GAAmB,KAAKhB,kBAA1D;AACH;;AACDM,EAAAA,YAAY,GAAG;AACX,QAAIa,WAAW,GAAGX,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAU,IAAAA,WAAW,CAACjB,SAAZ,GAAwB,eAAxB;AACAiB,IAAAA,WAAW,CAACR,YAAZ,CAAyB,aAAzB,EAAwC,MAAxC;AACA,QAAIS,YAAY,GAAG,KAAKV,KAAL,GAAa,mBAAmB,KAAKd,OAArC,GAA+C,IAAlE;;AACA,QAAIwB,YAAJ,EAAkB;AACdjC,MAAAA,UAAU,CAACkC,QAAX,CAAoBF,WAApB,EAAiCC,YAAjC;AACH;;AACDjC,IAAAA,UAAU,CAACgB,kBAAX,CAA8BgB,WAA9B,EAA2C,KAAKG,YAAL,EAA3C;AACA,QAAIC,OAAO,GAAGpC,UAAU,CAACqC,UAAX,CAAsB,KAAK7B,EAAL,CAAQM,aAA9B,EAA6C,iBAA7C,CAAd;AACA,QAAIsB,OAAJ,EACI,KAAK5B,EAAL,CAAQM,aAAR,CAAsBwB,YAAtB,CAAmCN,WAAnC,EAAgDI,OAAhD,EADJ,KAGI,KAAK5B,EAAL,CAAQM,aAAR,CAAsBW,WAAtB,CAAkCO,WAAlC;AACP;;AACDG,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKL,OAAL,GAAe,2BAA2B,KAAKpB,WAA/C,GAA6D,KAAK6B,KAAzE;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,QAAIR,WAAW,GAAGhC,UAAU,CAACqC,UAAX,CAAsB,KAAK7B,EAAL,CAAQM,aAA9B,EAA6C,gBAA7C,CAAlB;;AACA,QAAIkB,WAAJ,EAAiB;AACb,UAAI,KAAKvB,OAAT,EACIuB,WAAW,CAACjB,SAAZ,GAAwB,iCAAiC,KAAKN,OAAtC,GAAgD,GAAhD,GAAsD,KAAK0B,YAAL,EAA9E,CADJ,KAGIH,WAAW,CAACjB,SAAZ,GAAwB,mBAAmB,KAAKoB,YAAL,EAA3C;AACP,KALD,MAMK;AACD,WAAKhB,YAAL;AACH;AACJ;;AACDsB,EAAAA,iBAAiB,GAAG;AAChB,QAAIT,WAAW,GAAGhC,UAAU,CAACqC,UAAX,CAAsB,KAAK7B,EAAL,CAAQM,aAA9B,EAA6C,gBAA7C,CAAlB;AACA,SAAKN,EAAL,CAAQM,aAAR,CAAsB4B,WAAtB,CAAkCV,WAAlC;AACH;;AACD,MAAIT,KAAJ,GAAY;AACR,WAAO,KAAKoB,MAAZ;AACH;;AACD,MAAIpB,KAAJ,CAAUqB,GAAV,EAAe;AACX,SAAKD,MAAL,GAAcC,GAAd;;AACA,QAAI,KAAKhB,WAAT,EAAsB;AAClB5B,MAAAA,UAAU,CAACqC,UAAX,CAAsB,KAAK7B,EAAL,CAAQM,aAA9B,EAA6C,iBAA7C,EAAgE+B,WAAhE,GAA8E,KAAKF,MAAL,IAAe,QAA7F;AACA,WAAKZ,aAAL;AACH;AACJ;;AACD,MAAIb,IAAJ,GAAW;AACP,WAAO,KAAKqB,KAAZ;AACH;;AACD,MAAIrB,IAAJ,CAAS0B,GAAT,EAAc;AACV,SAAKL,KAAL,GAAaK,GAAb;;AACA,QAAI,KAAKhB,WAAT,EAAsB;AAClB,WAAKY,YAAL;AACA,WAAKT,aAAL;AACH;AACJ;;AACD,MAAID,OAAJ,GAAc;AACV,WAAO,KAAKnB,QAAZ;AACH;;AACD,MAAImB,OAAJ,CAAYc,GAAZ,EAAiB;AACb,SAAKjC,QAAL,GAAgBiC,GAAhB;;AACA,QAAI,KAAKhB,WAAT,EAAsB;AAClB,UAAI,KAAKE,OAAL,IAAgB,KAAKZ,IAAzB,EACI,KAAKsB,YAAL,GADJ,KAGI,KAAKC,iBAAL;AACJ,WAAKV,aAAL;AACH;AACJ;;AACDe,EAAAA,WAAW,GAAG;AACV,SAAKlB,WAAL,GAAmB,KAAnB;AACH;;AA9GiB;;AAgHtBtB,eAAe,CAACyC,IAAhB,GAAuBzD,EAAE,CAAC0D,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAE9C,eAA/D;AAAgF+C,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAEhE,EAAE,CAACiE;AAAZ,GAAD,CAAtF;AAAkHC,EAAAA,MAAM,EAAElE,EAAE,CAACmE,eAAH,CAAmBlE;AAA7I,CAAtB,CAAvB;AACAe,eAAe,CAACoD,IAAhB,GAAgQpE,EAAhQ;AAAA,QAAgGgB,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAhB,EAAE,CAACqE,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAE9C,eAA/D;AAAgFsD,EAAAA,UAAU,EAAE,CAAC;AAC7GR,IAAAA,IAAI,EAAE7D,SADuG;AAE7GsE,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE;AADX,KAAD;AAFuG,GAAD,CAA5F;AAKhBC,EAAAA,cAAc,EAAE,YAAY;AAAE,WAAO,CAAC;AAAEX,MAAAA,IAAI,EAAE9D,EAAE,CAACiE;AAAX,KAAD,CAAP;AAAmC,GALjD;AAKmDS,EAAAA,cAAc,EAAE;AAAEvD,IAAAA,OAAO,EAAE,CAAC;AAC3F2C,MAAAA,IAAI,EAAE5D;AADqF,KAAD,CAAX;AAE/EkB,IAAAA,WAAW,EAAE,CAAC;AACd0C,MAAAA,IAAI,EAAE5D;AADQ,KAAD,CAFkE;AAI/E+B,IAAAA,KAAK,EAAE,CAAC;AACR6B,MAAAA,IAAI,EAAE5D;AADE,KAAD,CAJwE;AAM/E0B,IAAAA,IAAI,EAAE,CAAC;AACPkC,MAAAA,IAAI,EAAE5D;AADC,KAAD,CANyE;AAQ/EsC,IAAAA,OAAO,EAAE,CAAC;AACVsB,MAAAA,IAAI,EAAE5D;AADI,KAAD;AARsE;AALnE,CAA5B;;AAgBA,MAAMyE,MAAN,CAAa;AACT1D,EAAAA,WAAW,GAAG;AACV,SAAK6C,IAAL,GAAY,QAAZ;AACA,SAAK3C,OAAL,GAAe,MAAf;AACA,SAAKqB,OAAL,GAAe,KAAf;AACA,SAAKpB,WAAL,GAAmB,uBAAnB;AACA,SAAKwD,OAAL,GAAe,IAAIzE,YAAJ,EAAf;AACA,SAAK0E,OAAL,GAAe,IAAI1E,YAAJ,EAAf;AACA,SAAK2E,MAAL,GAAc,IAAI3E,YAAJ,EAAd;AACH;;AACD4E,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,SAAL,CAAeC,OAAf,CAAwBC,IAAD,IAAU;AAC7B,cAAQA,IAAI,CAACC,OAAL,EAAR;AACI,aAAK,SAAL;AACI,eAAKC,eAAL,GAAuBF,IAAI,CAACG,QAA5B;AACA;;AACJ;AACI,eAAKD,eAAL,GAAuBF,IAAI,CAACG,QAA5B;AACA;AANR;AAQH,KATD;AAUH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAO;AACH,6BAAuB,IADpB;AAEH,2BAAqB,KAAKC,KAAL,IAAcC,MAAM,CAAC,KAAKD,KAAN,CAAN,CAAmBE,MAAnB,KAA8B;AAF9D,KAAP;AAIH;;AA3BQ;;AA6Bbd,MAAM,CAAClB,IAAP,GAAczD,EAAE,CAAC0D,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAEa,MAA/D;AAAuEZ,EAAAA,IAAI,EAAE,EAA7E;AAAiFG,EAAAA,MAAM,EAAElE,EAAE,CAACmE,eAAH,CAAmB/D;AAA5G,CAAtB,CAAd;AACAuE,MAAM,CAACe,IAAP,GA/CgQ1F,EA+ChQ;AAAA,QAAuF2E,MAAvF;AAAA;AAAA;AAAA;AA/CgQ3E,MAAAA,EA+ChQ,0BAAode,aAApd;AAAA;;AAAA;AAAA;;AA/CgQf,MAAAA,EA+ChQ,qBA/CgQA,EA+ChQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/CgQA,MAAAA,EA+ChQ;AA/CgQA,MAAAA,EAgDxP,+BADR;AA/CgQA,MAAAA,EAuDxO;AAAA,eAAS,wBAAT;AAAA;AAAA,eAAwC,wBAAxC;AAAA;AAAA,eAAsE,uBAAtE;AAAA,QARxB;AA/CgQA,MAAAA,EAwDpP,gBATZ;AA/CgQA,MAAAA,EAyDpP,uEAVZ;AA/CgQA,MAAAA,EA0DpP,uDAXZ;AA/CgQA,MAAAA,EAgEpP,uDAjBZ;AA/CgQA,MAAAA,EAiEpP,uDAlBZ;AA/CgQA,MAAAA,EAkExP,eAnBR;AAAA;;AAAA;AA/CgQA,MAAAA,EAgD7N,2BADnC;AA/CgQA,MAAAA,EAgDxM,sFAhDwMA,EAgDxM,qMADxD;AA/CgQA,MAAAA,EAgDhP,8BADhB;AA/CgQA,MAAAA,EAyDrO,aAV3B;AA/CgQA,MAAAA,EAyDrO,oDAV3B;AA/CgQA,MAAAA,EA+DrK,aAhB3F;AA/CgQA,MAAAA,EA+DrK,sEAhB3F;AA/CgQA,MAAAA,EAgElL,aAjB9E;AA/CgQA,MAAAA,EAgElL,yCAjB9E;AA/CgQA,MAAAA,EAiE1L,aAlBtE;AA/CgQA,MAAAA,EAiE1L,sDAlBtE;AAAA;AAAA;AAAA,eAoB4Ca,EAAE,CAAC8E,MApB/C,EAoBwFhF,EAAE,CAACiF,OApB3F,EAoB0JjF,EAAE,CAACkF,OApB7J,EAoBqOlF,EAAE,CAACmF,gBApBxO,EAoB6VnF,EAAE,CAACoF,IApBhW;AAAA;AAAA;AAAA;AAqBA/F,EAAE,CAACqE,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAEa,MAA/D;AAAuEL,EAAAA,UAAU,EAAE,CAAC;AACpGR,IAAAA,IAAI,EAAE1D,SAD8F;AAEpGmE,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,UADX;AAECa,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAtBmB;AAuBCW,MAAAA,eAAe,EAAE3F,uBAAuB,CAAC4F,MAvB1C;AAwBCC,MAAAA,aAAa,EAAE5F,iBAAiB,CAAC6F;AAxBlC,KAAD;AAF8F,GAAD,CAAnF;AA4BhBzB,EAAAA,cAAc,EAAE;AAAEZ,IAAAA,IAAI,EAAE,CAAC;AACrBA,MAAAA,IAAI,EAAE5D;AADe,KAAD,CAAR;AAEZiB,IAAAA,OAAO,EAAE,CAAC;AACV2C,MAAAA,IAAI,EAAE5D;AADI,KAAD,CAFG;AAIZ0B,IAAAA,IAAI,EAAE,CAAC;AACPkC,MAAAA,IAAI,EAAE5D;AADC,KAAD,CAJM;AAMZqF,IAAAA,KAAK,EAAE,CAAC;AACRzB,MAAAA,IAAI,EAAE5D;AADE,KAAD,CANK;AAQZ+B,IAAAA,KAAK,EAAE,CAAC;AACR6B,MAAAA,IAAI,EAAE5D;AADE,KAAD,CARK;AAUZkG,IAAAA,QAAQ,EAAE,CAAC;AACXtC,MAAAA,IAAI,EAAE5D;AADK,KAAD,CAVE;AAYZsC,IAAAA,OAAO,EAAE,CAAC;AACVsB,MAAAA,IAAI,EAAE5D;AADI,KAAD,CAZG;AAcZkB,IAAAA,WAAW,EAAE,CAAC;AACd0C,MAAAA,IAAI,EAAE5D;AADQ,KAAD,CAdD;AAgBZmG,IAAAA,KAAK,EAAE,CAAC;AACRvC,MAAAA,IAAI,EAAE5D;AADE,KAAD,CAhBK;AAkBZqC,IAAAA,UAAU,EAAE,CAAC;AACbuB,MAAAA,IAAI,EAAE5D;AADO,KAAD,CAlBA;AAoBZoG,IAAAA,UAAU,EAAE,CAAC;AACbxC,MAAAA,IAAI,EAAE5D;AADO,KAAD,CApBA;AAsBZ8E,IAAAA,SAAS,EAAE,CAAC;AACZlB,MAAAA,IAAI,EAAEvD,eADM;AAEZgE,MAAAA,IAAI,EAAE,CAACxD,aAAD;AAFM,KAAD,CAtBC;AAyBZ6D,IAAAA,OAAO,EAAE,CAAC;AACVd,MAAAA,IAAI,EAAEtD;AADI,KAAD,CAzBG;AA2BZqE,IAAAA,OAAO,EAAE,CAAC;AACVf,MAAAA,IAAI,EAAEtD;AADI,KAAD,CA3BG;AA6BZsE,IAAAA,MAAM,EAAE,CAAC;AACThB,MAAAA,IAAI,EAAEtD;AADG,KAAD;AA7BI;AA5BA,CAA5B;;AA4DA,MAAM+F,YAAN,CAAmB;;AAEnBA,YAAY,CAAC9C,IAAb,GAAoBzD,EAAE,CAAC0D,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAEyC,YAA/D;AAA6ExC,EAAAA,IAAI,EAAE,EAAnF;AAAuFG,EAAAA,MAAM,EAAElE,EAAE,CAACmE,eAAH,CAAmB1D;AAAlH,CAAtB,CAApB;AACA8F,YAAY,CAACC,IAAb,GAAoBxG,EAAE,CAACyG,mBAAH,CAAuB;AAAE9C,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAEyC,YAA/D;AAA6EG,EAAAA,YAAY,EAAE,CAAC1F,eAAD,EAAkB2D,MAAlB,CAA3F;AAAsHgC,EAAAA,OAAO,EAAE,CAAC/F,YAAD,EAAeE,YAAf,CAA/H;AAA6J8F,EAAAA,OAAO,EAAE,CAAC5F,eAAD,EAAkB2D,MAAlB;AAAtK,CAAvB,CAApB;AACA4B,YAAY,CAACM,IAAb,GAAoB7G,EAAE,CAAC8G,mBAAH,CAAuB;AAAEnD,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAEyC,YAA/D;AAA6EI,EAAAA,OAAO,EAAE,CAAC,CAAC/F,YAAD,EAAeE,YAAf,CAAD;AAAtF,CAAvB,CAApB;AACAd,EAAE,CAACqE,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE7D,EAArD;AAAyD8D,EAAAA,IAAI,EAAEyC,YAA/D;AAA6EjC,EAAAA,UAAU,EAAE,CAAC;AAC1GR,IAAAA,IAAI,EAAErD,QADoG;AAE1G8D,IAAAA,IAAI,EAAE,CAAC;AACCoC,MAAAA,OAAO,EAAE,CAAC/F,YAAD,EAAeE,YAAf,CADV;AAEC8F,MAAAA,OAAO,EAAE,CAAC5F,eAAD,EAAkB2D,MAAlB,CAFV;AAGC+B,MAAAA,YAAY,EAAE,CAAC1F,eAAD,EAAkB2D,MAAlB;AAHf,KAAD;AAFoG,GAAD;AAAzF,CAA5B;AASA;AACA;AACA;;AAEA,SAASA,MAAT,EAAiB3D,eAAjB,EAAkCuF,YAAlC,G,CACA","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, Output, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate } from 'primeng/api';\n\nclass ButtonDirective {\n    constructor(el) {\n        this.el = el;\n        this.iconPos = 'left';\n        this.loadingIcon = \"pi pi-spinner pi-spin\";\n        this._loading = false;\n    }\n    ngAfterViewInit() {\n        this._initialStyleClass = this.el.nativeElement.className;\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if (this.icon) {\n            this.createIconEl();\n        }\n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n        if (this.label)\n            labelElement.appendChild(document.createTextNode(this.label));\n        else\n            labelElement.innerHTML = '&nbsp;';\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n    getStyleClass() {\n        let styleClass = 'p-button p-component';\n        if (this.icon && !this.label) {\n            styleClass = styleClass + ' p-button-icon-only';\n        }\n        if (this.loading) {\n            styleClass = styleClass + ' p-disabled p-button-loading';\n            if (!this.icon && this.label)\n                styleClass = styleClass + ' p-button-loading-label-only';\n        }\n        return styleClass;\n    }\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n    createIconEl() {\n        let iconElement = document.createElement(\"span\");\n        iconElement.className = 'p-button-icon';\n        iconElement.setAttribute(\"aria-hidden\", \"true\");\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n        if (iconPosClass) {\n            DomHandler.addClass(iconElement, iconPosClass);\n        }\n        DomHandler.addMultipleClasses(iconElement, this.getIconClass());\n        let labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label');\n        if (labelEl)\n            this.el.nativeElement.insertBefore(iconElement, labelEl);\n        else\n            this.el.nativeElement.appendChild(iconElement);\n    }\n    getIconClass() {\n        return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\n    }\n    setIconClass() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        if (iconElement) {\n            if (this.iconPos)\n                iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();\n            else\n                iconElement.className = 'p-button-icon ' + this.getIconClass();\n        }\n        else {\n            this.createIconEl();\n        }\n    }\n    removeIconElement() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        this.el.nativeElement.removeChild(iconElement);\n    }\n    get label() {\n        return this._label;\n    }\n    set label(val) {\n        this._label = val;\n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n            this.setStyleClass();\n        }\n    }\n    get icon() {\n        return this._icon;\n    }\n    set icon(val) {\n        this._icon = val;\n        if (this.initialized) {\n            this.setIconClass();\n            this.setStyleClass();\n        }\n    }\n    get loading() {\n        return this._loading;\n    }\n    set loading(val) {\n        this._loading = val;\n        if (this.initialized) {\n            if (this.loading || this.icon)\n                this.setIconClass();\n            else\n                this.removeIconElement();\n            this.setStyleClass();\n        }\n    }\n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\nButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ButtonDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ButtonDirective, selector: \"[pButton]\", inputs: { iconPos: \"iconPos\", loadingIcon: \"loadingIcon\", label: \"label\", icon: \"icon\", loading: \"loading\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pButton]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { iconPos: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }] } });\nclass Button {\n    constructor() {\n        this.type = \"button\";\n        this.iconPos = 'left';\n        this.loading = false;\n        this.loadingIcon = \"pi pi-spinner pi-spin\";\n        this.onClick = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    badgeStyleClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n        };\n    }\n}\nButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: Button, deps: [], target: i0.ɵɵFactoryTarget.Component });\nButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: Button, selector: \"p-button\", inputs: { type: \"type\", iconPos: \"iconPos\", icon: \"icon\", badge: \"badge\", label: \"label\", disabled: \"disabled\", loading: \"loading\", loadingIcon: \"loadingIcon\", style: \"style\", styleClass: \"styleClass\", badgeClass: \"badgeClass\" }, outputs: { onClick: \"onClick\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\n                        'p-disabled': this.disabled || this.loading,\n                        'p-button-loading': this.loading,\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\n        </button>\n    `, isInline: true, directives: [{ type: i1.Ripple, selector: \"[pRipple]\" }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: Button, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-button',\n                    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\n                        'p-disabled': this.disabled || this.loading,\n                        'p-button-loading': this.loading,\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\n        </button>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], badge: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], badgeClass: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], onClick: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }] } });\nclass ButtonModule {\n}\nButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ButtonModule, declarations: [ButtonDirective, Button], imports: [CommonModule, RippleModule], exports: [ButtonDirective, Button] });\nButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ButtonModule, imports: [[CommonModule, RippleModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule],\n                    exports: [ButtonDirective, Button],\n                    declarations: [ButtonDirective, Button]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonDirective, ButtonModule };\n//# sourceMappingURL=primeng-button.js.map\n"]},"metadata":{},"sourceType":"module"}