{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\nconst _c0 = [\"container\"];\nconst _c1 = [\"resizeHelper\"];\nconst _c2 = [\"reorderIndicatorUp\"];\nconst _c3 = [\"reorderIndicatorDown\"];\nconst _c4 = [\"table\"];\nconst _c5 = [\"scrollableView\"];\nconst _c6 = [\"scrollableFrozenView\"];\n\nfunction Table_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"i\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"p-datatable-loading-icon pi-spin \" + ctx_r1.loadingIcon);\n  }\n}\n\nfunction Table_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, Table_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.captionTemplate);\n  }\n}\n\nfunction Table_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 15);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onPageChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r3.rows)(\"first\", ctx_r3.first)(\"totalRecords\", ctx_r3.totalRecords)(\"pageLinkSize\", ctx_r3.pageLinks)(\"alwaysShow\", ctx_r3.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r3.rowsPerPageOptions)(\"templateLeft\", ctx_r3.paginatorLeftTemplate)(\"templateRight\", ctx_r3.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r3.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r3.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r3.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r3.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r3.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r3.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r3.showJumpToPageDropdown)(\"showPageLinks\", ctx_r3.showPageLinks);\n  }\n}\n\nfunction Table_div_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_5_tfoot_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c7 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Table_div_5_tfoot_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\", 23);\n    i0.ɵɵtemplate(1, Table_div_5_tfoot_7_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c7, ctx_r17.columns));\n  }\n}\n\nfunction Table_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"table\", 17, 18);\n    i0.ɵɵtemplate(3, Table_div_5_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementStart(4, \"thead\", 20);\n    i0.ɵɵtemplate(5, Table_div_5_ng_container_5_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"tbody\", 21);\n    i0.ɵɵtemplate(7, Table_div_5_tfoot_7_Template, 2, 4, \"tfoot\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.tableStyleClass)(\"ngStyle\", ctx_r4.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(9, _c7, ctx_r4.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c7, ctx_r4.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTableBody\", ctx_r4.columns)(\"pTableBodyTemplate\", ctx_r4.bodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    width: a0\n  };\n};\n\nfunction Table_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 28, 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"pScrollableView\", ctx_r19.frozenColumns)(\"frozen\", true)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c8, ctx_r19.frozenWidth))(\"scrollHeight\", ctx_r19.scrollHeight);\n  }\n}\n\nconst _c9 = function (a0, a1) {\n  return {\n    left: a0,\n    width: a1\n  };\n};\n\nfunction Table_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, Table_div_6_div_1_Template, 2, 6, \"div\", 25);\n    i0.ɵɵelement(2, \"div\", 26, 27);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.frozenColumns || ctx_r5.frozenBodyTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pScrollableView\", ctx_r5.columns)(\"frozen\", false)(\"scrollHeight\", ctx_r5.scrollHeight)(\"ngStyle\", i0.ɵɵpureFunction2(5, _c9, ctx_r5.frozenWidth, \"calc(100% - \" + ctx_r5.frozenWidth + \")\"));\n  }\n}\n\nfunction Table_p_paginator_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-paginator\", 30);\n    i0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_7_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.onPageChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r6.rows)(\"first\", ctx_r6.first)(\"totalRecords\", ctx_r6.totalRecords)(\"pageLinkSize\", ctx_r6.pageLinks)(\"alwaysShow\", ctx_r6.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r6.rowsPerPageOptions)(\"templateLeft\", ctx_r6.paginatorLeftTemplate)(\"templateRight\", ctx_r6.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r6.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r6.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r6.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r6.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r6.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r6.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r6.showJumpToPageDropdown)(\"showPageLinks\", ctx_r6.showPageLinks);\n  }\n}\n\nfunction Table_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, Table_div_8_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.summaryTemplate);\n  }\n}\n\nfunction Table_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 32, 33);\n  }\n}\n\nfunction Table_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 34, 35);\n  }\n}\n\nfunction Table_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 36, 37);\n  }\n}\n\nconst _c10 = function (a1, a2, a3, a4, a5, a6, a7) {\n  return {\n    \"p-datatable p-component\": true,\n    \"p-datatable-hoverable-rows\": a1,\n    \"p-datatable-auto-layout\": a2,\n    \"p-datatable-resizable\": a3,\n    \"p-datatable-resizable-fit\": a4,\n    \"p-datatable-scrollable\": a5,\n    \"p-datatable-flex-scrollable\": a6,\n    \"p-datatable-responsive\": a7\n  };\n};\n\nconst _c11 = [\"pTableBody\", \"\"];\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c12 = function (a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_0_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    const rowData_r7 = ctx.$implicit;\n    const rowIndex_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c12, rowData_r7, ctx_r6.dt.paginator ? ctx_r6.dt.first + rowIndex_r8 : rowIndex_r8, ctx_r6.columns, ctx_r6.dt.editMode === \"row\" && ctx_r6.dt.isRowEditing(rowData_r7)));\n  }\n}\n\nfunction TableBody_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_Template, 1, 7, \"ng-template\", 1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.dt.paginator && !ctx_r0.dt.lazy ? i0.ɵɵpipeBind3(2, 2, ctx_r0.dt.filteredValue || ctx_r0.dt.value, ctx_r0.dt.first, ctx_r0.dt.first + ctx_r0.dt.rows) : ctx_r0.dt.filteredValue || ctx_r0.dt.value)(\"ngForTrackBy\", ctx_r0.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    const rowData_r11 = ctx.$implicit;\n    const rowIndex_r12 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", rowData_r11 ? ctx_r10.template : ctx_r10.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c12, rowData_r11, ctx_r10.dt.paginator ? ctx_r10.dt.first + rowIndex_r12 : rowIndex_r12, ctx_r10.columns, ctx_r10.dt.editMode === \"row\" && ctx_r10.dt.isRowEditing(rowData_r11)));\n  }\n}\n\nfunction TableBody_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_1_ng_template_1_Template, 1, 7, \"ng-template\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r1.dt.filteredValue || ctx_r1.dt.value)(\"cdkVirtualForTrackBy\", ctx_r1.dt.rowTrackBy)(\"cdkVirtualForTemplateCacheSize\", 0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c13 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    const rowData_r15 = ctx_r20.$implicit;\n    const rowIndex_r16 = ctx_r20.index;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.dt.expandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c13, rowData_r15, ctx_r18.dt.paginator ? ctx_r18.dt.first + rowIndex_r16 : rowIndex_r16, ctx_r18.columns));\n  }\n}\n\nconst _c14 = function (a0, a1, a2, a3, a4) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    expanded: a3,\n    editing: a4\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_2_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_Template, 2, 6, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    const rowData_r15 = ctx.$implicit;\n    const rowIndex_r16 = ctx.index;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(3, _c14, rowData_r15, ctx_r14.dt.paginator ? ctx_r14.dt.first + rowIndex_r16 : rowIndex_r16, ctx_r14.columns, ctx_r14.dt.isRowExpanded(rowData_r15), ctx_r14.dt.editMode === \"row\" && ctx_r14.dt.isRowEditing(rowData_r15)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.dt.isRowExpanded(rowData_r15));\n  }\n}\n\nfunction TableBody_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_Template, 2, 9, \"ng-template\", 1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.dt.paginator && !ctx_r2.dt.lazy ? i0.ɵɵpipeBind3(2, 2, ctx_r2.dt.filteredValue || ctx_r2.dt.value, ctx_r2.dt.first, ctx_r2.dt.first + ctx_r2.dt.rows) : ctx_r2.dt.filteredValue || ctx_r2.dt.value)(\"ngForTrackBy\", ctx_r2.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    const rowData_r22 = ctx_r27.$implicit;\n    const rowIndex_r23 = ctx_r27.index;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r25.dt.frozenExpandedRowTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c13, rowData_r22, ctx_r25.dt.paginator ? ctx_r25.dt.first + rowIndex_r23 : rowIndex_r23, ctx_r25.columns));\n  }\n}\n\nfunction TableBody_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TableBody_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_ng_container_1_Template, 2, 6, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    const rowData_r22 = ctx.$implicit;\n    const rowIndex_r23 = ctx.index;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(3, _c14, rowData_r22, ctx_r21.dt.paginator ? ctx_r21.dt.first + rowIndex_r23 : rowIndex_r23, ctx_r21.columns, ctx_r21.dt.isRowExpanded(rowData_r22), ctx_r21.dt.editMode === \"row\" && ctx_r21.dt.isRowEditing(rowData_r22)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r21.dt.isRowExpanded(rowData_r22));\n  }\n}\n\nfunction TableBody_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_3_ng_template_1_Template, 2, 9, \"ng-template\", 1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.dt.paginator && !ctx_r3.dt.lazy ? i0.ɵɵpipeBind3(2, 2, ctx_r3.dt.filteredValue || ctx_r3.dt.value, ctx_r3.dt.first, ctx_r3.dt.first + ctx_r3.dt.rows) : ctx_r3.dt.filteredValue || ctx_r3.dt.value)(\"ngForTrackBy\", ctx_r3.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    frozen: a1\n  };\n};\n\nfunction TableBody_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r4.columns, ctx_r4.frozen));\n  }\n}\n\nfunction TableBody_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableBody_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.dt.emptyMessageTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, ctx_r5.columns, ctx_r5.frozen));\n  }\n}\n\nconst _c16 = [\"scrollHeader\"];\nconst _c17 = [\"scrollHeaderBox\"];\nconst _c18 = [\"scrollBody\"];\nconst _c19 = [\"scrollTable\"];\nconst _c20 = [\"scrollFooter\"];\nconst _c21 = [\"scrollFooterBox\"];\nconst _c22 = [\"scrollableAligner\"];\nconst _c23 = [\"pScrollableView\", \"\"];\n\nfunction ScrollableView_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ScrollableView_ng_template_9_ng_container_0_Template, 1, 0, \"ng-container\", 5);\n  }\n\n  if (rf & 2) {\n    const rowData_r12 = ctx.$implicit;\n    const rowIndex_r13 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.frozenRowsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c13, rowData_r12, rowIndex_r13, ctx_r4.columns));\n  }\n}\n\nfunction ScrollableView_ng_container_10_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_container_10_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 23, 24);\n  }\n}\n\nconst _c24 = function (a0, a1) {\n  return {\n    \"max-height\": a0,\n    \"overflow-y\": a1\n  };\n};\n\nfunction ScrollableView_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 17, 18);\n    i0.ɵɵelementStart(3, \"table\", 19, 20);\n    i0.ɵɵtemplate(5, ScrollableView_ng_container_10_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelement(6, \"tbody\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ScrollableView_ng_container_10_div_7_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(10, _c24, ctx_r5.dt.scrollHeight !== \"flex\" ? ctx_r5.scrollHeight : undefined, !ctx_r5.frozen && ctx_r5.dt.scrollHeight ? \"scroll\" : undefined));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r5.dt.tableStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.dt.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.frozen ? ctx_r5.dt.frozenColGroupTemplate || ctx_r5.dt.colGroupTemplate : ctx_r5.dt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c7, ctx_r5.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTableBody\", ctx_r5.columns)(\"pTableBodyTemplate\", ctx_r5.frozen ? ctx_r5.dt.frozenBodyTemplate || ctx_r5.dt.bodyTemplate : ctx_r5.dt.bodyTemplate)(\"frozen\", ctx_r5.frozen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.frozen);\n  }\n}\n\nfunction ScrollableView_ng_template_11_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_template_11_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 23, 24);\n  }\n}\n\nfunction ScrollableView_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 25);\n    i0.ɵɵlistener(\"scrolledIndexChange\", function ScrollableView_ng_template_11_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.onScrollIndexChange($event);\n    });\n    i0.ɵɵelementStart(1, \"table\", 19, 20);\n    i0.ɵɵtemplate(3, ScrollableView_ng_template_11_ng_container_3_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelement(4, \"tbody\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ScrollableView_ng_template_11_div_5_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r7.dt.scrollHeight !== \"flex\" ? ctx_r7.scrollHeight : undefined);\n    i0.ɵɵproperty(\"itemSize\", ctx_r7.dt.virtualRowHeight)(\"minBufferPx\", ctx_r7.dt.minBufferPx)(\"maxBufferPx\", ctx_r7.dt.maxBufferPx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r7.dt.tableStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r7.dt.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.frozen ? ctx_r7.dt.frozenColGroupTemplate || ctx_r7.dt.colGroupTemplate : ctx_r7.dt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(14, _c7, ctx_r7.columns));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTableBody\", ctx_r7.columns)(\"pTableBodyTemplate\", ctx_r7.frozen ? ctx_r7.dt.frozenBodyTemplate || ctx_r7.dt.bodyTemplate : ctx_r7.dt.bodyTemplate)(\"frozen\", ctx_r7.frozen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.frozen);\n  }\n}\n\nfunction ScrollableView_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction SortIcon_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getMultiSortMetaIndex() + 1);\n  }\n}\n\nconst _c25 = function (a0, a1, a2) {\n  return {\n    \"pi-sort-amount-up-alt\": a0,\n    \"pi-sort-amount-down\": a1,\n    \"pi-sort-alt\": a2\n  };\n};\n\nfunction CellEditor_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\n\nfunction CellEditor_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CellEditor_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.outputTemplate);\n  }\n}\n\nconst _c26 = [\"box\"];\n\nconst _c27 = function (a1, a2) {\n  return {\n    \"p-radiobutton-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c28 = function (a1, a2) {\n  return {\n    \"p-checkbox-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nconst _c29 = function (a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nconst _c30 = function (a1, a2) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c31 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    filterCallback: a1\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c31, ctx_r0.filterConstraint.value, ctx_r0.filterCallback));\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 7);\n    i0.ɵɵlistener(\"input\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onModelChange($event.target.value);\n    })(\"keydown.enter\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onTextInputEnterKeyDown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r4.filterConstraint == null ? null : ctx_r4.filterConstraint.value);\n    i0.ɵɵattribute(\"placeholder\", ctx_r4.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onModelChange($event);\n    })(\"onKeyDown\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_onKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onNumericInputKeyDown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.filterConstraint == null ? null : ctx_r5.filterConstraint.value)(\"showButtons\", true)(\"minFractionDigits\", ctx_r5.minFractionDigits)(\"maxFractionDigits\", ctx_r5.maxFractionDigits)(\"prefix\", ctx_r5.prefix)(\"suffix\", ctx_r5.suffix)(\"placeholder\", ctx_r5.placeholder)(\"mode\", ctx_r5.currency ? \"currency\" : \"decimal\")(\"locale\", ctx_r5.locale)(\"localeMatcher\", ctx_r5.localeMatcher)(\"currency\", ctx_r5.currency)(\"currencyDisplay\", ctx_r5.currencyDisplay)(\"useGrouping\", ctx_r5.useGrouping);\n    i0.ɵɵattribute(\"placeholder\", ctx_r5.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-triStateCheckbox\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template_p_triStateCheckbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.filterConstraint == null ? null : ctx_r6.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_calendar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-calendar\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_calendar_4_Template_p_calendar_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onModelChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.filterConstraint == null ? null : ctx_r7.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 3);\n    i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_input_1_Template, 1, 2, \"input\", 4);\n    i0.ɵɵtemplate(2, ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template, 1, 14, \"p-inputNumber\", 5);\n    i0.ɵɵtemplate(3, ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template, 1, 1, \"p-triStateCheckbox\", 6);\n    i0.ɵɵtemplate(4, ColumnFilterFormElement_ng_template_1_p_calendar_4_Template, 1, 1, \"p-calendar\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n\nconst _c32 = [\"icon\"];\n\nfunction ColumnFilter_p_columnFilterFormElement_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-columnFilterFormElement\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"type\", ctx_r0.type)(\"field\", ctx_r0.field)(\"filterConstraint\", ctx_r0.dt.filters[ctx_r0.field])(\"filterTemplate\", ctx_r0.filterTemplate)(\"placeholder\", ctx_r0.placeholder)(\"minFractionDigits\", ctx_r0.minFractionDigits)(\"maxFractionDigits\", ctx_r0.maxFractionDigits)(\"prefix\", ctx_r0.prefix)(\"suffix\", ctx_r0.suffix)(\"locale\", ctx_r0.locale)(\"localeMatcher\", ctx_r0.localeMatcher)(\"currency\", ctx_r0.currency)(\"currencyDisplay\", ctx_r0.currencyDisplay)(\"useGrouping\", ctx_r0.useGrouping);\n  }\n}\n\nconst _c33 = function (a0, a1) {\n  return {\n    \"p-column-filter-menu-button-open\": a0,\n    \"p-column-filter-menu-button-active\": a1\n  };\n};\n\nfunction ColumnFilter_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.toggleMenu();\n    })(\"keydown\", function ColumnFilter_button_2_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onToggleButtonKeyDown($event);\n    });\n    i0.ɵɵelement(2, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c33, ctx_r1.overlayVisible, ctx_r1.hasFilter()));\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r1.overlayVisible);\n  }\n}\n\nconst _c34 = function (a0) {\n  return {\n    \"p-hidden-space\": a0\n  };\n};\n\nfunction ColumnFilter_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9, 7);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clearFilter();\n    });\n    i0.ɵɵelement(2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c34, !ctx_r2.hasRowFilter()));\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c35 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction ColumnFilter_div_4_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_li_1_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const matchMode_r17 = ctx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.onRowMatchModeChange(matchMode_r17.value);\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return ctx_r21.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const matchMode_r17 = ctx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return ctx_r22.onRowMatchModeChange(matchMode_r17.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const matchMode_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c35, ctx_r16.isRowMatchModeSelected(matchMode_r17.value)));\n    i0.ɵɵattribute(\"tabindex\", i_r18 === 0 ? \"0\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(matchMode_r17.label);\n  }\n}\n\nfunction ColumnFilter_div_4_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 15);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ul_2_li_1_Template, 2, 5, \"li\", 16);\n    i0.ɵɵelement(2, \"li\", 17);\n    i0.ɵɵelementStart(3, \"li\", 18);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_Template_li_click_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onRowClearItemClick();\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_Template_li_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_Template_li_keydown_enter_3_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return ctx_r26.onRowClearItemClick();\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.matchModes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r12.noFilterLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"p-dropdown\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_0_Template_p_dropdown_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return ctx_r32.onOperatorChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r27.operatorOptions)(\"ngModel\", ctx_r27.operator);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(3);\n      return ctx_r38.onMenuMatchModeChange($event, fieldConstraint_r34);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n    const ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"options\", ctx_r36.matchModes)(\"ngModel\", fieldConstraint_r34.matchMode);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_2_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const fieldConstraint_r34 = i0.ɵɵnextContext().$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(3);\n      return ctx_r42.removeConstraint(fieldConstraint_r34);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"label\", ctx_r37.removeRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template, 1, 2, \"p-dropdown\", 30);\n    i0.ɵɵelement(2, \"p-columnFilterFormElement\", 31);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtemplate(4, ColumnFilter_div_4_ng_template_3_div_2_button_4_Template, 1, 1, \"button\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fieldConstraint_r34 = ctx.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showMatchModes && ctx_r28.matchModes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r28.type)(\"field\", ctx_r28.field)(\"filterConstraint\", fieldConstraint_r34)(\"filterTemplate\", ctx_r28.filterTemplate)(\"placeholder\", ctx_r28.placeholder)(\"minFractionDigits\", ctx_r28.minFractionDigits)(\"maxFractionDigits\", ctx_r28.maxFractionDigits)(\"prefix\", ctx_r28.prefix)(\"suffix\", ctx_r28.suffix)(\"locale\", ctx_r28.locale)(\"localeMatcher\", ctx_r28.localeMatcher)(\"currency\", ctx_r28.currency)(\"currencyDisplay\", ctx_r28.currencyDisplay)(\"useGrouping\", ctx_r28.useGrouping);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.showRemoveIcon);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_3_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      return ctx_r45.addConstraint();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", ctx_r29.addRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext(3);\n      return ctx_r47.clearFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r30.clearButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext(3);\n      return ctx_r49.applyFilter();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r31.applyButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ColumnFilter_div_4_ng_template_3_div_0_Template, 2, 2, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ng_template_3_div_2_Template, 5, 16, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_div_3_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_template_3_button_5_Template, 1, 1, \"button\", 25);\n    i0.ɵɵtemplate(6, ColumnFilter_div_4_ng_template_3_button_6_Template, 1, 1, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowOperator);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.fieldConstraints);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.isShowAddConstraint);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showClearButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showApplyButton);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c36 = function (a1) {\n  return {\n    \"p-column-filter-overlay p-component p-fluid\": true,\n    \"p-column-filter-overlay-menu\": a1\n  };\n};\n\nfunction ColumnFilter_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"@overlayAnimation.start\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.onOverlayAnimationStart($event);\n    })(\"keydown.escape\", function ColumnFilter_div_4_Template_div_keydown_escape_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return ctx_r53.onEscape();\n    });\n    i0.ɵɵtemplate(1, ColumnFilter_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵtemplate(2, ColumnFilter_div_4_ul_2_Template, 5, 2, \"ul\", 13);\n    i0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_Template, 7, 5, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, ColumnFilter_div_4_ng_container_5_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(4);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c36, ctx_r3.display === \"menu\"))(\"@overlayAnimation\", \"visible\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c7, ctx_r3.field));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.display === \"row\")(\"ngIfElse\", _r13);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c7, ctx_r3.field));\n  }\n}\n\nconst _c37 = function (a0, a1) {\n  return {\n    \"p-column-filter-row\": a0,\n    \"p-column-filter-menu\": a1\n  };\n};\n\nclass TableService {\n  constructor() {\n    this.sortSource = new Subject();\n    this.selectionSource = new Subject();\n    this.contextMenuSource = new Subject();\n    this.valueSource = new Subject();\n    this.totalRecordsSource = new Subject();\n    this.columnsSource = new Subject();\n    this.resetSource = new Subject();\n    this.sortSource$ = this.sortSource.asObservable();\n    this.selectionSource$ = this.selectionSource.asObservable();\n    this.contextMenuSource$ = this.contextMenuSource.asObservable();\n    this.valueSource$ = this.valueSource.asObservable();\n    this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    this.columnsSource$ = this.columnsSource.asObservable();\n    this.resetSource$ = this.resetSource.asObservable();\n  }\n\n  onSort(sortMeta) {\n    this.sortSource.next(sortMeta);\n  }\n\n  onSelectionChange() {\n    this.selectionSource.next();\n  }\n\n  onResetChange() {\n    this.resetSource.next();\n  }\n\n  onContextMenu(data) {\n    this.contextMenuSource.next(data);\n  }\n\n  onValueChange(value) {\n    this.valueSource.next(value);\n  }\n\n  onTotalRecordsChange(value) {\n    this.totalRecordsSource.next(value);\n  }\n\n  onColumnsChange(columns) {\n    this.columnsSource.next(columns);\n  }\n\n}\n\nTableService.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableService,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.Injectable\n});\nTableService.ɵprov = i0.ɵɵngDeclareInjectable({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableService\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableService,\n  decorators: [{\n    type: Injectable\n  }]\n});\n\nclass Table {\n  constructor(el, zone, tableService, cd, filterService) {\n    this.el = el;\n    this.zone = zone;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.filterService = filterService;\n    this.pageLinks = 5;\n    this.alwaysShowPaginator = true;\n    this.paginatorPosition = 'bottom';\n    this.paginatorDropdownScrollHeight = '200px';\n    this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n    this.showFirstLastIcon = true;\n    this.showPageLinks = true;\n    this.defaultSortOrder = 1;\n    this.sortMode = 'single';\n    this.resetPageOnSort = true;\n    this.selectionChange = new EventEmitter();\n    this.contextMenuSelectionChange = new EventEmitter();\n    this.contextMenuSelectionMode = \"separate\";\n\n    this.rowTrackBy = (index, item) => item;\n\n    this.lazy = false;\n    this.lazyLoadOnInit = true;\n    this.compareSelectionBy = 'deepEquals';\n    this.csvSeparator = ',';\n    this.exportFilename = 'download';\n    this.filters = {};\n    this.filterDelay = 300;\n    this.expandedRowKeys = {};\n    this.editingRowKeys = {};\n    this.rowExpandMode = 'multiple';\n    this.virtualScrollDelay = 250;\n    this.virtualRowHeight = 28;\n    this.columnResizeMode = 'fit';\n    this.loadingIcon = 'pi pi-spinner';\n    this.showLoader = true;\n    this.showInitialSortBadge = true;\n    this.stateStorage = 'session';\n    this.editMode = 'cell';\n    this.onRowSelect = new EventEmitter();\n    this.onRowUnselect = new EventEmitter();\n    this.onPage = new EventEmitter();\n    this.onSort = new EventEmitter();\n    this.onFilter = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n    this.onRowExpand = new EventEmitter();\n    this.onRowCollapse = new EventEmitter();\n    this.onContextMenuSelect = new EventEmitter();\n    this.onColResize = new EventEmitter();\n    this.onColReorder = new EventEmitter();\n    this.onRowReorder = new EventEmitter();\n    this.onEditInit = new EventEmitter();\n    this.onEditComplete = new EventEmitter();\n    this.onEditCancel = new EventEmitter();\n    this.onHeaderCheckboxToggle = new EventEmitter();\n    this.sortFunction = new EventEmitter();\n    this.firstChange = new EventEmitter();\n    this.rowsChange = new EventEmitter();\n    this.onStateSave = new EventEmitter();\n    this.onStateRestore = new EventEmitter();\n    this._value = [];\n    this._totalRecords = 0;\n    this._first = 0;\n    this.selectionKeys = {};\n    this._sortOrder = 1;\n  }\n\n  ngOnInit() {\n    if (this.lazy && this.lazyLoadOnInit) {\n      if (!this.virtualScroll) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      }\n\n      if (this.restoringFilter) {\n        this.restoringFilter = false;\n      }\n    }\n\n    this.initialized = true;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n\n        case 'loadingbody':\n          this.loadingBodyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n\n        case 'rowexpansion':\n          this.expandedRowTemplate = item.template;\n          break;\n\n        case 'frozenrows':\n          this.frozenRowsTemplate = item.template;\n          break;\n\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n\n        case 'frozenrowexpansion':\n          this.frozenExpandedRowTemplate = item.template;\n          break;\n\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.isStateful() && this.resizableColumns) {\n      this.restoreColumnWidths();\n    }\n  }\n\n  ngOnChanges(simpleChange) {\n    if (simpleChange.value) {\n      if (this.isStateful() && !this.stateRestored) {\n        this.restoreState();\n      }\n\n      this._value = simpleChange.value.currentValue;\n\n      if (!this.lazy) {\n        this.totalRecords = this._value ? this._value.length : 0;\n        if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter()) //sort already filters\n          this._filter();\n      }\n\n      this.tableService.onValueChange(simpleChange.value.currentValue);\n    }\n\n    if (simpleChange.columns) {\n      this._columns = simpleChange.columns.currentValue;\n      this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n      if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n        this.restoreColumnOrder();\n      }\n    }\n\n    if (simpleChange.sortField) {\n      this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.sortOrder) {\n      this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n\n    if (simpleChange.multiSortMeta) {\n      this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n\n      if (this.sortMode === 'multiple' && (this.initialized || !this.lazy && !this.virtualScroll)) {\n        this.sortMultiple();\n      }\n    }\n\n    if (simpleChange.selection) {\n      this._selection = simpleChange.selection.currentValue;\n\n      if (!this.preventSelectionSetterPropagation) {\n        this.updateSelectionKeys();\n        this.tableService.onSelectionChange();\n      }\n\n      this.preventSelectionSetterPropagation = false;\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  set columns(cols) {\n    this._columns = cols;\n  }\n\n  get first() {\n    return this._first;\n  }\n\n  set first(val) {\n    this._first = val;\n  }\n\n  get rows() {\n    return this._rows;\n  }\n\n  set rows(val) {\n    this._rows = val;\n  }\n\n  get totalRecords() {\n    return this._totalRecords;\n  }\n\n  set totalRecords(val) {\n    this._totalRecords = val;\n    this.tableService.onTotalRecordsChange(this._totalRecords);\n  }\n\n  get sortField() {\n    return this._sortField;\n  }\n\n  set sortField(val) {\n    this._sortField = val;\n  }\n\n  get sortOrder() {\n    return this._sortOrder;\n  }\n\n  set sortOrder(val) {\n    this._sortOrder = val;\n  }\n\n  get multiSortMeta() {\n    return this._multiSortMeta;\n  }\n\n  set multiSortMeta(val) {\n    this._multiSortMeta = val;\n  }\n\n  get selection() {\n    return this._selection;\n  }\n\n  set selection(val) {\n    this._selection = val;\n  }\n\n  updateSelectionKeys() {\n    if (this.dataKey && this._selection) {\n      this.selectionKeys = {};\n\n      if (Array.isArray(this._selection)) {\n        for (let data of this._selection) {\n          this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n        }\n      } else {\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n      }\n    }\n  }\n\n  onPageChange(event) {\n    this.first = event.first;\n    this.rows = event.rows;\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    }\n\n    this.onPage.emit({\n      first: this.first,\n      rows: this.rows\n    });\n    this.firstChange.emit(this.first);\n    this.rowsChange.emit(this.rows);\n    this.tableService.onValueChange(this.value);\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.anchorRowIndex = null;\n\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n\n  sort(event) {\n    let originalEvent = event.originalEvent;\n\n    if (this.sortMode === 'single') {\n      this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n      this._sortField = event.field;\n\n      if (this.resetPageOnSort) {\n        this._first = 0;\n        this.firstChange.emit(this._first);\n\n        if (this.scrollable) {\n          this.resetScrollTop();\n        }\n      }\n\n      this.sortSingle();\n    }\n\n    if (this.sortMode === 'multiple') {\n      let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n      let sortMeta = this.getSortMeta(event.field);\n\n      if (sortMeta) {\n        if (!metaKey) {\n          this._multiSortMeta = [{\n            field: event.field,\n            order: sortMeta.order * -1\n          }];\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n\n            if (this.scrollable) {\n              this.resetScrollTop();\n            }\n          }\n        } else {\n          sortMeta.order = sortMeta.order * -1;\n        }\n      } else {\n        if (!metaKey || !this.multiSortMeta) {\n          this._multiSortMeta = [];\n\n          if (this.resetPageOnSort) {\n            this._first = 0;\n            this.firstChange.emit(this._first);\n          }\n        }\n\n        this._multiSortMeta.push({\n          field: event.field,\n          order: this.defaultSortOrder\n        });\n      }\n\n      this.sortMultiple();\n    }\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n\n    this.anchorRowIndex = null;\n  }\n\n  sortSingle() {\n    if (this.sortField && this.sortOrder) {\n      if (this.restoringSort) {\n        this.restoringSort = false;\n      }\n\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        if (this.customSort) {\n          this.sortFunction.emit({\n            data: this.value,\n            mode: this.sortMode,\n            field: this.sortField,\n            order: this.sortOrder\n          });\n        } else {\n          this.value.sort((data1, data2) => {\n            let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n            let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n            let result = null;\n            if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n            return this.sortOrder * result;\n          });\n          this._value = [...this.value];\n        }\n\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n\n      let sortMeta = {\n        field: this.sortField,\n        order: this.sortOrder\n      };\n      this.onSort.emit(sortMeta);\n      this.tableService.onSort(sortMeta);\n    }\n  }\n\n  sortMultiple() {\n    if (this.multiSortMeta) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        if (this.customSort) {\n          this.sortFunction.emit({\n            data: this.value,\n            mode: this.sortMode,\n            multiSortMeta: this.multiSortMeta\n          });\n        } else {\n          this.value.sort((data1, data2) => {\n            return this.multisortField(data1, data2, this.multiSortMeta, 0);\n          });\n          this._value = [...this.value];\n        }\n\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n\n      this.onSort.emit({\n        multisortmeta: this.multiSortMeta\n      });\n      this.tableService.onSort(this.multiSortMeta);\n    }\n  }\n\n  multisortField(data1, data2, multiSortMeta, index) {\n    let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n    let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n    let result = null;\n    if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 == 'string' || value1 instanceof String) {\n      if (value1.localeCompare && value1 != value2) {\n        return multiSortMeta[index].order * value1.localeCompare(value2);\n      }\n    } else {\n      result = value1 < value2 ? -1 : 1;\n    }\n\n    if (value1 == value2) {\n      return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;\n    }\n\n    return multiSortMeta[index].order * result;\n  }\n\n  getSortMeta(field) {\n    if (this.multiSortMeta && this.multiSortMeta.length) {\n      for (let i = 0; i < this.multiSortMeta.length; i++) {\n        if (this.multiSortMeta[i].field === field) {\n          return this.multiSortMeta[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  isSorted(field) {\n    if (this.sortMode === 'single') {\n      return this.sortField && this.sortField === field;\n    } else if (this.sortMode === 'multiple') {\n      let sorted = false;\n\n      if (this.multiSortMeta) {\n        for (let i = 0; i < this.multiSortMeta.length; i++) {\n          if (this.multiSortMeta[i].field == field) {\n            sorted = true;\n            break;\n          }\n        }\n      }\n\n      return sorted;\n    }\n  }\n\n  handleRowClick(event) {\n    let target = event.originalEvent.target;\n    let targetNode = target.nodeName;\n    let parentNode = target.parentElement && target.parentElement.nodeName;\n\n    if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n      return;\n    }\n\n    if (this.selectionMode) {\n      this.preventSelectionSetterPropagation = true;\n\n      if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n        DomHandler.clearSelection();\n\n        if (this.rangeRowIndex != null) {\n          this.clearSelectionRange(event.originalEvent);\n        }\n\n        this.rangeRowIndex = event.rowIndex;\n        this.selectRange(event.originalEvent, event.rowIndex);\n      } else {\n        let rowData = event.rowData;\n        let selected = this.isSelected(rowData);\n        let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.anchorRowIndex = event.rowIndex;\n        this.rangeRowIndex = event.rowIndex;\n\n        if (metaSelection) {\n          let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n\n          if (selected && metaKey) {\n            if (this.isSingleSelectionMode()) {\n              this._selection = null;\n              this.selectionKeys = {};\n              this.selectionChange.emit(null);\n            } else {\n              let selectionIndex = this.findIndexInSelection(rowData);\n              this._selection = this.selection.filter((val, i) => i != selectionIndex);\n              this.selectionChange.emit(this.selection);\n\n              if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n              }\n            }\n\n            this.onRowUnselect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              type: 'row'\n            });\n          } else {\n            if (this.isSingleSelectionMode()) {\n              this._selection = rowData;\n              this.selectionChange.emit(rowData);\n\n              if (dataKeyValue) {\n                this.selectionKeys = {};\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            } else if (this.isMultipleSelectionMode()) {\n              if (metaKey) {\n                this._selection = this.selection || [];\n              } else {\n                this._selection = [];\n                this.selectionKeys = {};\n              }\n\n              this._selection = [...this.selection, rowData];\n              this.selectionChange.emit(this.selection);\n\n              if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n\n            this.onRowSelect.emit({\n              originalEvent: event.originalEvent,\n              data: rowData,\n              type: 'row',\n              index: event.rowIndex\n            });\n          }\n        } else {\n          if (this.selectionMode === 'single') {\n            if (selected) {\n              this._selection = null;\n              this.selectionKeys = {};\n              this.selectionChange.emit(this.selection);\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n            } else {\n              this._selection = rowData;\n              this.selectionChange.emit(this.selection);\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n\n              if (dataKeyValue) {\n                this.selectionKeys = {};\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n          } else if (this.selectionMode === 'multiple') {\n            if (selected) {\n              let selectionIndex = this.findIndexInSelection(rowData);\n              this._selection = this.selection.filter((val, i) => i != selectionIndex);\n              this.selectionChange.emit(this.selection);\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n\n              if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n              }\n            } else {\n              this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n              this.selectionChange.emit(this.selection);\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n\n              if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n              }\n            }\n          }\n        }\n      }\n\n      this.tableService.onSelectionChange();\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n\n    this.rowTouched = false;\n  }\n\n  handleRowTouchEnd(event) {\n    this.rowTouched = true;\n  }\n\n  handleRowRightClick(event) {\n    if (this.contextMenu) {\n      const rowData = event.rowData;\n\n      if (this.contextMenuSelectionMode === 'separate') {\n        this.contextMenuSelection = rowData;\n        this.contextMenuSelectionChange.emit(rowData);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          data: rowData,\n          index: event.rowIndex\n        });\n        this.contextMenu.show(event.originalEvent);\n        this.tableService.onContextMenu(rowData);\n      } else if (this.contextMenuSelectionMode === 'joint') {\n        this.preventSelectionSetterPropagation = true;\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n        if (!selected) {\n          if (this.isSingleSelectionMode()) {\n            this.selection = rowData;\n            this.selectionChange.emit(rowData);\n\n            if (dataKeyValue) {\n              this.selectionKeys = {};\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          } else if (this.isMultipleSelectionMode()) {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n        }\n\n        this.tableService.onSelectionChange();\n        this.contextMenu.show(event.originalEvent);\n        this.onContextMenuSelect.emit({\n          originalEvent: event,\n          data: rowData,\n          index: event.rowIndex\n        });\n      }\n    }\n  }\n\n  selectRange(event, rowIndex) {\n    let rangeStart, rangeEnd;\n\n    if (this.anchorRowIndex > rowIndex) {\n      rangeStart = rowIndex;\n      rangeEnd = this.anchorRowIndex;\n    } else if (this.anchorRowIndex < rowIndex) {\n      rangeStart = this.anchorRowIndex;\n      rangeEnd = rowIndex;\n    } else {\n      rangeStart = rowIndex;\n      rangeEnd = rowIndex;\n    }\n\n    if (this.lazy && this.paginator) {\n      rangeStart -= this.first;\n      rangeEnd -= this.first;\n    }\n\n    let rangeRowsData = [];\n\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n\n      if (!this.isSelected(rangeRowData)) {\n        rangeRowsData.push(rangeRowData);\n        this._selection = [...this.selection, rangeRowData];\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n        if (dataKeyValue) {\n          this.selectionKeys[dataKeyValue] = 1;\n        }\n      }\n    }\n\n    this.selectionChange.emit(this.selection);\n    this.onRowSelect.emit({\n      originalEvent: event,\n      data: rangeRowsData,\n      type: 'row'\n    });\n  }\n\n  clearSelectionRange(event) {\n    let rangeStart, rangeEnd;\n\n    if (this.rangeRowIndex > this.anchorRowIndex) {\n      rangeStart = this.anchorRowIndex;\n      rangeEnd = this.rangeRowIndex;\n    } else if (this.rangeRowIndex < this.anchorRowIndex) {\n      rangeStart = this.rangeRowIndex;\n      rangeEnd = this.anchorRowIndex;\n    } else {\n      rangeStart = this.rangeRowIndex;\n      rangeEnd = this.rangeRowIndex;\n    }\n\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      let rangeRowData = this.value[i];\n      let selectionIndex = this.findIndexInSelection(rangeRowData);\n      this._selection = this.selection.filter((val, i) => i != selectionIndex);\n      let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n\n      this.onRowUnselect.emit({\n        originalEvent: event,\n        data: rangeRowData,\n        type: 'row'\n      });\n    }\n  }\n\n  isSelected(rowData) {\n    if (rowData && this.selection) {\n      if (this.dataKey) {\n        return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n      } else {\n        if (this.selection instanceof Array) return this.findIndexInSelection(rowData) > -1;else return this.equals(rowData, this.selection);\n      }\n    }\n\n    return false;\n  }\n\n  findIndexInSelection(rowData) {\n    let index = -1;\n\n    if (this.selection && this.selection.length) {\n      for (let i = 0; i < this.selection.length; i++) {\n        if (this.equals(rowData, this.selection[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  toggleRowWithRadio(event, rowData) {\n    this.preventSelectionSetterPropagation = true;\n\n    if (this.selection != rowData) {\n      this._selection = rowData;\n      this.selectionChange.emit(this.selection);\n      this.onRowSelect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'radiobutton'\n      });\n\n      if (this.dataKey) {\n        this.selectionKeys = {};\n        this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n      }\n    } else {\n      this._selection = null;\n      this.selectionChange.emit(this.selection);\n      this.onRowUnselect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'radiobutton'\n      });\n    }\n\n    this.tableService.onSelectionChange();\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  toggleRowWithCheckbox(event, rowData) {\n    this.selection = this.selection || [];\n    let selected = this.isSelected(rowData);\n    let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n    this.preventSelectionSetterPropagation = true;\n\n    if (selected) {\n      let selectionIndex = this.findIndexInSelection(rowData);\n      this._selection = this.selection.filter((val, i) => i != selectionIndex);\n      this.selectionChange.emit(this.selection);\n      this.onRowUnselect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'checkbox'\n      });\n\n      if (dataKeyValue) {\n        delete this.selectionKeys[dataKeyValue];\n      }\n    } else {\n      this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n      this.selectionChange.emit(this.selection);\n      this.onRowSelect.emit({\n        originalEvent: event.originalEvent,\n        index: event.rowIndex,\n        data: rowData,\n        type: 'checkbox'\n      });\n\n      if (dataKeyValue) {\n        this.selectionKeys[dataKeyValue] = 1;\n      }\n    }\n\n    this.tableService.onSelectionChange();\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  toggleRowsWithCheckbox(event, check) {\n    this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\n    this.preventSelectionSetterPropagation = true;\n    this.updateSelectionKeys();\n    this.selectionChange.emit(this._selection);\n    this.tableService.onSelectionChange();\n    this.onHeaderCheckboxToggle.emit({\n      originalEvent: event,\n      checked: check\n    });\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  equals(data1, data2) {\n    return this.compareSelectionBy === 'equals' ? data1 === data2 : ObjectUtils.equals(data1, data2, this.dataKey);\n  }\n  /* Legacy Filtering for custom elements */\n\n\n  filter(value, field, matchMode) {\n    if (this.filterTimeout) {\n      clearTimeout(this.filterTimeout);\n    }\n\n    if (!this.isFilterBlank(value)) {\n      this.filters[field] = {\n        value: value,\n        matchMode: matchMode\n      };\n    } else if (this.filters[field]) {\n      delete this.filters[field];\n    }\n\n    this.filterTimeout = setTimeout(() => {\n      this._filter();\n\n      this.filterTimeout = null;\n    }, this.filterDelay);\n    this.anchorRowIndex = null;\n  }\n\n  filterGlobal(value, matchMode) {\n    this.filter(value, 'global', matchMode);\n  }\n\n  isFilterBlank(filter) {\n    if (filter !== null && filter !== undefined) {\n      if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;\n    }\n\n    return true;\n  }\n\n  _filter() {\n    if (!this.restoringFilter) {\n      this.first = 0;\n      this.firstChange.emit(this.first);\n    }\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      if (!this.value) {\n        return;\n      }\n\n      if (!this.hasFilter()) {\n        this.filteredValue = null;\n\n        if (this.paginator) {\n          this.totalRecords = this.value ? this.value.length : 0;\n        }\n      } else {\n        let globalFilterFieldsArray;\n\n        if (this.filters['global']) {\n          if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n        }\n\n        this.filteredValue = [];\n\n        for (let i = 0; i < this.value.length; i++) {\n          let localMatch = true;\n          let globalMatch = false;\n          let localFiltered = false;\n\n          for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n              localFiltered = true;\n              let filterField = prop;\n              let filterMeta = this.filters[filterField];\n\n              if (Array.isArray(filterMeta)) {\n                for (let meta of filterMeta) {\n                  localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                  if (meta.operator === FilterOperator.OR && localMatch || meta.operator === FilterOperator.AND && !localMatch) {\n                    break;\n                  }\n                }\n              } else {\n                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n              }\n\n              if (!localMatch) {\n                break;\n              }\n            }\n          }\n\n          if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n            for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n              let globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n              globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n\n              if (globalMatch) {\n                break;\n              }\n            }\n          }\n\n          let matches;\n\n          if (this.filters['global']) {\n            matches = localFiltered ? localFiltered && localMatch && globalMatch : globalMatch;\n          } else {\n            matches = localFiltered && localMatch;\n          }\n\n          if (matches) {\n            this.filteredValue.push(this.value[i]);\n          }\n        }\n\n        if (this.filteredValue.length === this.value.length) {\n          this.filteredValue = null;\n        }\n\n        if (this.paginator) {\n          this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n        }\n      }\n    }\n\n    this.onFilter.emit({\n      filters: this.filters,\n      filteredValue: this.filteredValue || this.value\n    });\n    this.tableService.onValueChange(this.value);\n\n    if (this.isStateful() && !this.restoringFilter) {\n      this.saveState();\n    }\n\n    if (this.restoringFilter) {\n      this.restoringFilter = false;\n    }\n\n    this.cd.markForCheck();\n\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n\n  executeLocalFilter(field, rowData, filterMeta) {\n    let filterValue = filterMeta.value;\n    let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n    let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n    let filterConstraint = this.filterService.filters[filterMatchMode];\n    return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n  }\n\n  hasFilter() {\n    let empty = true;\n\n    for (let prop in this.filters) {\n      if (this.filters.hasOwnProperty(prop)) {\n        empty = false;\n        break;\n      }\n    }\n\n    return !empty;\n  }\n\n  createLazyLoadMetadata() {\n    return {\n      first: this.first,\n      rows: this.rows,\n      sortField: this.sortField,\n      sortOrder: this.sortOrder,\n      filters: this.filters,\n      globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n      multiSortMeta: this.multiSortMeta\n    };\n  }\n\n  clear() {\n    this._sortField = null;\n    this._sortOrder = this.defaultSortOrder;\n    this._multiSortMeta = null;\n    this.tableService.onSort(null);\n    this.filteredValue = null;\n    this.tableService.onResetChange();\n    this.first = 0;\n    this.firstChange.emit(this.first);\n\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = this._value ? this._value.length : 0;\n    }\n  }\n\n  reset() {\n    this.clear();\n  }\n\n  exportCSV(options) {\n    let data;\n    let csv = '';\n    let columns = this.frozenColumns ? [...this.frozenColumns, ...this.columns] : this.columns;\n\n    if (options && options.selectionOnly) {\n      data = this.selection || [];\n    } else {\n      data = this.filteredValue || this.value;\n\n      if (this.frozenValue) {\n        data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n      }\n    } //headers\n\n\n    for (let i = 0; i < columns.length; i++) {\n      let column = columns[i];\n\n      if (column.exportable !== false && column.field) {\n        csv += '\"' + (column.header || column.field) + '\"';\n\n        if (i < columns.length - 1) {\n          csv += this.csvSeparator;\n        }\n      }\n    } //body\n\n\n    data.forEach((record, i) => {\n      csv += '\\n';\n\n      for (let i = 0; i < columns.length; i++) {\n        let column = columns[i];\n\n        if (column.exportable !== false && column.field) {\n          let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n          if (cellData != null) {\n            if (this.exportFunction) {\n              cellData = this.exportFunction({\n                data: cellData,\n                field: column.field\n              });\n            } else cellData = String(cellData).replace(/\"/g, '\"\"');\n          } else cellData = '';\n\n          csv += '\"' + cellData + '\"';\n\n          if (i < columns.length - 1) {\n            csv += this.csvSeparator;\n          }\n        }\n      }\n    });\n    let blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n\n    if (window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n    } else {\n      let link = document.createElement(\"a\");\n      link.style.display = 'none';\n      document.body.appendChild(link);\n\n      if (link.download !== undefined) {\n        link.setAttribute('href', URL.createObjectURL(blob));\n        link.setAttribute('download', this.exportFilename + '.csv');\n        link.click();\n      } else {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n        window.open(encodeURI(csv));\n      }\n\n      document.body.removeChild(link);\n    }\n  }\n\n  resetScrollTop() {\n    if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n      top: 0\n    });\n  }\n\n  scrollToVirtualIndex(index) {\n    if (this.scrollableViewChild) {\n      this.scrollableViewChild.scrollToVirtualIndex(index);\n    }\n\n    if (this.scrollableFrozenViewChild) {\n      this.scrollableFrozenViewChild.scrollToVirtualIndex(index);\n    }\n  }\n\n  scrollTo(options) {\n    if (this.scrollableViewChild) {\n      this.scrollableViewChild.scrollTo(options);\n    }\n\n    if (this.scrollableFrozenViewChild) {\n      this.scrollableFrozenViewChild.scrollTo(options);\n    }\n  }\n\n  updateEditingCell(cell, data, field, index) {\n    this.editingCell = cell;\n    this.editingCellData = data;\n    this.editingCellField = field;\n    this.editingCellRowIndex = index;\n    this.bindDocumentEditListener();\n  }\n\n  isEditingCellValid() {\n    return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n  }\n\n  bindDocumentEditListener() {\n    if (!this.documentEditListener) {\n      this.documentEditListener = event => {\n        if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n          DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n          this.editingCell = null;\n          this.onEditComplete.emit({\n            field: this.editingCellField,\n            data: this.editingCellData,\n            originalEvent: event,\n            index: this.editingCellRowIndex\n          });\n          this.editingCellField = null;\n          this.editingCellData = null;\n          this.editingCellRowIndex = null;\n          this.unbindDocumentEditListener();\n          this.cd.markForCheck();\n        }\n\n        this.editingCellClick = false;\n      };\n\n      document.addEventListener('click', this.documentEditListener);\n    }\n  }\n\n  unbindDocumentEditListener() {\n    if (this.documentEditListener) {\n      document.removeEventListener('click', this.documentEditListener);\n      this.documentEditListener = null;\n    }\n  }\n\n  initRowEdit(rowData) {\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n    this.editingRowKeys[dataKeyValue] = true;\n  }\n\n  saveRowEdit(rowData, rowElement) {\n    if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n      let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n      delete this.editingRowKeys[dataKeyValue];\n    }\n  }\n\n  cancelRowEdit(rowData) {\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n    delete this.editingRowKeys[dataKeyValue];\n  }\n\n  toggleRow(rowData, event) {\n    if (!this.dataKey) {\n      throw new Error('dataKey must be defined to use row expansion');\n    }\n\n    let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n    if (this.expandedRowKeys[dataKeyValue] != null) {\n      delete this.expandedRowKeys[dataKeyValue];\n      this.onRowCollapse.emit({\n        originalEvent: event,\n        data: rowData\n      });\n    } else {\n      if (this.rowExpandMode === 'single') {\n        this.expandedRowKeys = {};\n      }\n\n      this.expandedRowKeys[dataKeyValue] = true;\n      this.onRowExpand.emit({\n        originalEvent: event,\n        data: rowData\n      });\n    }\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (this.isStateful()) {\n      this.saveState();\n    }\n  }\n\n  isRowExpanded(rowData) {\n    return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n  }\n\n  isRowEditing(rowData) {\n    return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n  }\n\n  isSingleSelectionMode() {\n    return this.selectionMode === 'single';\n  }\n\n  isMultipleSelectionMode() {\n    return this.selectionMode === 'multiple';\n  }\n\n  onColumnResizeBegin(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n    this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;\n    this.onColumnResize(event);\n    event.preventDefault();\n  }\n\n  onColumnResize(event) {\n    let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n    this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n    this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';\n    this.resizeHelperViewChild.nativeElement.style.display = 'block';\n  }\n\n  onColumnResizeEnd(event, column) {\n    let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n    let columnWidth = column.offsetWidth;\n    let minWidth = parseInt(column.style.minWidth || 15);\n\n    if (columnWidth + delta < minWidth) {\n      delta = minWidth - columnWidth;\n    }\n\n    const newColumnWidth = columnWidth + delta;\n\n    if (newColumnWidth >= minWidth) {\n      if (this.columnResizeMode === 'fit') {\n        let nextColumn = column.nextElementSibling;\n\n        while (!nextColumn.offsetParent) {\n          nextColumn = nextColumn.nextElementSibling;\n        }\n\n        if (nextColumn) {\n          let nextColumnWidth = nextColumn.offsetWidth - delta;\n          let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n\n          if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n            if (this.scrollable) {\n              let scrollableView = this.findParentScrollableView(column);\n              let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-datatable-virtual-scrollable-body table');\n              let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n              let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n              let resizeColumnIndex = DomHandler.index(column);\n              this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n            } else {\n              column.style.width = newColumnWidth + 'px';\n\n              if (nextColumn) {\n                nextColumn.style.width = nextColumnWidth + 'px';\n              }\n            }\n          }\n        }\n      } else if (this.columnResizeMode === 'expand') {\n        if (newColumnWidth >= minWidth) {\n          if (this.scrollable) {\n            this.setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta);\n          } else {\n            this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\n            column.style.width = newColumnWidth + 'px';\n            let containerWidth = this.tableViewChild.nativeElement.style.width;\n            this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n          }\n        }\n      }\n\n      this.onColResize.emit({\n        element: column,\n        delta: delta\n      });\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n\n    this.resizeHelperViewChild.nativeElement.style.display = 'none';\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n  }\n\n  setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {\n    let scrollableView = column ? this.findParentScrollableView(column) : this.containerViewChild.nativeElement;\n    let scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport');\n    let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n    let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n    let scrollableBodyTable = DomHandler.findSingle(scrollableBody, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport table');\n    let scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n    let scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n    const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n    const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n    const isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n\n    let setWidth = (container, table, width, isContainerInViewport) => {\n      if (container && table) {\n        container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n        table.style.width = width + 'px';\n      }\n    };\n\n    setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n    setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n    setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n    if (column) {\n      let resizeColumnIndex = DomHandler.index(column);\n      this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n      this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n      this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n    }\n  }\n\n  findParentScrollableView(column) {\n    if (column) {\n      let parent = column.parentElement;\n\n      while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n        parent = parent.parentElement;\n      }\n\n      return parent;\n    } else {\n      return null;\n    }\n  }\n\n  resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n    if (table) {\n      let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n      if (colGroup) {\n        let col = colGroup.children[resizeColumnIndex];\n        let nextCol = col.nextElementSibling;\n        col.style.width = newColumnWidth + 'px';\n\n        if (nextCol && nextColumnWidth) {\n          nextCol.style.width = nextColumnWidth + 'px';\n        }\n      } else {\n        throw \"Scrollable tables require a colgroup to support resizable columns\";\n      }\n    }\n  }\n\n  onColumnDragStart(event, columnElement) {\n    this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n    this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n    this.draggedColumn = columnElement;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onColumnDragEnter(event, dropHeader) {\n    if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n      event.preventDefault();\n      let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n      let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n      if (this.draggedColumn != dropHeader) {\n        let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n        let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n        let targetLeft = dropHeaderOffset.left - containerOffset.left;\n        let targetTop = containerOffset.top - dropHeaderOffset.top;\n        let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n        this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n        this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n        if (event.pageX > columnCenter) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = 1;\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = -1;\n        }\n\n        if (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dropIndex - dragIndex === -1 && this.dropPosition === 1) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n          this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n        }\n      } else {\n        event.dataTransfer.dropEffect = 'none';\n      }\n    }\n  }\n\n  onColumnDragLeave(event) {\n    if (this.reorderableColumns && this.draggedColumn) {\n      event.preventDefault();\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n    }\n  }\n\n  onColumnDrop(event, dropColumn) {\n    event.preventDefault();\n\n    if (this.draggedColumn) {\n      let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n      let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n      let allowDrop = dragIndex != dropIndex;\n\n      if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n        allowDrop = false;\n      }\n\n      if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n        dropIndex = dropIndex + 1;\n      }\n\n      if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n        dropIndex = dropIndex - 1;\n      }\n\n      if (allowDrop) {\n        ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n        this.onColReorder.emit({\n          dragIndex: dragIndex,\n          dropIndex: dropIndex,\n          columns: this.columns\n        });\n\n        if (this.isStateful()) {\n          this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n              this.saveState();\n            });\n          });\n        }\n      }\n\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n      this.draggedColumn.draggable = false;\n      this.draggedColumn = null;\n      this.dropPosition = null;\n    }\n  }\n\n  onRowDragStart(event, index) {\n    this.rowDragging = true;\n    this.draggedRowIndex = index;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n\n  onRowDragOver(event, index, rowElement) {\n    if (this.rowDragging && this.draggedRowIndex !== index) {\n      let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n      let pageY = event.pageY;\n      let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n      let prevRowElement = rowElement.previousElementSibling;\n\n      if (pageY < rowMidY) {\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        this.droppedRowIndex = index;\n        if (prevRowElement) DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n      } else {\n        if (prevRowElement) DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n        this.droppedRowIndex = index + 1;\n        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n      }\n    }\n  }\n\n  onRowDragLeave(event, rowElement) {\n    let prevRowElement = rowElement.previousElementSibling;\n\n    if (prevRowElement) {\n      DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n    }\n\n    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n  }\n\n  onRowDragEnd(event) {\n    this.rowDragging = false;\n    this.draggedRowIndex = null;\n    this.droppedRowIndex = null;\n  }\n\n  onRowDrop(event, rowElement) {\n    if (this.droppedRowIndex != null) {\n      let dropIndex = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1;\n      ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n      this.onRowReorder.emit({\n        dragIndex: this.draggedRowIndex,\n        dropIndex: dropIndex\n      });\n    } //cleanup\n\n\n    this.onRowDragLeave(event, rowElement);\n    this.onRowDragEnd(event);\n  }\n\n  isEmpty() {\n    let data = this.filteredValue || this.value;\n    return data == null || data.length == 0;\n  }\n\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n\n  getStorage() {\n    switch (this.stateStorage) {\n      case 'local':\n        return window.localStorage;\n\n      case 'session':\n        return window.sessionStorage;\n\n      default:\n        throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n    }\n  }\n\n  isStateful() {\n    return this.stateKey != null;\n  }\n\n  saveState() {\n    const storage = this.getStorage();\n    let state = {};\n\n    if (this.paginator) {\n      state.first = this.first;\n      state.rows = this.rows;\n    }\n\n    if (this.sortField) {\n      state.sortField = this.sortField;\n      state.sortOrder = this.sortOrder;\n    }\n\n    if (this.multiSortMeta) {\n      state.multiSortMeta = this.multiSortMeta;\n    }\n\n    if (this.hasFilter()) {\n      state.filters = this.filters;\n    }\n\n    if (this.resizableColumns) {\n      this.saveColumnWidths(state);\n    }\n\n    if (this.reorderableColumns) {\n      this.saveColumnOrder(state);\n    }\n\n    if (this.selection) {\n      state.selection = this.selection;\n    }\n\n    if (Object.keys(this.expandedRowKeys).length) {\n      state.expandedRowKeys = this.expandedRowKeys;\n    }\n\n    storage.setItem(this.stateKey, JSON.stringify(state));\n    this.onStateSave.emit(state);\n  }\n\n  clearState() {\n    const storage = this.getStorage();\n\n    if (this.stateKey) {\n      storage.removeItem(this.stateKey);\n    }\n  }\n\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n    const reviver = function (key, value) {\n      if (typeof value === \"string\" && dateFormat.test(value)) {\n        return new Date(value);\n      }\n\n      return value;\n    };\n\n    if (stateString) {\n      let state = JSON.parse(stateString, reviver);\n\n      if (this.paginator) {\n        if (this.first !== undefined) {\n          this.first = state.first;\n          this.firstChange.emit(this.first);\n        }\n\n        if (this.rows !== undefined) {\n          this.rows = state.rows;\n          this.rowsChange.emit(this.rows);\n        }\n      }\n\n      if (state.sortField) {\n        this.restoringSort = true;\n        this._sortField = state.sortField;\n        this._sortOrder = state.sortOrder;\n      }\n\n      if (state.multiSortMeta) {\n        this.restoringSort = true;\n        this._multiSortMeta = state.multiSortMeta;\n      }\n\n      if (state.filters) {\n        this.restoringFilter = true;\n        this.filters = state.filters;\n      }\n\n      if (this.resizableColumns) {\n        this.columnWidthsState = state.columnWidths;\n        this.tableWidthState = state.tableWidth;\n      }\n\n      if (state.expandedRowKeys) {\n        this.expandedRowKeys = state.expandedRowKeys;\n      }\n\n      if (state.selection) {\n        Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n      }\n\n      this.stateRestored = true;\n      this.onStateRestore.emit(state);\n    }\n  }\n\n  saveColumnWidths(state) {\n    let widths = [];\n    let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n    headers.map(header => widths.push(DomHandler.getOuterWidth(header)));\n    state.columnWidths = widths.join(',');\n\n    if (this.columnResizeMode === 'expand') {\n      state.tableWidth = this.scrollable ? DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table').style.width : DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n    }\n  }\n\n  restoreColumnWidths() {\n    if (this.columnWidthsState) {\n      let widths = this.columnWidthsState.split(',');\n\n      if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n        if (this.scrollable) {\n          this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\n        } else {\n          this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n        }\n      }\n\n      if (this.scrollable) {\n        let headerCols = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table > colgroup > col');\n        let bodyCols = this.virtualScroll ? DomHandler.find(this.containerViewChild.nativeElement, 'cdk-virtual-scroll-viewport table > colgroup > col') : DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-body table > colgroup > col');\n        headerCols.map((col, index) => col.style.width = widths[index] + 'px');\n        bodyCols.map((col, index) => col.style.width = widths[index] + 'px');\n      } else {\n        let headers = DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n        headers.map((header, index) => header.style.width = widths[index] + 'px');\n      }\n    }\n  }\n\n  saveColumnOrder(state) {\n    if (this.columns) {\n      let columnOrder = [];\n      this.columns.map(column => {\n        columnOrder.push(column.field || column.key);\n      });\n      state.columnOrder = columnOrder;\n    }\n  }\n\n  restoreColumnOrder() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n\n    if (stateString) {\n      let state = JSON.parse(stateString);\n      let columnOrder = state.columnOrder;\n\n      if (columnOrder) {\n        let reorderedColumns = [];\n        columnOrder.map(key => {\n          let col = this.findColumnByKey(key);\n\n          if (col) {\n            reorderedColumns.push(col);\n          }\n        });\n        this.columnOrderStateRestored = true;\n        this.columns = reorderedColumns;\n      }\n    }\n  }\n\n  findColumnByKey(key) {\n    if (this.columns) {\n      for (let col of this.columns) {\n        if (col.key === key || col.field === key) return col;else continue;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.unbindDocumentEditListener();\n    this.editingCell = null;\n    this.initialized = null;\n  }\n\n}\n\nTable.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: Table,\n  deps: [{\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }, {\n    token: TableService\n  }, {\n    token: i0.ChangeDetectorRef\n  }, {\n    token: i1.FilterService\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nTable.ɵcmp = i0.ɵɵdefineComponent({\n  type: Table,\n  selectors: [[\"p-table\"]],\n  contentQueries: function Table_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Table_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableFrozenViewChild = _t.first);\n    }\n  },\n  inputs: {\n    frozenColumns: \"frozenColumns\",\n    frozenValue: \"frozenValue\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tableStyle: \"tableStyle\",\n    tableStyleClass: \"tableStyleClass\",\n    paginator: \"paginator\",\n    pageLinks: \"pageLinks\",\n    rowsPerPageOptions: \"rowsPerPageOptions\",\n    alwaysShowPaginator: \"alwaysShowPaginator\",\n    paginatorPosition: \"paginatorPosition\",\n    paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n    paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\",\n    currentPageReportTemplate: \"currentPageReportTemplate\",\n    showCurrentPageReport: \"showCurrentPageReport\",\n    showJumpToPageDropdown: \"showJumpToPageDropdown\",\n    showFirstLastIcon: \"showFirstLastIcon\",\n    showPageLinks: \"showPageLinks\",\n    defaultSortOrder: \"defaultSortOrder\",\n    sortMode: \"sortMode\",\n    resetPageOnSort: \"resetPageOnSort\",\n    selectionMode: \"selectionMode\",\n    contextMenuSelection: \"contextMenuSelection\",\n    contextMenuSelectionMode: \"contextMenuSelectionMode\",\n    dataKey: \"dataKey\",\n    metaKeySelection: \"metaKeySelection\",\n    rowTrackBy: \"rowTrackBy\",\n    lazy: \"lazy\",\n    lazyLoadOnInit: \"lazyLoadOnInit\",\n    compareSelectionBy: \"compareSelectionBy\",\n    csvSeparator: \"csvSeparator\",\n    exportFilename: \"exportFilename\",\n    filters: \"filters\",\n    globalFilterFields: \"globalFilterFields\",\n    filterDelay: \"filterDelay\",\n    filterLocale: \"filterLocale\",\n    expandedRowKeys: \"expandedRowKeys\",\n    editingRowKeys: \"editingRowKeys\",\n    rowExpandMode: \"rowExpandMode\",\n    scrollable: \"scrollable\",\n    scrollHeight: \"scrollHeight\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollDelay: \"virtualScrollDelay\",\n    virtualRowHeight: \"virtualRowHeight\",\n    frozenWidth: \"frozenWidth\",\n    responsive: \"responsive\",\n    contextMenu: \"contextMenu\",\n    resizableColumns: \"resizableColumns\",\n    columnResizeMode: \"columnResizeMode\",\n    reorderableColumns: \"reorderableColumns\",\n    loading: \"loading\",\n    loadingIcon: \"loadingIcon\",\n    showLoader: \"showLoader\",\n    rowHover: \"rowHover\",\n    customSort: \"customSort\",\n    showInitialSortBadge: \"showInitialSortBadge\",\n    autoLayout: \"autoLayout\",\n    exportFunction: \"exportFunction\",\n    stateKey: \"stateKey\",\n    stateStorage: \"stateStorage\",\n    editMode: \"editMode\",\n    minBufferPx: \"minBufferPx\",\n    maxBufferPx: \"maxBufferPx\",\n    value: \"value\",\n    columns: \"columns\",\n    first: \"first\",\n    rows: \"rows\",\n    totalRecords: \"totalRecords\",\n    sortField: \"sortField\",\n    sortOrder: \"sortOrder\",\n    multiSortMeta: \"multiSortMeta\",\n    selection: \"selection\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    contextMenuSelectionChange: \"contextMenuSelectionChange\",\n    onRowSelect: \"onRowSelect\",\n    onRowUnselect: \"onRowUnselect\",\n    onPage: \"onPage\",\n    onSort: \"onSort\",\n    onFilter: \"onFilter\",\n    onLazyLoad: \"onLazyLoad\",\n    onRowExpand: \"onRowExpand\",\n    onRowCollapse: \"onRowCollapse\",\n    onContextMenuSelect: \"onContextMenuSelect\",\n    onColResize: \"onColResize\",\n    onColReorder: \"onColReorder\",\n    onRowReorder: \"onRowReorder\",\n    onEditInit: \"onEditInit\",\n    onEditComplete: \"onEditComplete\",\n    onEditCancel: \"onEditCancel\",\n    onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n    sortFunction: \"sortFunction\",\n    firstChange: \"firstChange\",\n    rowsChange: \"rowsChange\",\n    onStateSave: \"onStateSave\",\n    onStateRestore: \"onStateRestore\"\n  },\n  features: [i0.ɵɵProvidersFeature([TableService]), i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 22,\n  consts: [[\"data-scrollselectors\", \".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\", 3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"], [\"class\", \"p-datatable-loading-overlay p-component-overlay\", 4, \"ngIf\"], [\"class\", \"p-datatable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-wrapper\", 4, \"ngIf\"], [\"class\", \"p-datatable-scrollable-wrapper\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-down p-datatable-reorder-indicator-up\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-up p-datatable-reorder-indicator-down\", \"style\", \"display:none\", 4, \"ngIf\"], [1, \"p-datatable-loading-overlay\", \"p-component-overlay\"], [1, \"p-datatable-header\"], [4, \"ngTemplateOutlet\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-wrapper\"], [\"role\", \"grid\", 3, \"ngClass\", \"ngStyle\"], [\"table\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [1, \"p-datatable-tbody\", 3, \"pTableBody\", \"pTableBodyTemplate\"], [\"class\", \"p-datatable-tfoot\", 4, \"ngIf\"], [1, \"p-datatable-tfoot\"], [1, \"p-datatable-scrollable-wrapper\"], [\"class\", \"p-datatable-scrollable-view p-datatable-frozen-view\", 3, \"pScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\", 4, \"ngIf\"], [1, \"p-datatable-scrollable-view\", 3, \"pScrollableView\", \"frozen\", \"scrollHeight\", \"ngStyle\"], [\"scrollableView\", \"\"], [1, \"p-datatable-scrollable-view\", \"p-datatable-frozen-view\", 3, \"pScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\"], [\"scrollableFrozenView\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [\"resizeHelper\", \"\"], [1, \"pi\", \"pi-arrow-down\", \"p-datatable-reorder-indicator-up\", 2, \"display\", \"none\"], [\"reorderIndicatorUp\", \"\"], [1, \"pi\", \"pi-arrow-up\", \"p-datatable-reorder-indicator-down\", 2, \"display\", \"none\"], [\"reorderIndicatorDown\", \"\"]],\n  template: function Table_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Table_div_2_Template, 2, 2, \"div\", 2);\n      i0.ɵɵtemplate(3, Table_div_3_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(4, Table_p_paginator_4_Template, 1, 16, \"p-paginator\", 4);\n      i0.ɵɵtemplate(5, Table_div_5_Template, 8, 13, \"div\", 5);\n      i0.ɵɵtemplate(6, Table_div_6_Template, 4, 8, \"div\", 6);\n      i0.ɵɵtemplate(7, Table_p_paginator_7_Template, 1, 16, \"p-paginator\", 7);\n      i0.ɵɵtemplate(8, Table_div_8_Template, 2, 1, \"div\", 8);\n      i0.ɵɵtemplate(9, Table_div_9_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(10, Table_span_10_Template, 2, 0, \"span\", 10);\n      i0.ɵɵtemplate(11, Table_span_11_Template, 2, 0, \"span\", 11);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction7(14, _c10, ctx.rowHover || ctx.selectionMode, ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable, ctx.scrollable && ctx.scrollHeight === \"flex\", ctx.responsive));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.captionTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.scrollable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.scrollable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n    }\n  },\n  directives: function () {\n    return [i3.NgStyle, i3.NgClass, i3.NgIf, i3.NgTemplateOutlet];\n  },\n  styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable-wrapper{position:relative}.p-datatable-scrollable-footer,.p-datatable-scrollable-header{overflow:hidden}.p-datatable-scrollable-body{overflow:auto;position:relative}.p-datatable-scrollable-body>table>.p-datatable-tbody>tr:first-child>td{border-top:0}.p-datatable-virtual-table{position:absolute}.p-datatable-frozen-view .p-datatable-scrollable-body{overflow:hidden}.p-datatable-frozen-view>.p-datatable-scrollable-body>table>.p-datatable-tbody>tr>td:last-child{border-right:0}.p-datatable-unfrozen-view{position:absolute;top:0}.p-datatable-flex-scrollable,.p-datatable-flex-scrollable .p-datatable-scrollable-view,.p-datatable-flex-scrollable .p-datatable-scrollable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-scrollable-body,.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}@media screen and (max-width:40em){.p-datatable.p-datatable-responsive .p-datatable-tfoot>tr>td,.p-datatable.p-datatable-responsive .p-datatable-thead>tr>th{display:none!important}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td{text-align:left;display:block;width:100%;float:left;clear:left;border:0}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{padding:.4rem;min-width:30%;display:inline-block;margin:-.4em 1em -.4em -.4rem;font-weight:700}}\"],\n  encapsulation: 2\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: Table,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-table',\n      template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" data-scrollselectors=\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive': responsive}\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div class=\"p-datatable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"grid\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-datatable-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"p-datatable-scrollable-view p-datatable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [pScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"p-datatable-scrollable-view\" #scrollableView [pScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n      providers: [TableService],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./table.css']\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FilterService\n    }];\n  },\n  propDecorators: {\n    frozenColumns: [{\n      type: Input\n    }],\n    frozenValue: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tableStyle: [{\n      type: Input\n    }],\n    tableStyleClass: [{\n      type: Input\n    }],\n    paginator: [{\n      type: Input\n    }],\n    pageLinks: [{\n      type: Input\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    alwaysShowPaginator: [{\n      type: Input\n    }],\n    paginatorPosition: [{\n      type: Input\n    }],\n    paginatorDropdownAppendTo: [{\n      type: Input\n    }],\n    paginatorDropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input\n    }],\n    showFirstLastIcon: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input\n    }],\n    defaultSortOrder: [{\n      type: Input\n    }],\n    sortMode: [{\n      type: Input\n    }],\n    resetPageOnSort: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    contextMenuSelection: [{\n      type: Input\n    }],\n    contextMenuSelectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionMode: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input\n    }],\n    rowTrackBy: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    lazyLoadOnInit: [{\n      type: Input\n    }],\n    compareSelectionBy: [{\n      type: Input\n    }],\n    csvSeparator: [{\n      type: Input\n    }],\n    exportFilename: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }],\n    globalFilterFields: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    expandedRowKeys: [{\n      type: Input\n    }],\n    editingRowKeys: [{\n      type: Input\n    }],\n    rowExpandMode: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollDelay: [{\n      type: Input\n    }],\n    virtualRowHeight: [{\n      type: Input\n    }],\n    frozenWidth: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    contextMenu: [{\n      type: Input\n    }],\n    resizableColumns: [{\n      type: Input\n    }],\n    columnResizeMode: [{\n      type: Input\n    }],\n    reorderableColumns: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    rowHover: [{\n      type: Input\n    }],\n    customSort: [{\n      type: Input\n    }],\n    showInitialSortBadge: [{\n      type: Input\n    }],\n    autoLayout: [{\n      type: Input\n    }],\n    exportFunction: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    editMode: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }],\n    onRowSelect: [{\n      type: Output\n    }],\n    onRowUnselect: [{\n      type: Output\n    }],\n    onPage: [{\n      type: Output\n    }],\n    onSort: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    onRowExpand: [{\n      type: Output\n    }],\n    onRowCollapse: [{\n      type: Output\n    }],\n    onContextMenuSelect: [{\n      type: Output\n    }],\n    onColResize: [{\n      type: Output\n    }],\n    onColReorder: [{\n      type: Output\n    }],\n    onRowReorder: [{\n      type: Output\n    }],\n    onEditInit: [{\n      type: Output\n    }],\n    onEditComplete: [{\n      type: Output\n    }],\n    onEditCancel: [{\n      type: Output\n    }],\n    onHeaderCheckboxToggle: [{\n      type: Output\n    }],\n    sortFunction: [{\n      type: Output\n    }],\n    firstChange: [{\n      type: Output\n    }],\n    rowsChange: [{\n      type: Output\n    }],\n    onStateSave: [{\n      type: Output\n    }],\n    onStateRestore: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    resizeHelperViewChild: [{\n      type: ViewChild,\n      args: ['resizeHelper']\n    }],\n    reorderIndicatorUpViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorUp']\n    }],\n    reorderIndicatorDownViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorDown']\n    }],\n    tableViewChild: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    scrollableViewChild: [{\n      type: ViewChild,\n      args: ['scrollableView']\n    }],\n    scrollableFrozenViewChild: [{\n      type: ViewChild,\n      args: ['scrollableFrozenView']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    value: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    sortField: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    multiSortMeta: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }]\n  }\n});\n\nclass TableBody {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n      if (this.dt.virtualScroll) {\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableBody.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableBody,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }, {\n    token: i0.ChangeDetectorRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nTableBody.ɵcmp = i0.ɵɵdefineComponent({\n  type: TableBody,\n  selectors: [[\"\", \"pTableBody\", \"\"]],\n  inputs: {\n    columns: [\"pTableBody\", \"columns\"],\n    template: [\"pTableBodyTemplate\", \"template\"],\n    frozen: \"frozen\"\n  },\n  attrs: _c11,\n  decls: 6,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"cdkVirtualFor\", \"\", 3, \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplateCacheSize\"]],\n  template: function TableBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TableBody_ng_container_0_Template, 3, 6, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, TableBody_ng_container_1_Template, 2, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(2, TableBody_ng_container_2_Template, 3, 6, \"ng-container\", 0);\n      i0.ɵɵtemplate(3, TableBody_ng_container_3_Template, 3, 6, \"ng-container\", 0);\n      i0.ɵɵtemplate(4, TableBody_ng_container_4_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(5, TableBody_ng_container_5_Template, 2, 5, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && !ctx.dt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && ctx.dt.virtualScroll);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.expandedRowTemplate && !(ctx.frozen && ctx.dt.frozenExpandedRowTemplate));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.frozenExpandedRowTemplate && ctx.frozen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dt.isEmpty() && !ctx.dt.loading);\n    }\n  },\n  directives: [i3.NgIf, i3.NgForOf, i3.NgTemplateOutlet, i4.CdkVirtualForOf],\n  pipes: [i3.SlicePipe],\n  encapsulation: 2\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableBody,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: '[pTableBody]',\n      template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  },\n  propDecorators: {\n    columns: [{\n      type: Input,\n      args: [\"pTableBody\"]\n    }],\n    template: [{\n      type: Input,\n      args: [\"pTableBodyTemplate\"]\n    }],\n    frozen: [{\n      type: Input\n    }]\n  }\n});\n\nclass ScrollableView {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  get scrollHeight() {\n    return this._scrollHeight;\n  }\n\n  set scrollHeight(val) {\n    this._scrollHeight = val;\n\n    if (val != null && (val.includes('%') || val.includes('calc'))) {\n      console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n    }\n\n    if (this.dt.virtualScroll && this.virtualScrollBody) {\n      this.virtualScrollBody.ngOnInit();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.frozen) {\n      if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-unfrozen-view');\n      }\n\n      let frozenView = this.el.nativeElement.previousElementSibling;\n\n      if (frozenView) {\n        if (this.dt.virtualScroll) this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-virtual-scrollable-body');else this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n      }\n\n      let scrollBarWidth = DomHandler.calculateScrollbarWidth();\n      this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n\n      if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n        this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n      }\n    } else {\n      if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n        this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n      }\n    }\n\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        this.headerScrollListener = this.onHeaderScroll.bind(this);\n        this.scrollHeaderViewChild.nativeElement.addEventListener('scroll', this.headerScrollListener);\n      }\n\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        this.footerScrollListener = this.onFooterScroll.bind(this);\n        this.scrollFooterViewChild.nativeElement.addEventListener('scroll', this.footerScrollListener);\n      }\n\n      if (!this.frozen) {\n        this.bodyScrollListener = this.onBodyScroll.bind(this);\n        if (this.dt.virtualScroll) this.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', this.bodyScrollListener);else this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\n      }\n    });\n  }\n\n  unbindEvents() {\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n    }\n\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n    }\n\n    if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n      this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n    }\n\n    if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\n      this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n    }\n  }\n\n  onHeaderScroll() {\n    const scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n\n    this.preventBodyScrollPropagation = true;\n  }\n\n  onFooterScroll() {\n    const scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n\n    this.preventBodyScrollPropagation = true;\n  }\n\n  onBodyScroll(event) {\n    if (this.preventBodyScrollPropagation) {\n      this.preventBodyScrollPropagation = false;\n      return;\n    }\n\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n    }\n\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n    }\n\n    if (this.frozenSiblingBody) {\n      this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n    }\n  }\n\n  onScrollIndexChange(index) {\n    if (this.dt.lazy) {\n      if (this.virtualScrollTimeout) {\n        clearTimeout(this.virtualScrollTimeout);\n      }\n\n      this.virtualScrollTimeout = setTimeout(() => {\n        let page = Math.floor(index / this.dt.rows);\n        let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.dt.rows;\n        let virtualScrollChunkSize = page === 0 ? this.dt.rows * 2 : this.dt.rows * 3;\n\n        if (page !== this.virtualPage) {\n          this.virtualPage = page;\n          this.dt.onLazyLoad.emit({\n            first: virtualScrollOffset,\n            rows: virtualScrollChunkSize,\n            sortField: this.dt.sortField,\n            sortOrder: this.dt.sortOrder,\n            filters: this.dt.filters,\n            globalFilter: this.dt.filters && this.dt.filters['global'] ? this.dt.filters['global'].value : null,\n            multiSortMeta: this.dt.multiSortMeta\n          });\n        }\n      }, this.dt.virtualScrollDelay);\n    }\n  }\n\n  getPageCount() {\n    let dataToRender = this.dt.filteredValue || this.dt.value;\n    let dataLength = dataToRender ? dataToRender.length : 0;\n    return Math.ceil(dataLength / this.dt.rows);\n  }\n\n  scrollToVirtualIndex(index) {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollToIndex(index);\n    }\n  }\n\n  scrollTo(options) {\n    if (this.virtualScrollBody) {\n      this.virtualScrollBody.scrollTo(options);\n    } else {\n      if (this.scrollBodyViewChild.nativeElement.scrollTo) {\n        this.scrollBodyViewChild.nativeElement.scrollTo(options);\n      } else {\n        this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n        this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.frozenSiblingBody = null;\n  }\n\n}\n\nScrollableView.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ScrollableView,\n  deps: [{\n    token: Table\n  }, {\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nScrollableView.ɵcmp = i0.ɵɵdefineComponent({\n  type: ScrollableView,\n  selectors: [[\"\", \"pScrollableView\", \"\"]],\n  viewQuery: function ScrollableView_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c16, 5);\n      i0.ɵɵviewQuery(_c17, 5);\n      i0.ɵɵviewQuery(_c18, 5);\n      i0.ɵɵviewQuery(_c19, 5);\n      i0.ɵɵviewQuery(_c20, 5);\n      i0.ɵɵviewQuery(_c21, 5);\n      i0.ɵɵviewQuery(_c22, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollHeaderViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollHeaderBoxViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollBodyViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollTableViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollFooterViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollFooterBoxViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableAlignerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualScrollBody = _t.first);\n    }\n  },\n  inputs: {\n    columns: [\"pScrollableView\", \"columns\"],\n    frozen: \"frozen\",\n    scrollHeight: \"scrollHeight\"\n  },\n  attrs: _c23,\n  decls: 21,\n  vars: 24,\n  consts: [[1, \"p-datatable-scrollable-header\"], [\"scrollHeader\", \"\"], [1, \"p-datatable-scrollable-header-box\"], [\"scrollHeaderBox\", \"\"], [1, \"p-datatable-scrollable-header-table\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [1, \"p-datatable-tbody\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollTemplate\", \"\"], [1, \"p-datatable-scrollable-footer\"], [\"scrollFooter\", \"\"], [1, \"p-datatable-scrollable-footer-box\"], [\"scrollFooterBox\", \"\"], [1, \"p-datatable-scrollable-footer-table\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-datatable-tfoot\"], [1, \"p-datatable-scrollable-body\", 3, \"ngStyle\"], [\"scrollBody\", \"\"], [3, \"ngStyle\"], [\"scrollTable\", \"\"], [1, \"p-datatable-tbody\", 3, \"pTableBody\", \"pTableBodyTemplate\", \"frozen\"], [\"style\", \"background-color:transparent\", 4, \"ngIf\"], [2, \"background-color\", \"transparent\"], [\"scrollableAligner\", \"\"], [\"tabindex\", \"0\", 1, \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\"]],\n  template: function ScrollableView_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelementStart(2, \"div\", 2, 3);\n      i0.ɵɵelementStart(4, \"table\", 4);\n      i0.ɵɵtemplate(5, ScrollableView_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementStart(6, \"thead\", 6);\n      i0.ɵɵtemplate(7, ScrollableView_ng_container_7_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"tbody\", 7);\n      i0.ɵɵtemplate(9, ScrollableView_ng_template_9_Template, 1, 6, \"ng-template\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, ScrollableView_ng_container_10_Template, 8, 15, \"ng-container\", 9);\n      i0.ɵɵtemplate(11, ScrollableView_ng_template_11_Template, 6, 16, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(13, \"div\", 11, 12);\n      i0.ɵɵelementStart(15, \"div\", 13, 14);\n      i0.ɵɵelementStart(17, \"table\", 15);\n      i0.ɵɵtemplate(18, ScrollableView_ng_container_18_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementStart(19, \"tfoot\", 16);\n      i0.ɵɵtemplate(20, ScrollableView_ng_container_20_Template, 1, 0, \"ng-container\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r6 = i0.ɵɵreference(12);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", ctx.dt.tableStyleClass)(\"ngStyle\", ctx.dt.tableStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenColGroupTemplate || ctx.dt.colGroupTemplate : ctx.dt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(16, _c7, ctx.columns));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenHeaderTemplate || ctx.dt.headerTemplate : ctx.dt.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(18, _c7, ctx.columns));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.dt.frozenValue)(\"ngForTrackBy\", ctx.dt.rowTrackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dt.virtualScroll)(\"ngIfElse\", _r6);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngClass\", ctx.dt.tableStyleClass)(\"ngStyle\", ctx.dt.tableStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenColGroupTemplate || ctx.dt.colGroupTemplate : ctx.dt.colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(20, _c7, ctx.columns));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenFooterTemplate || ctx.dt.footerTemplate : ctx.dt.footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(22, _c7, ctx.columns));\n    }\n  },\n  directives: [i3.NgClass, i3.NgStyle, i3.NgTemplateOutlet, i3.NgForOf, i3.NgIf, i4.CdkFixedSizeVirtualScroll],\n  encapsulation: 2\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ScrollableView,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: '[pScrollableView]',\n      template: `\n        <div #scrollHeader class=\"p-datatable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-datatable-scrollable-header-box\">\n                <table class=\"p-datatable-scrollable-header-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\">\n                        <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                            <ng-container *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!dt.virtualScroll; else virtualScrollTemplate\">\n            <div #scrollBody class=\"p-datatable-scrollable-body\" [ngStyle]=\"{'max-height': dt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && dt.scrollHeight ? 'scroll' : undefined}\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]=\"dt.virtualRowHeight\" tabindex=\"0\" [style.height]=\"dt.scrollHeight !== 'flex' ? scrollHeight : undefined\"\n                    [minBufferPx]=\"dt.minBufferPx\" [maxBufferPx]=\"dt.maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter class=\"p-datatable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-datatable-scrollable-footer-box\">\n                <table class=\"p-datatable-scrollable-footer-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  },\n  propDecorators: {\n    columns: [{\n      type: Input,\n      args: [\"pScrollableView\"]\n    }],\n    frozen: [{\n      type: Input\n    }],\n    scrollHeaderViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeader']\n    }],\n    scrollHeaderBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeaderBox']\n    }],\n    scrollBodyViewChild: [{\n      type: ViewChild,\n      args: ['scrollBody']\n    }],\n    scrollTableViewChild: [{\n      type: ViewChild,\n      args: ['scrollTable']\n    }],\n    scrollFooterViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooter']\n    }],\n    scrollFooterBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooterBox']\n    }],\n    scrollableAlignerViewChild: [{\n      type: ViewChild,\n      args: ['scrollableAligner']\n    }],\n    virtualScrollBody: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    scrollHeight: [{\n      type: Input\n    }]\n  }\n});\n\nclass SortableColumn {\n  constructor(dt) {\n    this.dt = dt;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n        this.updateSortState();\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.updateSortState();\n    }\n  }\n\n  updateSortState() {\n    this.sorted = this.dt.isSorted(this.field);\n    this.sortOrder = this.sorted ? this.dt.sortOrder === 1 ? 'ascending' : 'descending' : 'none';\n  }\n\n  onClick(event) {\n    if (this.isEnabled() && !this.isFilterElement(event.target)) {\n      this.updateSortState();\n      this.dt.sort({\n        originalEvent: event,\n        field: this.field\n      });\n      DomHandler.clearSelection();\n    }\n  }\n\n  onEnterKey(event) {\n    this.onClick(event);\n  }\n\n  isEnabled() {\n    return this.pSortableColumnDisabled !== true;\n  }\n\n  isFilterElement(element) {\n    return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSortableColumn.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SortableColumn,\n  deps: [{\n    token: Table\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nSortableColumn.ɵdir = i0.ɵɵdefineDirective({\n  type: SortableColumn,\n  selectors: [[\"\", \"pSortableColumn\", \"\"]],\n  hostVars: 7,\n  hostBindings: function SortableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SortableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function SortableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKey($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\")(\"aria-sort\", ctx.sortOrder);\n      i0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-highlight\", ctx.sorted);\n    }\n  },\n  inputs: {\n    field: [\"pSortableColumn\", \"field\"],\n    pSortableColumnDisabled: \"pSortableColumnDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SortableColumn,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pSortableColumn]',\n      host: {\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'sortOrder'\n      }\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }];\n  },\n  propDecorators: {\n    field: [{\n      type: Input,\n      args: [\"pSortableColumn\"]\n    }],\n    pSortableColumnDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }]\n  }\n});\n\nclass SortIcon {\n  constructor(dt, cd) {\n    this.dt = dt;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n      this.updateSortState();\n    });\n  }\n\n  ngOnInit() {\n    this.updateSortState();\n  }\n\n  onClick(event) {\n    event.preventDefault();\n  }\n\n  updateSortState() {\n    if (this.dt.sortMode === 'single') {\n      this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n    } else if (this.dt.sortMode === 'multiple') {\n      let sortMeta = this.dt.getSortMeta(this.field);\n      this.sortOrder = sortMeta ? sortMeta.order : 0;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  getMultiSortMetaIndex() {\n    let multiSortMeta = this.dt._multiSortMeta;\n    let index = -1;\n\n    if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n      for (let i = 0; i < multiSortMeta.length; i++) {\n        let meta = multiSortMeta[i];\n\n        if (meta.field === this.field || meta.field === this.field) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  isMultiSorted() {\n    return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSortIcon.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SortIcon,\n  deps: [{\n    token: Table\n  }, {\n    token: i0.ChangeDetectorRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nSortIcon.ɵcmp = i0.ɵɵdefineComponent({\n  type: SortIcon,\n  selectors: [[\"p-sortIcon\"]],\n  inputs: {\n    field: \"field\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"p-sortable-column-icon\", \"pi\", \"pi-fw\", 3, \"ngClass\"], [\"class\", \"p-sortable-column-badge\", 4, \"ngIf\"], [1, \"p-sortable-column-badge\"]],\n  template: function SortIcon_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"i\", 0);\n      i0.ɵɵtemplate(1, SortIcon_span_1_Template, 2, 1, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(2, _c25, ctx.sortOrder === 1, ctx.sortOrder === -1, ctx.sortOrder === 0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiSorted());\n    }\n  },\n  directives: [i3.NgClass, i3.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SortIcon,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-sortIcon',\n      template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getMultiSortMetaIndex() + 1}}</span>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  },\n  propDecorators: {\n    field: [{\n      type: Input\n    }]\n  }\n});\n\nclass SelectableRow {\n  constructor(dt, tableService) {\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.dt.isSelected(this.data);\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.dt.isSelected(this.data);\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }\n\n  onTouchEnd(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowTouchEnd(event);\n    }\n  }\n\n  onArrowDownKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    const row = event.currentTarget;\n    const nextRow = this.findNextSelectableRow(row);\n\n    if (nextRow) {\n      nextRow.focus();\n    }\n\n    event.preventDefault();\n  }\n\n  onArrowUpKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    const row = event.currentTarget;\n    const prevRow = this.findPrevSelectableRow(row);\n\n    if (prevRow) {\n      prevRow.focus();\n    }\n\n    event.preventDefault();\n  }\n\n  onEnterKeyDown(event) {\n    if (!this.isEnabled()) {\n      return;\n    }\n\n    this.dt.handleRowClick({\n      originalEvent: event,\n      rowData: this.data,\n      rowIndex: this.index\n    });\n  }\n\n  onPageDownKeyDown() {\n    if (this.dt.virtualScroll) {\n      DomHandler.findSingle(this.dt.scrollableViewChild.el.nativeElement, 'cdk-virtual-scroll-viewport').focus();\n    }\n  }\n\n  onSpaceKeydown() {\n    if (this.dt.virtualScroll && !this.dt.editingCell) {\n      DomHandler.findSingle(this.dt.scrollableViewChild.el.nativeElement, 'cdk-virtual-scroll-viewport').focus();\n    }\n  }\n\n  findNextSelectableRow(row) {\n    let nextRow = row.nextElementSibling;\n\n    if (nextRow) {\n      if (DomHandler.hasClass(nextRow, 'p-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);\n    } else {\n      return null;\n    }\n  }\n\n  findPrevSelectableRow(row) {\n    let prevRow = row.previousElementSibling;\n\n    if (prevRow) {\n      if (DomHandler.hasClass(prevRow, 'p-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);\n    } else {\n      return null;\n    }\n  }\n\n  isEnabled() {\n    return this.pSelectableRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSelectableRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SelectableRow,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nSelectableRow.ɵdir = i0.ɵɵdefineDirective({\n  type: SelectableRow,\n  selectors: [[\"\", \"pSelectableRow\", \"\"]],\n  hostVars: 5,\n  hostBindings: function SelectableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SelectableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"touchend\", function SelectableRow_touchend_HostBindingHandler($event) {\n        return ctx.onTouchEnd($event);\n      })(\"keydown.arrowdown\", function SelectableRow_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDownKeyDown($event);\n      })(\"keydown.arrowup\", function SelectableRow_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUpKeyDown($event);\n      })(\"keydown.enter\", function SelectableRow_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.shift.enter\", function SelectableRow_keydown_shift_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.meta.enter\", function SelectableRow_keydown_meta_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.pagedown\", function SelectableRow_keydown_pagedown_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.pageup\", function SelectableRow_keydown_pageup_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.home\", function SelectableRow_keydown_home_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.end\", function SelectableRow_keydown_end_HostBindingHandler() {\n        return ctx.onPageDownKeyDown();\n      })(\"keydown.space\", function SelectableRow_keydown_space_HostBindingHandler() {\n        return ctx.onSpaceKeydown();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRow\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SelectableRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRow]',\n      host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  },\n  propDecorators: {\n    data: [{\n      type: Input,\n      args: [\"pSelectableRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onTouchEnd: [{\n      type: HostListener,\n      args: ['touchend', ['$event']]\n    }],\n    onArrowDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUpKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.enter', ['$event']]\n    }],\n    onPageDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.pagedown']\n    }, {\n      type: HostListener,\n      args: ['keydown.pageup']\n    }, {\n      type: HostListener,\n      args: ['keydown.home']\n    }, {\n      type: HostListener,\n      args: ['keydown.end']\n    }],\n    onSpaceKeydown: [{\n      type: HostListener,\n      args: ['keydown.space']\n    }]\n  }\n});\n\nclass SelectableRowDblClick {\n  constructor(dt, tableService) {\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.dt.isSelected(this.data);\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.dt.isSelected(this.data);\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }\n\n  isEnabled() {\n    return this.pSelectableRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nSelectableRowDblClick.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SelectableRowDblClick,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nSelectableRowDblClick.ɵdir = i0.ɵɵdefineDirective({\n  type: SelectableRowDblClick,\n  selectors: [[\"\", \"pSelectableRowDblClick\", \"\"]],\n  hostVars: 4,\n  hostBindings: function SelectableRowDblClick_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dblclick\", function SelectableRowDblClick_dblclick_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRowDblClick\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SelectableRowDblClick,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRowDblClick]',\n      host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected'\n      }\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  },\n  propDecorators: {\n    data: [{\n      type: Input,\n      args: [\"pSelectableRowDblClick\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }]\n  }\n});\n\nclass ContextMenuRow {\n  constructor(dt, tableService, el) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.el = el;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.contextMenuSource$.subscribe(data => {\n        this.selected = this.dt.equals(this.data, data);\n      });\n    }\n  }\n\n  onContextMenu(event) {\n    if (this.isEnabled()) {\n      this.dt.handleRowRightClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n      this.el.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n\n  isEnabled() {\n    return this.pContextMenuRowDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nContextMenuRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ContextMenuRow,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }, {\n    token: i0.ElementRef\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nContextMenuRow.ɵdir = i0.ɵɵdefineDirective({\n  type: ContextMenuRow,\n  selectors: [[\"\", \"pContextMenuRow\", \"\"]],\n  hostVars: 3,\n  hostBindings: function ContextMenuRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"contextmenu\", function ContextMenuRow_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextMenu($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      i0.ɵɵclassProp(\"p-highlight-contextmenu\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pContextMenuRow\", \"data\"],\n    index: [\"pContextMenuRowIndex\", \"index\"],\n    pContextMenuRowDisabled: \"pContextMenuRowDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ContextMenuRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pContextMenuRow]',\n      host: {\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ElementRef\n    }];\n  },\n  propDecorators: {\n    data: [{\n      type: Input,\n      args: [\"pContextMenuRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pContextMenuRowIndex\"]\n    }],\n    pContextMenuRowDisabled: [{\n      type: Input\n    }],\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  }\n});\n\nclass RowToggler {\n  constructor(dt) {\n    this.dt = dt;\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.toggleRow(this.data, event);\n      event.preventDefault();\n    }\n  }\n\n  isEnabled() {\n    return this.pRowTogglerDisabled !== true;\n  }\n\n}\n\nRowToggler.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: RowToggler,\n  deps: [{\n    token: Table\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nRowToggler.ɵdir = i0.ɵɵdefineDirective({\n  type: RowToggler,\n  selectors: [[\"\", \"pRowToggler\", \"\"]],\n  hostBindings: function RowToggler_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function RowToggler_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pRowToggler\", \"data\"],\n    pRowTogglerDisabled: \"pRowTogglerDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: RowToggler,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pRowToggler]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }];\n  },\n  propDecorators: {\n    data: [{\n      type: Input,\n      args: ['pRowToggler']\n    }],\n    pRowTogglerDisabled: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  }\n});\n\nclass ResizableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n      this.resizer = document.createElement('span');\n      this.resizer.className = 'p-column-resizer';\n      this.el.nativeElement.appendChild(this.resizer);\n      this.zone.runOutsideAngular(() => {\n        this.resizerMouseDownListener = this.onMouseDown.bind(this);\n        this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n      });\n    }\n  }\n\n  bindDocumentEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n      document.addEventListener('mousemove', this.documentMouseMoveListener);\n      this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n      document.addEventListener('mouseup', this.documentMouseUpListener);\n    });\n  }\n\n  unbindDocumentEvents() {\n    if (this.documentMouseMoveListener) {\n      document.removeEventListener('mousemove', this.documentMouseMoveListener);\n      this.documentMouseMoveListener = null;\n    }\n\n    if (this.documentMouseUpListener) {\n      document.removeEventListener('mouseup', this.documentMouseUpListener);\n      this.documentMouseUpListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (event.which === 1) {\n      this.dt.onColumnResizeBegin(event);\n      this.bindDocumentEvents();\n    }\n  }\n\n  onDocumentMouseMove(event) {\n    this.dt.onColumnResize(event);\n  }\n\n  onDocumentMouseUp(event) {\n    this.dt.onColumnResizeEnd(event, this.el.nativeElement);\n    this.unbindDocumentEvents();\n  }\n\n  isEnabled() {\n    return this.pResizableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    if (this.resizerMouseDownListener) {\n      this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n    }\n\n    this.unbindDocumentEvents();\n  }\n\n}\n\nResizableColumn.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ResizableColumn,\n  deps: [{\n    token: Table\n  }, {\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nResizableColumn.ɵdir = i0.ɵɵdefineDirective({\n  type: ResizableColumn,\n  selectors: [[\"\", \"pResizableColumn\", \"\"]],\n  inputs: {\n    pResizableColumnDisabled: \"pResizableColumnDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ResizableColumn,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pResizableColumn]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  },\n  propDecorators: {\n    pResizableColumnDisabled: [{\n      type: Input\n    }]\n  }\n});\n\nclass ReorderableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.mouseDownListener = this.onMouseDown.bind(this);\n      this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n      this.dragStartListener = this.onDragStart.bind(this);\n      this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n      this.dragOverListener = this.onDragEnter.bind(this);\n      this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      this.dragEnterListener = this.onDragEnter.bind(this);\n      this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n      this.dragLeaveListener = this.onDragLeave.bind(this);\n      this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n    });\n  }\n\n  unbindEvents() {\n    if (this.mouseDownListener) {\n      document.removeEventListener('mousedown', this.mouseDownListener);\n      this.mouseDownListener = null;\n    }\n\n    if (this.dragOverListener) {\n      document.removeEventListener('dragover', this.dragOverListener);\n      this.dragOverListener = null;\n    }\n\n    if (this.dragEnterListener) {\n      document.removeEventListener('dragenter', this.dragEnterListener);\n      this.dragEnterListener = null;\n    }\n\n    if (this.dragEnterListener) {\n      document.removeEventListener('dragenter', this.dragEnterListener);\n      this.dragEnterListener = null;\n    }\n\n    if (this.dragLeaveListener) {\n      document.removeEventListener('dragleave', this.dragLeaveListener);\n      this.dragLeaveListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n  }\n\n  onDragStart(event) {\n    this.dt.onColumnDragStart(event, this.el.nativeElement);\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n  }\n\n  onDragEnter(event) {\n    this.dt.onColumnDragEnter(event, this.el.nativeElement);\n  }\n\n  onDragLeave(event) {\n    this.dt.onColumnDragLeave(event);\n  }\n\n  onDrop(event) {\n    if (this.isEnabled()) {\n      this.dt.onColumnDrop(event, this.el.nativeElement);\n    }\n  }\n\n  isEnabled() {\n    return this.pReorderableColumnDisabled !== true;\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n  }\n\n}\n\nReorderableColumn.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ReorderableColumn,\n  deps: [{\n    token: Table\n  }, {\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nReorderableColumn.ɵdir = i0.ɵɵdefineDirective({\n  type: ReorderableColumn,\n  selectors: [[\"\", \"pReorderableColumn\", \"\"]],\n  hostBindings: function ReorderableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function ReorderableColumn_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    pReorderableColumnDisabled: \"pReorderableColumnDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ReorderableColumn,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableColumn]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  },\n  propDecorators: {\n    pReorderableColumnDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  }\n});\n\nclass EditableColumn {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n    }\n  }\n\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.dt.editingCellClick = true;\n\n      if (this.dt.editingCell) {\n        if (this.dt.editingCell !== this.el.nativeElement) {\n          if (!this.dt.isEditingCellValid()) {\n            return;\n          }\n\n          this.closeEditingCell(true, event);\n          this.openCell();\n        }\n      } else {\n        this.openCell();\n      }\n    }\n  }\n\n  openCell() {\n    this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n    DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n    this.dt.onEditInit.emit({\n      field: this.field,\n      data: this.data,\n      index: this.rowIndex\n    });\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n        let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n\n        if (focusableElement) {\n          focusableElement.focus();\n        }\n      }, 50);\n    });\n  }\n\n  closeEditingCell(completed, event) {\n    if (completed) this.dt.onEditComplete.emit({\n      field: this.dt.editingCellField,\n      data: this.dt.editingCellData,\n      originalEvent: event,\n      index: this.dt.editingCellRowIndex\n    });else this.dt.onEditCancel.emit({\n      field: this.dt.editingCellField,\n      data: this.dt.editingCellData,\n      originalEvent: event,\n      index: this.dt.editingCellRowIndex\n    });\n    DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n    this.dt.editingCell = null;\n    this.dt.editingCellData = null;\n    this.dt.editingCellField = null;\n    this.dt.unbindDocumentEditListener();\n  }\n\n  onEnterKeyDown(event) {\n    if (this.isEnabled()) {\n      if (this.dt.isEditingCellValid()) {\n        this.closeEditingCell(true, event);\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onEscapeKeyDown(event) {\n    if (this.isEnabled()) {\n      if (this.dt.isEditingCellValid()) {\n        this.closeEditingCell(false, event);\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onShiftKeyDown(event) {\n    if (this.isEnabled()) {\n      if (event.shiftKey) this.moveToPreviousCell(event);else {\n        this.moveToNextCell(event);\n      }\n    }\n  }\n\n  onArrowDown(event) {\n    if (this.isEnabled()) {\n      let currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        let cellIndex = DomHandler.index(currentCell);\n        let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  onArrowUp(event) {\n    if (this.isEnabled()) {\n      let currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        let cellIndex = DomHandler.index(currentCell);\n        let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  onArrowLeft(event) {\n    if (this.isEnabled()) {\n      this.moveToPreviousCell(event);\n    }\n  }\n\n  onArrowRight(event) {\n    if (this.isEnabled()) {\n      this.moveToNextCell(event);\n    }\n  }\n\n  findCell(element) {\n    if (element) {\n      let cell = element;\n\n      while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n        cell = cell.parentElement;\n      }\n\n      return cell;\n    } else {\n      return null;\n    }\n  }\n\n  moveToPreviousCell(event) {\n    let currentCell = this.findCell(event.target);\n\n    if (currentCell) {\n      let targetCell = this.findPreviousEditableColumn(currentCell);\n\n      if (targetCell) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        DomHandler.invokeElementMethod(event.target, 'blur');\n        DomHandler.invokeElementMethod(targetCell, 'click');\n        event.preventDefault();\n      }\n    }\n  }\n\n  moveToNextCell(event) {\n    let currentCell = this.findCell(event.target);\n\n    if (currentCell) {\n      let targetCell = this.findNextEditableColumn(currentCell);\n\n      if (targetCell) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        DomHandler.invokeElementMethod(event.target, 'blur');\n        DomHandler.invokeElementMethod(targetCell, 'click');\n        event.preventDefault();\n      }\n    }\n  }\n\n  findPreviousEditableColumn(cell) {\n    let prevCell = cell.previousElementSibling;\n\n    if (!prevCell) {\n      let previousRow = cell.parentElement.previousElementSibling;\n\n      if (previousRow) {\n        prevCell = previousRow.lastElementChild;\n      }\n    }\n\n    if (prevCell) {\n      if (DomHandler.hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n    } else {\n      return null;\n    }\n  }\n\n  findNextEditableColumn(cell) {\n    let nextCell = cell.nextElementSibling;\n\n    if (!nextCell) {\n      let nextRow = cell.parentElement.nextElementSibling;\n\n      if (nextRow) {\n        nextCell = nextRow.firstElementChild;\n      }\n    }\n\n    if (nextCell) {\n      if (DomHandler.hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n    } else {\n      return null;\n    }\n  }\n\n  findNextEditableColumnByIndex(cell, index) {\n    let nextRow = cell.parentElement.nextElementSibling;\n\n    if (nextRow) {\n      let nextCell = nextRow.children[index];\n\n      if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n        return nextCell;\n      }\n\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  findPrevEditableColumnByIndex(cell, index) {\n    let prevRow = cell.parentElement.previousElementSibling;\n\n    if (prevRow) {\n      let prevCell = prevRow.children[index];\n\n      if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n        return prevCell;\n      }\n\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  isEnabled() {\n    return this.pEditableColumnDisabled !== true;\n  }\n\n}\n\nEditableColumn.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: EditableColumn,\n  deps: [{\n    token: Table\n  }, {\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nEditableColumn.ɵdir = i0.ɵɵdefineDirective({\n  type: EditableColumn,\n  selectors: [[\"\", \"pEditableColumn\", \"\"]],\n  hostBindings: function EditableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function EditableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function EditableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.escape\", function EditableColumn_keydown_escape_HostBindingHandler($event) {\n        return ctx.onEscapeKeyDown($event);\n      })(\"keydown.tab\", function EditableColumn_keydown_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.shift.tab\", function EditableColumn_keydown_shift_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.meta.tab\", function EditableColumn_keydown_meta_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.arrowdown\", function EditableColumn_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDown($event);\n      })(\"keydown.arrowup\", function EditableColumn_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUp($event);\n      })(\"keydown.arrowleft\", function EditableColumn_keydown_arrowleft_HostBindingHandler($event) {\n        return ctx.onArrowLeft($event);\n      })(\"keydown.arrowright\", function EditableColumn_keydown_arrowright_HostBindingHandler($event) {\n        return ctx.onArrowRight($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pEditableColumn\", \"data\"],\n    field: [\"pEditableColumnField\", \"field\"],\n    rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"],\n    pEditableColumnDisabled: \"pEditableColumnDisabled\",\n    pFocusCellSelector: \"pFocusCellSelector\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: EditableColumn,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableColumn]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  },\n  propDecorators: {\n    data: [{\n      type: Input,\n      args: [\"pEditableColumn\"]\n    }],\n    field: [{\n      type: Input,\n      args: [\"pEditableColumnField\"]\n    }],\n    rowIndex: [{\n      type: Input,\n      args: [\"pEditableColumnRowIndex\"]\n    }],\n    pEditableColumnDisabled: [{\n      type: Input\n    }],\n    pFocusCellSelector: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    onEscapeKeyDown: [{\n      type: HostListener,\n      args: ['keydown.escape', ['$event']]\n    }],\n    onShiftKeyDown: [{\n      type: HostListener,\n      args: ['keydown.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.tab', ['$event']]\n    }],\n    onArrowDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUp: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onArrowLeft: [{\n      type: HostListener,\n      args: ['keydown.arrowleft', ['$event']]\n    }],\n    onArrowRight: [{\n      type: HostListener,\n      args: ['keydown.arrowright', ['$event']]\n    }]\n  }\n});\n\nclass EditableRow {\n  constructor(el) {\n    this.el = el;\n  }\n\n  isEnabled() {\n    return this.pEditableRowDisabled !== true;\n  }\n\n}\n\nEditableRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: EditableRow,\n  deps: [{\n    token: i0.ElementRef\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nEditableRow.ɵdir = i0.ɵɵdefineDirective({\n  type: EditableRow,\n  selectors: [[\"\", \"pEditableRow\", \"\"]],\n  inputs: {\n    data: [\"pEditableRow\", \"data\"],\n    pEditableRowDisabled: \"pEditableRowDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: EditableRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableRow]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  },\n  propDecorators: {\n    data: [{\n      type: Input,\n      args: [\"pEditableRow\"]\n    }],\n    pEditableRowDisabled: [{\n      type: Input\n    }]\n  }\n});\n\nclass InitEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.initRowEdit(this.editableRow.data);\n    event.preventDefault();\n  }\n\n}\n\nInitEditableRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: InitEditableRow,\n  deps: [{\n    token: Table\n  }, {\n    token: EditableRow\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nInitEditableRow.ɵdir = i0.ɵɵdefineDirective({\n  type: InitEditableRow,\n  selectors: [[\"\", \"pInitEditableRow\", \"\"]],\n  hostBindings: function InitEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function InitEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: InitEditableRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pInitEditableRow]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  },\n  propDecorators: {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  }\n});\n\nclass SaveEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n    event.preventDefault();\n  }\n\n}\n\nSaveEditableRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SaveEditableRow,\n  deps: [{\n    token: Table\n  }, {\n    token: EditableRow\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nSaveEditableRow.ɵdir = i0.ɵɵdefineDirective({\n  type: SaveEditableRow,\n  selectors: [[\"\", \"pSaveEditableRow\", \"\"]],\n  hostBindings: function SaveEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SaveEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: SaveEditableRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pSaveEditableRow]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  },\n  propDecorators: {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  }\n});\n\nclass CancelEditableRow {\n  constructor(dt, editableRow) {\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  onClick(event) {\n    this.dt.cancelRowEdit(this.editableRow.data);\n    event.preventDefault();\n  }\n\n}\n\nCancelEditableRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: CancelEditableRow,\n  deps: [{\n    token: Table\n  }, {\n    token: EditableRow\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nCancelEditableRow.ɵdir = i0.ɵɵdefineDirective({\n  type: CancelEditableRow,\n  selectors: [[\"\", \"pCancelEditableRow\", \"\"]],\n  hostBindings: function CancelEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CancelEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: CancelEditableRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pCancelEditableRow]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  },\n  propDecorators: {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  }\n});\n\nclass CellEditor {\n  constructor(dt, editableColumn, editableRow) {\n    this.dt = dt;\n    this.editableColumn = editableColumn;\n    this.editableRow = editableRow;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n\n        case 'output':\n          this.outputTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  get editing() {\n    return this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement || this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data);\n  }\n\n}\n\nCellEditor.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: CellEditor,\n  deps: [{\n    token: Table\n  }, {\n    token: EditableColumn,\n    optional: true\n  }, {\n    token: EditableRow,\n    optional: true\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nCellEditor.ɵcmp = i0.ɵɵdefineComponent({\n  type: CellEditor,\n  selectors: [[\"p-cellEditor\"]],\n  contentQueries: function CellEditor_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function CellEditor_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CellEditor_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CellEditor_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.editing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.editing);\n    }\n  },\n  directives: [i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: CellEditor,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-cellEditor',\n      template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableColumn,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: EditableRow,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  },\n  propDecorators: {\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  }\n});\n\nclass TableRadioButton {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.dt.isSelected(this.value);\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.dt.isSelected(this.value);\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      this.dt.toggleRowWithRadio({\n        originalEvent: event,\n        rowIndex: this.index\n      }, this.value);\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  onBlur() {\n    DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableRadioButton.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableRadioButton,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }, {\n    token: i0.ChangeDetectorRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nTableRadioButton.ɵcmp = i0.ɵɵdefineComponent({\n  type: TableRadioButton,\n  selectors: [[\"p-tableRadioButton\"]],\n  viewQuery: function TableRadioButton_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c26, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 10,\n  consts: [[1, \"p-radiobutton\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"radio\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"radio\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-radiobutton-icon\"]],\n  template: function TableRadioButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableRadioButton_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function TableRadioButton_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableRadioButton_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵelement(5, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c27, ctx.checked, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n    }\n  },\n  directives: [i3.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableRadioButton,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-tableRadioButton',\n      template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  },\n  propDecorators: {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  }\n});\n\nclass TableCheckbox {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.dt.isSelected(this.value);\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.dt.isSelected(this.value);\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      this.dt.toggleRowWithCheckbox({\n        originalEvent: event,\n        rowIndex: this.index\n      }, this.value);\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  onBlur() {\n    DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTableCheckbox.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableCheckbox,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }, {\n    token: i0.ChangeDetectorRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nTableCheckbox.ɵcmp = i0.ɵɵdefineComponent({\n  type: TableCheckbox,\n  selectors: [[\"p-tableCheckbox\"]],\n  viewQuery: function TableCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c26, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    required: \"required\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 14,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"focus\", function TableCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵelement(5, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"required\", ctx.required)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c28, ctx.checked, ctx.disabled));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c29, ctx.checked));\n    }\n  },\n  directives: [i3.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableCheckbox,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-tableCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  },\n  propDecorators: {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  }\n});\n\nclass TableHeaderCheckbox {\n  constructor(dt, tableService, cd) {\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n    this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n  }\n\n  ngOnInit() {\n    this.checked = this.updateCheckedState();\n  }\n\n  onClick(event) {\n    if (!this.disabled) {\n      if (this.dt.value && this.dt.value.length > 0) {\n        this.dt.toggleRowsWithCheckbox(event, !this.checked);\n      }\n    }\n\n    DomHandler.clearSelection();\n  }\n\n  onFocus() {\n    DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  onBlur() {\n    DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n  }\n\n  isDisabled() {\n    return this.disabled || !this.dt.value || !this.dt.value.length;\n  }\n\n  ngOnDestroy() {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n\n  updateCheckedState() {\n    this.cd.markForCheck();\n\n    if (this.dt.filteredValue) {\n      const val = this.dt.filteredValue;\n      return val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked();\n    } else {\n      const val = this.dt.value;\n      return val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === val.length;\n    }\n  }\n\n  isAllFilteredValuesChecked() {\n    if (!this.dt.filteredValue) {\n      return false;\n    } else {\n      for (let rowData of this.dt.filteredValue) {\n        if (!this.dt.isSelected(rowData)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n}\n\nTableHeaderCheckbox.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableHeaderCheckbox,\n  deps: [{\n    token: Table\n  }, {\n    token: TableService\n  }, {\n    token: i0.ChangeDetectorRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nTableHeaderCheckbox.ɵcmp = i0.ɵɵdefineComponent({\n  type: TableHeaderCheckbox,\n  selectors: [[\"p-tableHeaderCheckbox\"]],\n  viewQuery: function TableHeaderCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c26, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 7,\n  vars: 13,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"cb\", \"\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableHeaderCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TableHeaderCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"focus\", function TableHeaderCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableHeaderCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4, 5);\n      i0.ɵɵelement(6, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.isDisabled());\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c30, ctx.checked, ctx.isDisabled()));\n      i0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c29, ctx.checked));\n    }\n  },\n  directives: [i3.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableHeaderCheckbox,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-tableHeaderCheckbox',\n      template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  },\n  propDecorators: {\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }],\n    disabled: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }]\n  }\n});\n\nclass ReorderableRowHandle {\n  constructor(el) {\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n  }\n\n}\n\nReorderableRowHandle.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ReorderableRowHandle,\n  deps: [{\n    token: i0.ElementRef\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nReorderableRowHandle.ɵdir = i0.ɵɵdefineDirective({\n  type: ReorderableRowHandle,\n  selectors: [[\"\", \"pReorderableRowHandle\", \"\"]],\n  inputs: {\n    index: [\"pReorderableRowHandle\", \"index\"]\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ReorderableRowHandle,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRowHandle]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  },\n  propDecorators: {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRowHandle\"]\n    }]\n  }\n});\n\nclass ReorderableRow {\n  constructor(dt, el, zone) {\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.el.nativeElement.droppable = true;\n      this.bindEvents();\n    }\n  }\n\n  bindEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.mouseDownListener = this.onMouseDown.bind(this);\n      this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n      this.dragStartListener = this.onDragStart.bind(this);\n      this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n      this.dragEndListener = this.onDragEnd.bind(this);\n      this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n      this.dragOverListener = this.onDragOver.bind(this);\n      this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      this.dragLeaveListener = this.onDragLeave.bind(this);\n      this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n    });\n  }\n\n  unbindEvents() {\n    if (this.mouseDownListener) {\n      document.removeEventListener('mousedown', this.mouseDownListener);\n      this.mouseDownListener = null;\n    }\n\n    if (this.dragStartListener) {\n      document.removeEventListener('dragstart', this.dragStartListener);\n      this.dragStartListener = null;\n    }\n\n    if (this.dragEndListener) {\n      document.removeEventListener('dragend', this.dragEndListener);\n      this.dragEndListener = null;\n    }\n\n    if (this.dragOverListener) {\n      document.removeEventListener('dragover', this.dragOverListener);\n      this.dragOverListener = null;\n    }\n\n    if (this.dragLeaveListener) {\n      document.removeEventListener('dragleave', this.dragLeaveListener);\n      this.dragLeaveListener = null;\n    }\n  }\n\n  onMouseDown(event) {\n    if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle')) this.el.nativeElement.draggable = true;else this.el.nativeElement.draggable = false;\n  }\n\n  onDragStart(event) {\n    this.dt.onRowDragStart(event, this.index);\n  }\n\n  onDragEnd(event) {\n    this.dt.onRowDragEnd(event);\n    this.el.nativeElement.draggable = false;\n  }\n\n  onDragOver(event) {\n    this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n    event.preventDefault();\n  }\n\n  onDragLeave(event) {\n    this.dt.onRowDragLeave(event, this.el.nativeElement);\n  }\n\n  isEnabled() {\n    return this.pReorderableRowDisabled !== true;\n  }\n\n  onDrop(event) {\n    if (this.isEnabled() && this.dt.rowDragging) {\n      this.dt.onRowDrop(event, this.el.nativeElement);\n    }\n\n    event.preventDefault();\n  }\n\n}\n\nReorderableRow.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ReorderableRow,\n  deps: [{\n    token: Table\n  }, {\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nReorderableRow.ɵdir = i0.ɵɵdefineDirective({\n  type: ReorderableRow,\n  selectors: [[\"\", \"pReorderableRow\", \"\"]],\n  hostBindings: function ReorderableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function ReorderableRow_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    index: [\"pReorderableRow\", \"index\"],\n    pReorderableRowDisabled: \"pReorderableRowDisabled\"\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ReorderableRow,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRow]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  },\n  propDecorators: {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRow\"]\n    }],\n    pReorderableRowDisabled: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  }\n});\n\nclass ColumnFilterFormElement {\n  constructor(dt) {\n    this.dt = dt;\n    this.useGrouping = true;\n  }\n\n  ngOnInit() {\n    this.filterCallback = value => {\n      this.filterConstraint.value = value;\n\n      this.dt._filter();\n    };\n  }\n\n  onModelChange(value) {\n    this.filterConstraint.value = value;\n\n    if (this.type === 'boolean' || value === '') {\n      this.dt._filter();\n    }\n  }\n\n  onTextInputEnterKeyDown(event) {\n    this.dt._filter();\n\n    event.preventDefault();\n  }\n\n  onNumericInputKeyDown(event) {\n    if (event.key === 'Enter') {\n      this.dt._filter();\n\n      event.preventDefault();\n    }\n  }\n\n}\n\nColumnFilterFormElement.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ColumnFilterFormElement,\n  deps: [{\n    token: Table\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nColumnFilterFormElement.ɵcmp = i0.ɵɵdefineComponent({\n  type: ColumnFilterFormElement,\n  selectors: [[\"p-columnFilterFormElement\"]],\n  inputs: {\n    field: \"field\",\n    type: \"type\",\n    filterConstraint: \"filterConstraint\",\n    filterTemplate: \"filterTemplate\",\n    placeholder: \"placeholder\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"builtInElement\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"placeholder\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\"], [3, \"ngModel\", \"ngModelChange\"]],\n  template: function ColumnFilterFormElement_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ColumnFilterFormElement_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_Template, 5, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.filterTemplate)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i3.NgIf, i3.NgTemplateOutlet, i3.NgSwitch, i3.NgSwitchCase, i8.InputText, i9.NgControlStatus, i9.NgModel],\n  encapsulation: 2\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ColumnFilterFormElement,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilterFormElement',\n      template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: Table\n    }];\n  },\n  propDecorators: {\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    filterConstraint: [{\n      type: Input\n    }],\n    filterTemplate: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }]\n  }\n});\n\nclass ColumnFilter {\n  constructor(el, dt, renderer, config) {\n    this.el = el;\n    this.dt = dt;\n    this.renderer = renderer;\n    this.config = config;\n    this.type = 'text';\n    this.display = 'row';\n    this.showMenu = true;\n    this.operator = FilterOperator.AND;\n    this.showOperator = true;\n    this.showClearButton = true;\n    this.showApplyButton = true;\n    this.showMatchModes = true;\n    this.showAddButton = true;\n    this.hideOnClear = false;\n    this.maxConstraints = 2;\n    this.useGrouping = true;\n  }\n\n  ngOnInit() {\n    if (!this.dt.filters[this.field]) {\n      this.initFieldFilterConstraint();\n    }\n\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\n      this.generateMatchModeOptions();\n      this.generateOperatorOptions();\n    });\n    this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n      this.clearFilter();\n    });\n    this.generateMatchModeOptions();\n    this.generateOperatorOptions();\n  }\n\n  generateMatchModeOptions() {\n    var _a;\n\n    this.matchModes = this.matchModeOptions || ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(key => {\n      return {\n        label: this.config.getTranslation(key),\n        value: key\n      };\n    }));\n  }\n\n  generateOperatorOptions() {\n    this.operatorOptions = [{\n      label: this.config.getTranslation(TranslationKeys.MATCH_ALL),\n      value: FilterOperator.AND\n    }, {\n      label: this.config.getTranslation(TranslationKeys.MATCH_ANY),\n      value: FilterOperator.OR\n    }];\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.filterTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  initFieldFilterConstraint() {\n    let defaultMatchMode = this.getDefaultMatchMode();\n    this.dt.filters[this.field] = this.display == 'row' ? {\n      value: null,\n      matchMode: defaultMatchMode\n    } : [{\n      value: null,\n      matchMode: defaultMatchMode,\n      operator: this.operator\n    }];\n  }\n\n  onMenuMatchModeChange(value, filterMeta) {\n    filterMeta.matchMode = value;\n\n    if (!this.showApplyButton) {\n      this.dt._filter();\n    }\n  }\n\n  onRowMatchModeChange(matchMode) {\n    this.dt.filters[this.field].matchMode = matchMode;\n\n    this.dt._filter();\n\n    this.hide();\n  }\n\n  onRowMatchModeKeyDown(event) {\n    let item = event.target;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        var nextItem = this.findNextItem(item);\n\n        if (nextItem) {\n          item.removeAttribute('tabindex');\n          nextItem.tabIndex = '0';\n          nextItem.focus();\n        }\n\n        event.preventDefault();\n        break;\n\n      case 'ArrowUp':\n        var prevItem = this.findPrevItem(item);\n\n        if (prevItem) {\n          item.removeAttribute('tabindex');\n          prevItem.tabIndex = '0';\n          prevItem.focus();\n        }\n\n        event.preventDefault();\n        break;\n    }\n  }\n\n  onRowClearItemClick() {\n    this.clearFilter();\n    this.hide();\n  }\n\n  isRowMatchModeSelected(matchMode) {\n    return this.dt.filters[this.field].matchMode === matchMode;\n  }\n\n  addConstraint() {\n    this.dt.filters[this.field].push({\n      value: null,\n      matchMode: this.getDefaultMatchMode(),\n      operator: this.getDefaultOperator()\n    });\n\n    this.dt._filter();\n  }\n\n  removeConstraint(filterMeta) {\n    this.dt.filters[this.field] = this.dt.filters[this.field].filter(meta => meta !== filterMeta);\n\n    this.dt._filter();\n  }\n\n  onOperatorChange(value) {\n    this.dt.filters[this.field].forEach(filterMeta => {\n      filterMeta.operator = value;\n      this.operator = value;\n    });\n\n    if (!this.showApplyButton) {\n      this.dt._filter();\n    }\n  }\n\n  toggleMenu() {\n    this.overlayVisible = !this.overlayVisible;\n  }\n\n  onToggleButtonKeyDown(event) {\n    switch (event.key) {\n      case 'Escape':\n      case 'Tab':\n        this.overlayVisible = false;\n        break;\n\n      case 'ArrowDown':\n        if (this.overlayVisible) {\n          let focusable = DomHandler.getFocusableElements(this.overlay);\n\n          if (focusable) {\n            focusable[0].focus();\n          }\n\n          event.preventDefault();\n        } else if (event.altKey) {\n          this.overlayVisible = true;\n          event.preventDefault();\n        }\n\n        break;\n    }\n  }\n\n  onEscape() {\n    this.overlayVisible = false;\n    this.icon.nativeElement.focus();\n  }\n\n  findNextItem(item) {\n    let nextItem = item.nextElementSibling;\n    if (nextItem) return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;else return item.parentElement.firstElementChild;\n  }\n\n  findPrevItem(item) {\n    let prevItem = item.previousElementSibling;\n    if (prevItem) return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;else return item.parentElement.lastElementChild;\n  }\n\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        document.body.appendChild(this.overlay);\n        this.overlay.style.zIndex = String(++DomHandler.zindex);\n        DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n        break;\n    }\n  }\n\n  getDefaultMatchMode() {\n    if (this.matchMode) {\n      return this.matchMode;\n    } else {\n      if (this.type === 'text') return FilterMatchMode.STARTS_WITH;else if (this.type === 'numeric') return FilterMatchMode.EQUALS;else if (this.type === 'date') return FilterMatchMode.DATE_IS;else return FilterMatchMode.CONTAINS;\n    }\n  }\n\n  getDefaultOperator() {\n    return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n  }\n\n  hasRowFilter() {\n    return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n  }\n\n  get fieldConstraints() {\n    return this.dt.filters ? this.dt.filters[this.field] : null;\n  }\n\n  get showRemoveIcon() {\n    return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n  }\n\n  get showMenuButton() {\n    return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n  }\n\n  get isShowOperator() {\n    return this.showOperator && this.type !== 'boolean';\n  }\n\n  get isShowAddConstraint() {\n    return this.showAddButton && this.type !== 'boolean' && this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints;\n  }\n\n  get applyButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.APPLY);\n  }\n\n  get clearButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.CLEAR);\n  }\n\n  get addRuleButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.ADD_RULE);\n  }\n\n  get removeRuleButtonLabel() {\n    return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n  }\n\n  get noFilterLabel() {\n    return this.config.getTranslation(TranslationKeys.NO_FILTER);\n  }\n\n  hasFilter() {\n    let fieldFilter = this.dt.filters[this.field];\n\n    if (fieldFilter) {\n      if (Array.isArray(fieldFilter)) return !this.dt.isFilterBlank(fieldFilter[0].value);else return !this.dt.isFilterBlank(fieldFilter.value);\n    }\n\n    return false;\n  }\n\n  isOutsideClicked(event) {\n    return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target) || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target) || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button') || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n        if (this.isOutsideClicked(event)) {\n          this.hide();\n        }\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = () => this.hide();\n\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  hide() {\n    this.overlayVisible = false;\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n  }\n\n  clearFilter() {\n    this.initFieldFilterConstraint();\n\n    this.dt._filter();\n\n    if (this.hideOnClear) this.hide();\n  }\n\n  applyFilter() {\n    this.dt._filter();\n\n    this.hide();\n  }\n\n  ngOnDestroy() {\n    if (this.overlay) {\n      this.el.nativeElement.appendChild(this.overlay);\n      this.onOverlayHide();\n    }\n\n    if (this.translationSubscription) {\n      this.translationSubscription.unsubscribe();\n    }\n\n    if (this.resetSubscription) {\n      this.resetSubscription.unsubscribe();\n    }\n  }\n\n}\n\nColumnFilter.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ColumnFilter,\n  deps: [{\n    token: i0.ElementRef\n  }, {\n    token: Table\n  }, {\n    token: i0.Renderer2\n  }, {\n    token: i1.PrimeNGConfig\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nColumnFilter.ɵcmp = i0.ɵɵdefineComponent({\n  type: ColumnFilter,\n  selectors: [[\"p-columnFilter\"]],\n  contentQueries: function ColumnFilter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function ColumnFilter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c32, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.icon = _t.first);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    type: \"type\",\n    display: \"display\",\n    showMenu: \"showMenu\",\n    matchMode: \"matchMode\",\n    operator: \"operator\",\n    showOperator: \"showOperator\",\n    showClearButton: \"showClearButton\",\n    showApplyButton: \"showApplyButton\",\n    showMatchModes: \"showMatchModes\",\n    showAddButton: \"showAddButton\",\n    hideOnClear: \"hideOnClear\",\n    placeholder: \"placeholder\",\n    matchModeOptions: \"matchModeOptions\",\n    maxConstraints: \"maxConstraints\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\"\n  },\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"p-column-filter\", 3, \"ngClass\"], [\"class\", \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-menu-button p-link\", \"aria-haspopup\", \"true\", 3, \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-clear-button p-link\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"keydown.escape\", 4, \"ngIf\"], [1, \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"aria-haspopup\", \"true\", 1, \"p-column-filter-menu-button\", \"p-link\", 3, \"ngClass\", \"click\", \"keydown\"], [\"icon\", \"\"], [1, \"pi\", \"pi-filter-icon\", \"pi-filter\"], [\"type\", \"button\", 1, \"p-column-filter-clear-button\", \"p-link\", 3, \"ngClass\", \"click\"], [1, \"pi\", \"pi-filter-slash\"], [3, \"ngClass\", \"keydown.escape\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-column-filter-row-items\", 4, \"ngIf\", \"ngIfElse\"], [\"menu\", \"\"], [1, \"p-column-filter-row-items\"], [\"class\", \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-column-filter-separator\"], [1, \"p-column-filter-row-item\", 3, \"click\", \"keydown\", \"keydown.enter\"], [1, \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\"], [\"class\", \"p-column-filter-operator\", 4, \"ngIf\"], [1, \"p-column-filter-constraints\"], [\"class\", \"p-column-filter-constraint\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-column-filter-add-rule\", 4, \"ngIf\"], [1, \"p-column-filter-buttonbar\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-outlined\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [1, \"p-column-filter-operator\"], [\"styleClass\", \"p-column-filter-operator-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [1, \"p-column-filter-constraint\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"class\", \"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"pRipple\", \"\", 1, \"p-column-filter-remove-button\", \"p-button-text\", \"p-button-danger\", \"p-button-sm\", 3, \"label\", \"click\"], [1, \"p-column-filter-add-rule\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-plus\", \"pRipple\", \"\", 1, \"p-column-filter-add-button\", \"p-button-text\", \"p-button-sm\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-outlined\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 3, \"label\", \"click\"]],\n  template: function ColumnFilter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ColumnFilter_p_columnFilterFormElement_1_Template, 1, 14, \"p-columnFilterFormElement\", 1);\n      i0.ɵɵtemplate(2, ColumnFilter_button_2_Template, 3, 5, \"button\", 2);\n      i0.ɵɵtemplate(3, ColumnFilter_button_3_Template, 3, 3, \"button\", 3);\n      i0.ɵɵtemplate(4, ColumnFilter_div_4_Template, 6, 14, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c37, ctx.display === \"row\", ctx.display === \"menu\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.display === \"row\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenuButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenuButton && ctx.display === \"row\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMenu && ctx.overlayVisible);\n    }\n  },\n  directives: [i3.NgClass, i3.NgIf, i3.NgTemplateOutlet, i3.NgForOf, i9.NgControlStatus, i9.NgModel, i11.ButtonDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n      opacity: 0\n    }))])])]\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: ColumnFilter,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilter',\n      template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\" \n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" \n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: Table\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.PrimeNGConfig\n    }];\n  },\n  propDecorators: {\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    showMenu: [{\n      type: Input\n    }],\n    matchMode: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    showOperator: [{\n      type: Input\n    }],\n    showClearButton: [{\n      type: Input\n    }],\n    showApplyButton: [{\n      type: Input\n    }],\n    showMatchModes: [{\n      type: Input\n    }],\n    showAddButton: [{\n      type: Input\n    }],\n    hideOnClear: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    matchModeOptions: [{\n      type: Input\n    }],\n    maxConstraints: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    icon: [{\n      type: ViewChild,\n      args: ['icon']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  }\n});\n\nclass TableModule {}\n\nTableModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nTableModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableModule,\n  declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement],\n  imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n  exports: [Table, SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter]\n});\nTableModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableModule,\n  imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule, ScrollingModule]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"12.0.0\",\n  ngImport: i0,\n  type: TableModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n      exports: [Table, SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n      declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n    }]\n  }]\n});\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowToggler, SaveEditableRow, ScrollableView, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService }; //# sourceMappingURL=primeng-table.js.map","map":{"version":3,"sources":["C:/Users/trang/Projects/SenecaForum/node_modules/primeng/fesm2015/primeng-table.js"],"names":["i0","Injectable","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","Directive","HostListener","Optional","NgModule","i3","CommonModule","i9","FormsModule","i1","FilterOperator","FilterMatchMode","PrimeTemplate","TranslationKeys","SharedModule","i2","PaginatorModule","i8","InputTextModule","i11","ButtonModule","SelectButtonModule","i6","TriStateCheckboxModule","i7","CalendarModule","i5","InputNumberModule","i10","DropdownModule","DomHandler","ConnectedOverlayScrollHandler","ObjectUtils","Subject","i4","CdkVirtualScrollViewport","ScrollingModule","trigger","transition","style","animate","TableService","constructor","sortSource","selectionSource","contextMenuSource","valueSource","totalRecordsSource","columnsSource","resetSource","sortSource$","asObservable","selectionSource$","contextMenuSource$","valueSource$","totalRecordsSource$","columnsSource$","resetSource$","onSort","sortMeta","next","onSelectionChange","onResetChange","onContextMenu","data","onValueChange","value","onTotalRecordsChange","onColumnsChange","columns","ɵfac","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","target","ɵɵFactoryTarget","ɵprov","ɵɵngDeclareInjectable","ɵɵngDeclareClassMetadata","decorators","Table","el","zone","tableService","cd","filterService","pageLinks","alwaysShowPaginator","paginatorPosition","paginatorDropdownScrollHeight","currentPageReportTemplate","showFirstLastIcon","showPageLinks","defaultSortOrder","sortMode","resetPageOnSort","selectionChange","contextMenuSelectionChange","contextMenuSelectionMode","rowTrackBy","index","item","lazy","lazyLoadOnInit","compareSelectionBy","csvSeparator","exportFilename","filters","filterDelay","expandedRowKeys","editingRowKeys","rowExpandMode","virtualScrollDelay","virtualRowHeight","columnResizeMode","loadingIcon","showLoader","showInitialSortBadge","stateStorage","editMode","onRowSelect","onRowUnselect","onPage","onFilter","onLazyLoad","onRowExpand","onRowCollapse","onContextMenuSelect","onColResize","onColReorder","onRowReorder","onEditInit","onEditComplete","onEditCancel","onHeaderCheckboxToggle","sortFunction","firstChange","rowsChange","onStateSave","onStateRestore","_value","_totalRecords","_first","selectionKeys","_sortOrder","ngOnInit","virtualScroll","emit","createLazyLoadMetadata","restoringFilter","initialized","ngAfterContentInit","templates","forEach","getType","captionTemplate","template","headerTemplate","bodyTemplate","loadingBodyTemplate","footerTemplate","summaryTemplate","colGroupTemplate","expandedRowTemplate","frozenRowsTemplate","frozenHeaderTemplate","frozenBodyTemplate","frozenFooterTemplate","frozenColGroupTemplate","frozenExpandedRowTemplate","emptyMessageTemplate","paginatorLeftTemplate","paginatorRightTemplate","paginatorDropdownItemTemplate","ngAfterViewInit","isStateful","resizableColumns","restoreColumnWidths","ngOnChanges","simpleChange","stateRestored","restoreState","currentValue","totalRecords","length","sortField","sortSingle","multiSortMeta","sortMultiple","hasFilter","_filter","_columns","reorderableColumns","columnOrderStateRestored","restoreColumnOrder","_sortField","sortOrder","_multiSortMeta","selection","_selection","preventSelectionSetterPropagation","updateSelectionKeys","val","cols","first","rows","_rows","dataKey","Array","isArray","String","resolveFieldData","onPageChange","event","saveState","anchorRowIndex","scrollable","resetScrollTop","sort","originalEvent","field","metaKey","ctrlKey","getSortMeta","order","push","restoringSort","customSort","mode","data1","data2","value1","value2","result","localeCompare","multisortField","multisortmeta","i","isSorted","sorted","handleRowClick","targetNode","nodeName","parentNode","parentElement","hasClass","selectionMode","isMultipleSelectionMode","shiftKey","clearSelection","rangeRowIndex","clearSelectionRange","rowIndex","selectRange","rowData","selected","isSelected","metaSelection","rowTouched","metaKeySelection","dataKeyValue","isSingleSelectionMode","selectionIndex","findIndexInSelection","filter","handleRowTouchEnd","handleRowRightClick","contextMenu","contextMenuSelection","show","rangeStart","rangeEnd","paginator","rangeRowsData","rangeRowData","filteredValue","undefined","equals","toggleRowWithRadio","toggleRowWithCheckbox","toggleRowsWithCheckbox","check","slice","checked","matchMode","filterTimeout","clearTimeout","isFilterBlank","setTimeout","filterGlobal","trim","globalFilterFieldsArray","globalFilterFields","Error","localMatch","globalMatch","localFiltered","prop","hasOwnProperty","filterField","filterMeta","meta","executeLocalFilter","operator","OR","AND","j","globalFilterField","filterLocale","matches","markForCheck","filterValue","filterMatchMode","STARTS_WITH","dataFieldValue","filterConstraint","empty","globalFilter","clear","reset","exportCSV","options","csv","frozenColumns","selectionOnly","frozenValue","column","exportable","header","record","cellData","exportFunction","replace","blob","Blob","window","navigator","msSaveOrOpenBlob","link","document","createElement","display","body","appendChild","download","setAttribute","URL","createObjectURL","click","open","encodeURI","removeChild","scrollToVirtualIndex","scrollTo","top","scrollableViewChild","scrollableFrozenViewChild","updateEditingCell","cell","editingCell","editingCellData","editingCellField","editingCellRowIndex","bindDocumentEditListener","isEditingCellValid","find","documentEditListener","editingCellClick","removeClass","unbindDocumentEditListener","addEventListener","removeEventListener","initRowEdit","saveRowEdit","rowElement","cancelRowEdit","toggleRow","preventDefault","isRowExpanded","isRowEditing","onColumnResizeBegin","containerLeft","getOffset","containerViewChild","nativeElement","left","lastResizerHelperX","pageX","scrollLeft","onColumnResize","addClass","resizeHelperViewChild","height","offsetHeight","onColumnResizeEnd","delta","offsetLeft","columnWidth","offsetWidth","minWidth","parseInt","newColumnWidth","nextColumn","nextElementSibling","offsetParent","nextColumnWidth","nextColumnMinWidth","scrollableView","findParentScrollableView","scrollableBodyTable","findSingle","scrollableHeaderTable","scrollableFooterTable","resizeColumnIndex","resizeColGroup","width","setScrollableItemsWidthOnExpandResize","tableViewChild","containerWidth","element","scrollableBody","scrollableHeader","scrollableFooter","scrollableBodyTableWidth","scrollableHeaderTableWidth","isContainerInViewport","setWidth","container","table","calculateScrollbarWidth","parent","colGroup","children","col","nextCol","onColumnDragStart","columnElement","reorderIconWidth","getHiddenElementOuterWidth","reorderIndicatorUpViewChild","reorderIconHeight","getHiddenElementOuterHeight","reorderIndicatorDownViewChild","draggedColumn","dataTransfer","setData","onColumnDragEnter","dropHeader","containerOffset","dropHeaderOffset","dragIndex","indexWithinGroup","dropIndex","targetLeft","targetTop","columnCenter","Math","ceil","dropPosition","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","allowDrop","reorderArray","runOutsideAngular","draggable","onRowDragStart","rowDragging","draggedRowIndex","onRowDragOver","rowY","getWindowScrollTop","pageY","rowMidY","getOuterHeight","prevRowElement","previousElementSibling","droppedRowIndex","onRowDragLeave","onRowDragEnd","onRowDrop","isEmpty","getBlockableElement","getStorage","localStorage","sessionStorage","stateKey","storage","state","saveColumnWidths","saveColumnOrder","Object","keys","setItem","JSON","stringify","clearState","removeItem","stateString","getItem","dateFormat","reviver","key","test","Date","parse","columnWidthsState","columnWidths","tableWidthState","tableWidth","Promise","resolve","then","widths","headers","map","getOuterWidth","join","split","headerCols","bodyCols","columnOrder","reorderedColumns","findColumnByKey","ngOnDestroy","token","ElementRef","NgZone","ChangeDetectorRef","FilterService","ɵcmp","NgStyle","NgClass","NgIf","NgTemplateOutlet","args","selector","providers","changeDetection","Default","encapsulation","None","styleUrls","ctorParameters","propDecorators","styleClass","tableStyle","tableStyleClass","rowsPerPageOptions","paginatorDropdownAppendTo","showCurrentPageReport","showJumpToPageDropdown","scrollHeight","frozenWidth","responsive","loading","rowHover","autoLayout","minBufferPx","maxBufferPx","TableBody","dt","subscription","subscribe","detectChanges","unsubscribe","NgForOf","CdkVirtualForOf","SlicePipe","frozen","ScrollableView","_scrollHeight","includes","console","log","virtualScrollBody","frozenView","frozenSiblingBody","scrollBarWidth","scrollHeaderBoxViewChild","paddingRight","scrollFooterBoxViewChild","scrollableAlignerViewChild","calculateScrollbarHeight","bindEvents","scrollHeaderViewChild","headerScrollListener","onHeaderScroll","bind","scrollFooterViewChild","footerScrollListener","onFooterScroll","bodyScrollListener","onBodyScroll","getElementRef","scrollBodyViewChild","unbindEvents","preventBodyScrollPropagation","marginLeft","scrollTop","onScrollIndexChange","virtualScrollTimeout","page","floor","virtualScrollOffset","virtualScrollChunkSize","virtualPage","getPageCount","dataToRender","dataLength","scrollToIndex","CdkFixedSizeVirtualScroll","scrollTableViewChild","SortableColumn","isEnabled","updateSortState","onClick","isFilterElement","onEnterKey","pSortableColumnDisabled","ɵdir","host","SortIcon","getMultiSortMetaIndex","isMultiSorted","OnPush","SelectableRow","onTouchEnd","onArrowDownKeyDown","row","currentTarget","nextRow","findNextSelectableRow","focus","onArrowUpKeyDown","prevRow","findPrevSelectableRow","onEnterKeyDown","onPageDownKeyDown","onSpaceKeydown","pSelectableRowDisabled","SelectableRowDblClick","ContextMenuRow","pContextMenuRowDisabled","RowToggler","pRowTogglerDisabled","ResizableColumn","resizer","className","resizerMouseDownListener","onMouseDown","bindDocumentEvents","documentMouseMoveListener","onDocumentMouseMove","documentMouseUpListener","onDocumentMouseUp","unbindDocumentEvents","which","pResizableColumnDisabled","ReorderableColumn","mouseDownListener","dragStartListener","onDragStart","dragOverListener","onDragEnter","dragEnterListener","dragLeaveListener","onDragLeave","onDragOver","onDrop","pReorderableColumnDisabled","EditableColumn","closeEditingCell","openCell","focusCellSelector","pFocusCellSelector","focusableElement","completed","onEscapeKeyDown","onShiftKeyDown","moveToPreviousCell","moveToNextCell","onArrowDown","currentCell","findCell","cellIndex","targetCell","findNextEditableColumnByIndex","invokeElementMethod","onArrowUp","findPrevEditableColumnByIndex","onArrowLeft","onArrowRight","findPreviousEditableColumn","findNextEditableColumn","prevCell","previousRow","lastElementChild","nextCell","firstElementChild","pEditableColumnDisabled","EditableRow","pEditableRowDisabled","InitEditableRow","editableRow","SaveEditableRow","CancelEditableRow","CellEditor","editableColumn","inputTemplate","outputTemplate","editing","optional","TableRadioButton","disabled","onFocus","boxViewChild","onBlur","inputId","name","ariaLabel","TableCheckbox","required","TableHeaderCheckbox","valueChangeSubscription","updateCheckedState","selectionChangeSubscription","isDisabled","isAllFilteredValuesChecked","ReorderableRowHandle","ReorderableRow","droppable","dragEndListener","onDragEnd","pReorderableRowDisabled","ColumnFilterFormElement","useGrouping","filterCallback","onModelChange","onTextInputEnterKeyDown","onNumericInputKeyDown","NgSwitch","NgSwitchCase","InputText","NgControlStatus","NgModel","filterTemplate","placeholder","minFractionDigits","maxFractionDigits","prefix","suffix","locale","localeMatcher","currency","currencyDisplay","ColumnFilter","renderer","config","showMenu","showOperator","showClearButton","showApplyButton","showMatchModes","showAddButton","hideOnClear","maxConstraints","initFieldFilterConstraint","translationSubscription","translationObserver","generateMatchModeOptions","generateOperatorOptions","resetSubscription","clearFilter","_a","matchModes","matchModeOptions","filterMatchModeOptions","label","getTranslation","operatorOptions","MATCH_ALL","MATCH_ANY","defaultMatchMode","getDefaultMatchMode","onMenuMatchModeChange","onRowMatchModeChange","hide","onRowMatchModeKeyDown","nextItem","findNextItem","removeAttribute","tabIndex","prevItem","findPrevItem","onRowClearItemClick","isRowMatchModeSelected","addConstraint","getDefaultOperator","removeConstraint","onOperatorChange","toggleMenu","overlayVisible","onToggleButtonKeyDown","focusable","getFocusableElements","overlay","altKey","onEscape","icon","onOverlayAnimationStart","toState","zIndex","zindex","absolutePosition","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","EQUALS","DATE_IS","CONTAINS","hasRowFilter","fieldConstraints","showRemoveIcon","showMenuButton","isShowOperator","isShowAddConstraint","applyButtonLabel","APPLY","clearButtonLabel","CLEAR","addRuleButtonLabel","ADD_RULE","removeRuleButtonLabel","REMOVE_RULE","noFilterLabel","NO_FILTER","fieldFilter","isOutsideClicked","isSameNode","contains","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentResizeListener","unbindDocumentResizeListener","scrollHandler","unbindScrollListener","applyFilter","Renderer2","PrimeNGConfig","ButtonDirective","opacity","transform","animations","TableModule","ɵmod","ɵɵngDeclareNgModule","declarations","imports","exports","ɵinj","ɵɵngDeclareInjector"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i9 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { FilterOperator, FilterMatchMode, PrimeTemplate, TranslationKeys, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport * as i8 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i11 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport * as i6 from 'primeng/tristatecheckbox';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport * as i7 from 'primeng/calendar';\nimport { CalendarModule } from 'primeng/calendar';\nimport * as i5 from 'primeng/inputnumber';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport * as i10 from 'primeng/dropdown';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\nclass TableService {\n    constructor() {\n        this.sortSource = new Subject();\n        this.selectionSource = new Subject();\n        this.contextMenuSource = new Subject();\n        this.valueSource = new Subject();\n        this.totalRecordsSource = new Subject();\n        this.columnsSource = new Subject();\n        this.resetSource = new Subject();\n        this.sortSource$ = this.sortSource.asObservable();\n        this.selectionSource$ = this.selectionSource.asObservable();\n        this.contextMenuSource$ = this.contextMenuSource.asObservable();\n        this.valueSource$ = this.valueSource.asObservable();\n        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n        this.columnsSource$ = this.columnsSource.asObservable();\n        this.resetSource$ = this.resetSource.asObservable();\n    }\n    onSort(sortMeta) {\n        this.sortSource.next(sortMeta);\n    }\n    onSelectionChange() {\n        this.selectionSource.next();\n    }\n    onResetChange() {\n        this.resetSource.next();\n    }\n    onContextMenu(data) {\n        this.contextMenuSource.next(data);\n    }\n    onValueChange(value) {\n        this.valueSource.next(value);\n    }\n    onTotalRecordsChange(value) {\n        this.totalRecordsSource.next(value);\n    }\n    onColumnsChange(columns) {\n        this.columnsSource.next(columns);\n    }\n}\nTableService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTableService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableService, decorators: [{\n            type: Injectable\n        }] });\nclass Table {\n    constructor(el, zone, tableService, cd, filterService) {\n        this.el = el;\n        this.zone = zone;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.pageLinks = 5;\n        this.alwaysShowPaginator = true;\n        this.paginatorPosition = 'bottom';\n        this.paginatorDropdownScrollHeight = '200px';\n        this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n        this.showFirstLastIcon = true;\n        this.showPageLinks = true;\n        this.defaultSortOrder = 1;\n        this.sortMode = 'single';\n        this.resetPageOnSort = true;\n        this.selectionChange = new EventEmitter();\n        this.contextMenuSelectionChange = new EventEmitter();\n        this.contextMenuSelectionMode = \"separate\";\n        this.rowTrackBy = (index, item) => item;\n        this.lazy = false;\n        this.lazyLoadOnInit = true;\n        this.compareSelectionBy = 'deepEquals';\n        this.csvSeparator = ',';\n        this.exportFilename = 'download';\n        this.filters = {};\n        this.filterDelay = 300;\n        this.expandedRowKeys = {};\n        this.editingRowKeys = {};\n        this.rowExpandMode = 'multiple';\n        this.virtualScrollDelay = 250;\n        this.virtualRowHeight = 28;\n        this.columnResizeMode = 'fit';\n        this.loadingIcon = 'pi pi-spinner';\n        this.showLoader = true;\n        this.showInitialSortBadge = true;\n        this.stateStorage = 'session';\n        this.editMode = 'cell';\n        this.onRowSelect = new EventEmitter();\n        this.onRowUnselect = new EventEmitter();\n        this.onPage = new EventEmitter();\n        this.onSort = new EventEmitter();\n        this.onFilter = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onRowExpand = new EventEmitter();\n        this.onRowCollapse = new EventEmitter();\n        this.onContextMenuSelect = new EventEmitter();\n        this.onColResize = new EventEmitter();\n        this.onColReorder = new EventEmitter();\n        this.onRowReorder = new EventEmitter();\n        this.onEditInit = new EventEmitter();\n        this.onEditComplete = new EventEmitter();\n        this.onEditCancel = new EventEmitter();\n        this.onHeaderCheckboxToggle = new EventEmitter();\n        this.sortFunction = new EventEmitter();\n        this.firstChange = new EventEmitter();\n        this.rowsChange = new EventEmitter();\n        this.onStateSave = new EventEmitter();\n        this.onStateRestore = new EventEmitter();\n        this._value = [];\n        this._totalRecords = 0;\n        this._first = 0;\n        this.selectionKeys = {};\n        this._sortOrder = 1;\n    }\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n            if (!this.virtualScroll) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            if (this.restoringFilter) {\n                this.restoringFilter = false;\n            }\n        }\n        this.initialized = true;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n                case 'loadingbody':\n                    this.loadingBodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                    break;\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                    break;\n                case 'rowexpansion':\n                    this.expandedRowTemplate = item.template;\n                    break;\n                case 'frozenrows':\n                    this.frozenRowsTemplate = item.template;\n                    break;\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                    break;\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                    break;\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                    break;\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                    break;\n                case 'frozenrowexpansion':\n                    this.frozenExpandedRowTemplate = item.template;\n                    break;\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                    break;\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                    break;\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                    break;\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.isStateful() && this.resizableColumns) {\n            this.restoreColumnWidths();\n        }\n    }\n    ngOnChanges(simpleChange) {\n        if (simpleChange.value) {\n            if (this.isStateful() && !this.stateRestored) {\n                this.restoreState();\n            }\n            this._value = simpleChange.value.currentValue;\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter()) //sort already filters\n                    this._filter();\n            }\n            this.tableService.onValueChange(simpleChange.value.currentValue);\n        }\n        if (simpleChange.columns) {\n            this._columns = simpleChange.columns.currentValue;\n            this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n                this.restoreColumnOrder();\n            }\n        }\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple' && (this.initialized || (!this.lazy && !this.virtualScroll))) {\n                this.sortMultiple();\n            }\n        }\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n    }\n    get columns() {\n        return this._columns;\n    }\n    set columns(cols) {\n        this._columns = cols;\n    }\n    get first() {\n        return this._first;\n    }\n    set first(val) {\n        this._first = val;\n    }\n    get rows() {\n        return this._rows;\n    }\n    set rows(val) {\n        this._rows = val;\n    }\n    get totalRecords() {\n        return this._totalRecords;\n    }\n    set totalRecords(val) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n    get sortField() {\n        return this._sortField;\n    }\n    set sortField(val) {\n        this._sortField = val;\n    }\n    get sortOrder() {\n        return this._sortOrder;\n    }\n    set sortOrder(val) {\n        this._sortOrder = val;\n    }\n    get multiSortMeta() {\n        return this._multiSortMeta;\n    }\n    set multiSortMeta(val) {\n        this._multiSortMeta = val;\n    }\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n    }\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for (let data of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n            }\n        }\n    }\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    sort(event) {\n        let originalEvent = event.originalEvent;\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n                if (this.scrollable) {\n                    this.resetScrollTop();\n                }\n            }\n            this.sortSingle();\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                        if (this.scrollable) {\n                            this.resetScrollTop();\n                        }\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                    }\n                }\n                this._multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n            this.sortMultiple();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n    }\n    sortSingle() {\n        if (this.sortField && this.sortOrder) {\n            if (this.restoringSort) {\n                this.restoringSort = false;\n            }\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        field: this.sortField,\n                        order: this.sortOrder\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n                        let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n                        let result = null;\n                        if (value1 == null && value2 != null)\n                            result = -1;\n                        else if (value1 != null && value2 == null)\n                            result = 1;\n                        else if (value1 == null && value2 == null)\n                            result = 0;\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\n                            result = value1.localeCompare(value2);\n                        else\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n                        return (this.sortOrder * result);\n                    });\n                    this._value = [...this.value];\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            let sortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n        }\n    }\n    sortMultiple() {\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        return this.multisortField(data1, data2, this.multiSortMeta, 0);\n                    });\n                    this._value = [...this.value];\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n    multisortField(data1, data2, multiSortMeta, index) {\n        let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        let result = null;\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        else if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\n        }\n        return (multiSortMeta[index].order * result);\n    }\n    getSortMeta(field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n        return null;\n    }\n    isSorted(field) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for (let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n    handleRowClick(event) {\n        let target = event.originalEvent.target;\n        let targetNode = target.nodeName;\n        let parentNode = target.parentElement && target.parentElement.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n            parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n            (DomHandler.hasClass(event.originalEvent.target, 'p-clickable'))) {\n            return;\n        }\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n                DomHandler.clearSelection();\n                if (this.rangeRowIndex != null) {\n                    this.clearSelectionRange(event.originalEvent);\n                }\n                this.rangeRowIndex = event.rowIndex;\n                this.selectRange(event.originalEvent, event.rowIndex);\n            }\n            else {\n                let rowData = event.rowData;\n                let selected = this.isSelected(rowData);\n                let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                this.anchorRowIndex = event.rowIndex;\n                this.rangeRowIndex = event.rowIndex;\n                if (metaSelection) {\n                    let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = rowData;\n                            this.selectionChange.emit(rowData);\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            if (metaKey) {\n                                this._selection = this.selection || [];\n                            }\n                            else {\n                                this._selection = [];\n                                this.selectionKeys = {};\n                            }\n                            this._selection = [...this.selection, rowData];\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                    }\n                }\n                else {\n                    if (this.selectionMode === 'single') {\n                        if (selected) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                        }\n                        else {\n                            this._selection = rowData;\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                    else if (this.selectionMode === 'multiple') {\n                        if (selected) {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        else {\n                            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                }\n            }\n            this.tableService.onSelectionChange();\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.rowTouched = false;\n    }\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const rowData = event.rowData;\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = rowData;\n                this.contextMenuSelectionChange.emit(rowData);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, data: rowData, index: event.rowIndex });\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(rowData);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(rowData);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = rowData;\n                        this.selectionChange.emit(rowData);\n                        if (dataKeyValue) {\n                            this.selectionKeys = {};\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            this.selectionKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n                this.tableService.onSelectionChange();\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({ originalEvent: event, data: rowData, index: event.rowIndex });\n            }\n        }\n    }\n    selectRange(event, rowIndex) {\n        let rangeStart, rangeEnd;\n        if (this.anchorRowIndex > rowIndex) {\n            rangeStart = rowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else if (this.anchorRowIndex < rowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = rowIndex;\n        }\n        else {\n            rangeStart = rowIndex;\n            rangeEnd = rowIndex;\n        }\n        if (this.lazy && this.paginator) {\n            rangeStart -= this.first;\n            rangeEnd -= this.first;\n        }\n        let rangeRowsData = [];\n        for (let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n            if (!this.isSelected(rangeRowData)) {\n                rangeRowsData.push(rangeRowData);\n                this._selection = [...this.selection, rangeRowData];\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n        }\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({ originalEvent: event, data: rangeRowsData, type: 'row' });\n    }\n    clearSelectionRange(event) {\n        let rangeStart, rangeEnd;\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        for (let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.value[i];\n            let selectionIndex = this.findIndexInSelection(rangeRowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n            this.onRowUnselect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\n        }\n    }\n    isSelected(rowData) {\n        if (rowData && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(rowData) > -1;\n                else\n                    return this.equals(rowData, this.selection);\n            }\n        }\n        return false;\n    }\n    findIndexInSelection(rowData) {\n        let index = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(rowData, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    toggleRowWithRadio(event, rowData) {\n        this.preventSelectionSetterPropagation = true;\n        if (this.selection != rowData) {\n            this._selection = rowData;\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n            if (this.dataKey) {\n                this.selectionKeys = {};\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n            }\n        }\n        else {\n            this._selection = null;\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    toggleRowWithCheckbox(event, rowData) {\n        this.selection = this.selection || [];\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n        if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        else {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    toggleRowsWithCheckbox(event, check) {\n        this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\n        this.preventSelectionSetterPropagation = true;\n        this.updateSelectionKeys();\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    equals(data1, data2) {\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n    }\n    /* Legacy Filtering for custom elements */\n    filter(value, field, matchMode) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        }\n        else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n        this.anchorRowIndex = null;\n    }\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n    isFilterBlank(filter) {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n    _filter() {\n        if (!this.restoringFilter) {\n            this.first = 0;\n            this.firstChange.emit(this.first);\n        }\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n            if (!this.hasFilter()) {\n                this.filteredValue = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\n                }\n                this.filteredValue = [];\n                for (let i = 0; i < this.value.length; i++) {\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let localFiltered = false;\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            localFiltered = true;\n                            let filterField = prop;\n                            let filterMeta = this.filters[filterField];\n                            if (Array.isArray(filterMeta)) {\n                                for (let meta of filterMeta) {\n                                    localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n                                    if ((meta.operator === FilterOperator.OR && localMatch) || (meta.operator === FilterOperator.AND && !localMatch)) {\n                                        break;\n                                    }\n                                }\n                            }\n                            else {\n                                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                            }\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for (let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                            globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n                            if (globalMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    let matches;\n                    if (this.filters['global']) {\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\n                    }\n                    else {\n                        matches = localFiltered && localMatch;\n                    }\n                    if (matches) {\n                        this.filteredValue.push(this.value[i]);\n                    }\n                }\n                if (this.filteredValue.length === this.value.length) {\n                    this.filteredValue = null;\n                }\n                if (this.paginator) {\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: this.filteredValue || this.value\n        });\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful() && !this.restoringFilter) {\n            this.saveState();\n        }\n        if (this.restoringFilter) {\n            this.restoringFilter = false;\n        }\n        this.cd.markForCheck();\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    executeLocalFilter(field, rowData, filterMeta) {\n        let filterValue = filterMeta.value;\n        let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n        let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n        let filterConstraint = this.filterService.filters[filterMatchMode];\n        return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n    }\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n        return !empty;\n    }\n    createLazyLoadMetadata() {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    }\n    clear() {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n        this.filteredValue = null;\n        this.tableService.onResetChange();\n        this.first = 0;\n        this.firstChange.emit(this.first);\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    }\n    reset() {\n        this.clear();\n    }\n    exportCSV(options) {\n        let data;\n        let csv = '';\n        let columns = this.frozenColumns ? [...this.frozenColumns, ...this.columns] : this.columns;\n        if (options && options.selectionOnly) {\n            data = this.selection || [];\n        }\n        else {\n            data = this.filteredValue || this.value;\n            if (this.frozenValue) {\n                data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n            }\n        }\n        //headers\n        for (let i = 0; i < columns.length; i++) {\n            let column = columns[i];\n            if (column.exportable !== false && column.field) {\n                csv += '\"' + (column.header || column.field) + '\"';\n                if (i < (columns.length - 1)) {\n                    csv += this.csvSeparator;\n                }\n            }\n        }\n        //body\n        data.forEach((record, i) => {\n            csv += '\\n';\n            for (let i = 0; i < columns.length; i++) {\n                let column = columns[i];\n                if (column.exportable !== false && column.field) {\n                    let cellData = ObjectUtils.resolveFieldData(record, column.field);\n                    if (cellData != null) {\n                        if (this.exportFunction) {\n                            cellData = this.exportFunction({\n                                data: cellData,\n                                field: column.field\n                            });\n                        }\n                        else\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\n                    }\n                    else\n                        cellData = '';\n                    csv += '\"' + cellData + '\"';\n                    if (i < (columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n        });\n        let blob = new Blob([csv], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        if (window.navigator.msSaveOrOpenBlob) {\n            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n        }\n        else {\n            let link = document.createElement(\"a\");\n            link.style.display = 'none';\n            document.body.appendChild(link);\n            if (link.download !== undefined) {\n                link.setAttribute('href', URL.createObjectURL(blob));\n                link.setAttribute('download', this.exportFilename + '.csv');\n                link.click();\n            }\n            else {\n                csv = 'data:text/csv;charset=utf-8,' + csv;\n                window.open(encodeURI(csv));\n            }\n            document.body.removeChild(link);\n        }\n    }\n    resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({ top: 0 });\n    }\n    scrollToVirtualIndex(index) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableFrozenViewChild.scrollToVirtualIndex(index);\n        }\n    }\n    scrollTo(options) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableFrozenViewChild.scrollTo(options);\n        }\n    }\n    updateEditingCell(cell, data, field, index) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.editingCellRowIndex = index;\n        this.bindDocumentEditListener();\n    }\n    isEditingCellValid() {\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    }\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = (event) => {\n                if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData, originalEvent: event, index: this.editingCellRowIndex });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.editingCellRowIndex = null;\n                    this.unbindDocumentEditListener();\n                    this.cd.markForCheck();\n                }\n                this.editingCellClick = false;\n            };\n            document.addEventListener('click', this.documentEditListener);\n        }\n    }\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    }\n    initRowEdit(rowData) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n    }\n    saveRowEdit(rowData, rowElement) {\n        if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n            let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n            delete this.editingRowKeys[dataKeyValue];\n        }\n    }\n    cancelRowEdit(rowData) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n    }\n    toggleRow(rowData, event) {\n        if (!this.dataKey) {\n            throw new Error('dataKey must be defined to use row expansion');\n        }\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n            delete this.expandedRowKeys[dataKeyValue];\n            this.onRowCollapse.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        else {\n            if (this.rowExpandMode === 'single') {\n                this.expandedRowKeys = {};\n            }\n            this.expandedRowKeys[dataKeyValue] = true;\n            this.onRowExpand.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n    isRowExpanded(rowData) {\n        return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n    isRowEditing(rowData) {\n        return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        this.onColumnResize(event);\n        event.preventDefault();\n    }\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n    onColumnResizeEnd(event, column) {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = column.offsetWidth;\n        let minWidth = parseInt(column.style.minWidth || 15);\n        if (columnWidth + delta < minWidth) {\n            delta = minWidth - columnWidth;\n        }\n        const newColumnWidth = columnWidth + delta;\n        if (newColumnWidth >= minWidth) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = column.nextElementSibling;\n                while (!nextColumn.offsetParent) {\n                    nextColumn = nextColumn.nextElementSibling;\n                }\n                if (nextColumn) {\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n                    let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n                        if (this.scrollable) {\n                            let scrollableView = this.findParentScrollableView(column);\n                            let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-datatable-virtual-scrollable-body table');\n                            let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n                            let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n                            let resizeColumnIndex = DomHandler.index(column);\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            column.style.width = newColumnWidth + 'px';\n                            if (nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                if (newColumnWidth >= minWidth) {\n                    if (this.scrollable) {\n                        this.setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta);\n                    }\n                    else {\n                        this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\n                        column.style.width = newColumnWidth + 'px';\n                        let containerWidth = this.tableViewChild.nativeElement.style.width;\n                        this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n                    }\n                }\n            }\n            this.onColResize.emit({\n                element: column,\n                delta: delta\n            });\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    }\n    setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {\n        let scrollableView = column ? this.findParentScrollableView(column) : this.containerViewChild.nativeElement;\n        let scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport');\n        let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n        let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n        let scrollableBodyTable = DomHandler.findSingle(scrollableBody, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport table');\n        let scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n        let scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n        const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n        const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n        const isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n        let setWidth = (container, table, width, isContainerInViewport) => {\n            if (container && table) {\n                container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n                table.style.width = width + 'px';\n            }\n        };\n        setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n        setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n        setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n        if (column) {\n            let resizeColumnIndex = DomHandler.index(column);\n            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n        }\n    }\n    findParentScrollableView(column) {\n        if (column) {\n            let parent = column.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n                parent = parent.parentElement;\n            }\n            return parent;\n        }\n        else {\n            return null;\n        }\n    }\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n        if (table) {\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n            if (colGroup) {\n                let col = colGroup.children[resizeColumnIndex];\n                let nextCol = col.nextElementSibling;\n                col.style.width = newColumnWidth + 'px';\n                if (nextCol && nextColumnWidth) {\n                    nextCol.style.width = nextColumnWidth + 'px';\n                }\n            }\n            else {\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\n            }\n        }\n    }\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n            if (this.draggedColumn != dropHeader) {\n                let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n                let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n                if ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dropIndex - dragIndex === -1 && this.dropPosition === 1)) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n                }\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n            let allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n                if (this.isStateful()) {\n                    this.zone.runOutsideAngular(() => {\n                        setTimeout(() => {\n                            this.saveState();\n                        });\n                    });\n                }\n            }\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n    onRowDragStart(event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onRowDragOver(event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n            let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n            let pageY = event.pageY;\n            let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n            let prevRowElement = rowElement.previousElementSibling;\n            if (pageY < rowMidY) {\n                DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n                this.droppedRowIndex = index;\n                if (prevRowElement)\n                    DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n            }\n            else {\n                if (prevRowElement)\n                    DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n                this.droppedRowIndex = index + 1;\n                DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n            }\n        }\n    }\n    onRowDragLeave(event, rowElement) {\n        let prevRowElement = rowElement.previousElementSibling;\n        if (prevRowElement) {\n            DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n        }\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n    }\n    onRowDragEnd(event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n    }\n    onRowDrop(event, rowElement) {\n        if (this.droppedRowIndex != null) {\n            let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n            ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n            this.onRowReorder.emit({\n                dragIndex: this.draggedRowIndex,\n                dropIndex: dropIndex\n            });\n        }\n        //cleanup\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n    }\n    isEmpty() {\n        let data = this.filteredValue || this.value;\n        return data == null || data.length == 0;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    getStorage() {\n        switch (this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n            case 'session':\n                return window.sessionStorage;\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    saveState() {\n        const storage = this.getStorage();\n        let state = {};\n        if (this.paginator) {\n            state.first = this.first;\n            state.rows = this.rows;\n        }\n        if (this.sortField) {\n            state.sortField = this.sortField;\n            state.sortOrder = this.sortOrder;\n        }\n        if (this.multiSortMeta) {\n            state.multiSortMeta = this.multiSortMeta;\n        }\n        if (this.hasFilter()) {\n            state.filters = this.filters;\n        }\n        if (this.resizableColumns) {\n            this.saveColumnWidths(state);\n        }\n        if (this.reorderableColumns) {\n            this.saveColumnOrder(state);\n        }\n        if (this.selection) {\n            state.selection = this.selection;\n        }\n        if (Object.keys(this.expandedRowKeys).length) {\n            state.expandedRowKeys = this.expandedRowKeys;\n        }\n        storage.setItem(this.stateKey, JSON.stringify(state));\n        this.onStateSave.emit(state);\n    }\n    clearState() {\n        const storage = this.getStorage();\n        if (this.stateKey) {\n            storage.removeItem(this.stateKey);\n        }\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        const dateFormat = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n        const reviver = function (key, value) {\n            if (typeof value === \"string\" && dateFormat.test(value)) {\n                return new Date(value);\n            }\n            return value;\n        };\n        if (stateString) {\n            let state = JSON.parse(stateString, reviver);\n            if (this.paginator) {\n                if (this.first !== undefined) {\n                    this.first = state.first;\n                    this.firstChange.emit(this.first);\n                }\n                if (this.rows !== undefined) {\n                    this.rows = state.rows;\n                    this.rowsChange.emit(this.rows);\n                }\n            }\n            if (state.sortField) {\n                this.restoringSort = true;\n                this._sortField = state.sortField;\n                this._sortOrder = state.sortOrder;\n            }\n            if (state.multiSortMeta) {\n                this.restoringSort = true;\n                this._multiSortMeta = state.multiSortMeta;\n            }\n            if (state.filters) {\n                this.restoringFilter = true;\n                this.filters = state.filters;\n            }\n            if (this.resizableColumns) {\n                this.columnWidthsState = state.columnWidths;\n                this.tableWidthState = state.tableWidth;\n            }\n            if (state.expandedRowKeys) {\n                this.expandedRowKeys = state.expandedRowKeys;\n            }\n            if (state.selection) {\n                Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n            }\n            this.stateRestored = true;\n            this.onStateRestore.emit(state);\n        }\n    }\n    saveColumnWidths(state) {\n        let widths = [];\n        let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n        headers.map(header => widths.push(DomHandler.getOuterWidth(header)));\n        state.columnWidths = widths.join(',');\n        if (this.columnResizeMode === 'expand') {\n            state.tableWidth = this.scrollable ? DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table').style.width :\n                DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n        }\n    }\n    restoreColumnWidths() {\n        if (this.columnWidthsState) {\n            let widths = this.columnWidthsState.split(',');\n            if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                if (this.scrollable) {\n                    this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\n                }\n                else {\n                    this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n                }\n            }\n            if (this.scrollable) {\n                let headerCols = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table > colgroup > col');\n                let bodyCols = this.virtualScroll ? DomHandler.find(this.containerViewChild.nativeElement, 'cdk-virtual-scroll-viewport table > colgroup > col') : DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-body table > colgroup > col');\n                headerCols.map((col, index) => col.style.width = widths[index] + 'px');\n                bodyCols.map((col, index) => col.style.width = widths[index] + 'px');\n            }\n            else {\n                let headers = DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n                headers.map((header, index) => header.style.width = widths[index] + 'px');\n            }\n        }\n    }\n    saveColumnOrder(state) {\n        if (this.columns) {\n            let columnOrder = [];\n            this.columns.map(column => {\n                columnOrder.push(column.field || column.key);\n            });\n            state.columnOrder = columnOrder;\n        }\n    }\n    restoreColumnOrder() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            let state = JSON.parse(stateString);\n            let columnOrder = state.columnOrder;\n            if (columnOrder) {\n                let reorderedColumns = [];\n                columnOrder.map(key => {\n                    let col = this.findColumnByKey(key);\n                    if (col) {\n                        reorderedColumns.push(col);\n                    }\n                });\n                this.columnOrderStateRestored = true;\n                this.columns = reorderedColumns;\n            }\n        }\n    }\n    findColumnByKey(key) {\n        if (this.columns) {\n            for (let col of this.columns) {\n                if (col.key === key || col.field === key)\n                    return col;\n                else\n                    continue;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n    }\n}\nTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: Table, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: TableService }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }], target: i0.ɵɵFactoryTarget.Component });\nTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: Table, selector: \"p-table\", inputs: { frozenColumns: \"frozenColumns\", frozenValue: \"frozenValue\", style: \"style\", styleClass: \"styleClass\", tableStyle: \"tableStyle\", tableStyleClass: \"tableStyleClass\", paginator: \"paginator\", pageLinks: \"pageLinks\", rowsPerPageOptions: \"rowsPerPageOptions\", alwaysShowPaginator: \"alwaysShowPaginator\", paginatorPosition: \"paginatorPosition\", paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\", paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\", currentPageReportTemplate: \"currentPageReportTemplate\", showCurrentPageReport: \"showCurrentPageReport\", showJumpToPageDropdown: \"showJumpToPageDropdown\", showFirstLastIcon: \"showFirstLastIcon\", showPageLinks: \"showPageLinks\", defaultSortOrder: \"defaultSortOrder\", sortMode: \"sortMode\", resetPageOnSort: \"resetPageOnSort\", selectionMode: \"selectionMode\", contextMenuSelection: \"contextMenuSelection\", contextMenuSelectionMode: \"contextMenuSelectionMode\", dataKey: \"dataKey\", metaKeySelection: \"metaKeySelection\", rowTrackBy: \"rowTrackBy\", lazy: \"lazy\", lazyLoadOnInit: \"lazyLoadOnInit\", compareSelectionBy: \"compareSelectionBy\", csvSeparator: \"csvSeparator\", exportFilename: \"exportFilename\", filters: \"filters\", globalFilterFields: \"globalFilterFields\", filterDelay: \"filterDelay\", filterLocale: \"filterLocale\", expandedRowKeys: \"expandedRowKeys\", editingRowKeys: \"editingRowKeys\", rowExpandMode: \"rowExpandMode\", scrollable: \"scrollable\", scrollHeight: \"scrollHeight\", virtualScroll: \"virtualScroll\", virtualScrollDelay: \"virtualScrollDelay\", virtualRowHeight: \"virtualRowHeight\", frozenWidth: \"frozenWidth\", responsive: \"responsive\", contextMenu: \"contextMenu\", resizableColumns: \"resizableColumns\", columnResizeMode: \"columnResizeMode\", reorderableColumns: \"reorderableColumns\", loading: \"loading\", loadingIcon: \"loadingIcon\", showLoader: \"showLoader\", rowHover: \"rowHover\", customSort: \"customSort\", showInitialSortBadge: \"showInitialSortBadge\", autoLayout: \"autoLayout\", exportFunction: \"exportFunction\", stateKey: \"stateKey\", stateStorage: \"stateStorage\", editMode: \"editMode\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\", value: \"value\", columns: \"columns\", first: \"first\", rows: \"rows\", totalRecords: \"totalRecords\", sortField: \"sortField\", sortOrder: \"sortOrder\", multiSortMeta: \"multiSortMeta\", selection: \"selection\" }, outputs: { selectionChange: \"selectionChange\", contextMenuSelectionChange: \"contextMenuSelectionChange\", onRowSelect: \"onRowSelect\", onRowUnselect: \"onRowUnselect\", onPage: \"onPage\", onSort: \"onSort\", onFilter: \"onFilter\", onLazyLoad: \"onLazyLoad\", onRowExpand: \"onRowExpand\", onRowCollapse: \"onRowCollapse\", onContextMenuSelect: \"onContextMenuSelect\", onColResize: \"onColResize\", onColReorder: \"onColReorder\", onRowReorder: \"onRowReorder\", onEditInit: \"onEditInit\", onEditComplete: \"onEditComplete\", onEditCancel: \"onEditCancel\", onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\", sortFunction: \"sortFunction\", firstChange: \"firstChange\", rowsChange: \"rowsChange\", onStateSave: \"onStateSave\", onStateRestore: \"onStateRestore\" }, providers: [TableService], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"resizeHelperViewChild\", first: true, predicate: [\"resizeHelper\"], descendants: true }, { propertyName: \"reorderIndicatorUpViewChild\", first: true, predicate: [\"reorderIndicatorUp\"], descendants: true }, { propertyName: \"reorderIndicatorDownViewChild\", first: true, predicate: [\"reorderIndicatorDown\"], descendants: true }, { propertyName: \"tableViewChild\", first: true, predicate: [\"table\"], descendants: true }, { propertyName: \"scrollableViewChild\", first: true, predicate: [\"scrollableView\"], descendants: true }, { propertyName: \"scrollableFrozenViewChild\", first: true, predicate: [\"scrollableFrozenView\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" data-scrollselectors=\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive': responsive}\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div class=\"p-datatable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"grid\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-datatable-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"p-datatable-scrollable-view p-datatable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [pScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"p-datatable-scrollable-view\" #scrollableView [pScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `, isInline: true, styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable-wrapper{position:relative}.p-datatable-scrollable-footer,.p-datatable-scrollable-header{overflow:hidden}.p-datatable-scrollable-body{overflow:auto;position:relative}.p-datatable-scrollable-body>table>.p-datatable-tbody>tr:first-child>td{border-top:0}.p-datatable-virtual-table{position:absolute}.p-datatable-frozen-view .p-datatable-scrollable-body{overflow:hidden}.p-datatable-frozen-view>.p-datatable-scrollable-body>table>.p-datatable-tbody>tr>td:last-child{border-right:0}.p-datatable-unfrozen-view{position:absolute;top:0}.p-datatable-flex-scrollable,.p-datatable-flex-scrollable .p-datatable-scrollable-view,.p-datatable-flex-scrollable .p-datatable-scrollable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-flex-scrollable .p-datatable-scrollable-body,.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{position:absolute;display:none}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}@media screen and (max-width:40em){.p-datatable.p-datatable-responsive .p-datatable-tfoot>tr>td,.p-datatable.p-datatable-responsive .p-datatable-thead>tr>th{display:none!important}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td{text-align:left;display:block;width:100%;float:left;clear:left;border:0}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{padding:.4rem;min-width:30%;display:inline-block;margin:-.4em 1em -.4em -.4rem;font-weight:700}}\"], components: [{ type: i0.forwardRef(function () { return i2.Paginator; }), selector: \"p-paginator\", inputs: [\"pageLinkSize\", \"style\", \"styleClass\", \"alwaysShow\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showCurrentPageReport\", \"showFirstLastIcon\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showJumpToPageDropdown\", \"showPageLinks\", \"dropdownItemTemplate\", \"first\"], outputs: [\"onPageChange\"] }, { type: i0.forwardRef(function () { return TableBody; }), selector: \"[pTableBody]\", inputs: [\"pTableBody\", \"pTableBodyTemplate\", \"frozen\"] }, { type: i0.forwardRef(function () { return ScrollableView; }), selector: \"[pScrollableView]\", inputs: [\"pScrollableView\", \"frozen\", \"scrollHeight\"] }], directives: [{ type: i0.forwardRef(function () { return i3.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i0.forwardRef(function () { return i3.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i0.forwardRef(function () { return i3.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i3.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: Table, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-table',\n                    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" data-scrollselectors=\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive': responsive}\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div class=\"p-datatable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"grid\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-datatable-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"p-datatable-scrollable-view p-datatable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [pScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"p-datatable-scrollable-view\" #scrollableView [pScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n                    providers: [TableService],\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./table.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: TableService }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }]; }, propDecorators: { frozenColumns: [{\n                type: Input\n            }], frozenValue: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tableStyle: [{\n                type: Input\n            }], tableStyleClass: [{\n                type: Input\n            }], paginator: [{\n                type: Input\n            }], pageLinks: [{\n                type: Input\n            }], rowsPerPageOptions: [{\n                type: Input\n            }], alwaysShowPaginator: [{\n                type: Input\n            }], paginatorPosition: [{\n                type: Input\n            }], paginatorDropdownAppendTo: [{\n                type: Input\n            }], paginatorDropdownScrollHeight: [{\n                type: Input\n            }], currentPageReportTemplate: [{\n                type: Input\n            }], showCurrentPageReport: [{\n                type: Input\n            }], showJumpToPageDropdown: [{\n                type: Input\n            }], showFirstLastIcon: [{\n                type: Input\n            }], showPageLinks: [{\n                type: Input\n            }], defaultSortOrder: [{\n                type: Input\n            }], sortMode: [{\n                type: Input\n            }], resetPageOnSort: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], contextMenuSelection: [{\n                type: Input\n            }], contextMenuSelectionChange: [{\n                type: Output\n            }], contextMenuSelectionMode: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], rowTrackBy: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], lazyLoadOnInit: [{\n                type: Input\n            }], compareSelectionBy: [{\n                type: Input\n            }], csvSeparator: [{\n                type: Input\n            }], exportFilename: [{\n                type: Input\n            }], filters: [{\n                type: Input\n            }], globalFilterFields: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], expandedRowKeys: [{\n                type: Input\n            }], editingRowKeys: [{\n                type: Input\n            }], rowExpandMode: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollDelay: [{\n                type: Input\n            }], virtualRowHeight: [{\n                type: Input\n            }], frozenWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], contextMenu: [{\n                type: Input\n            }], resizableColumns: [{\n                type: Input\n            }], columnResizeMode: [{\n                type: Input\n            }], reorderableColumns: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], showLoader: [{\n                type: Input\n            }], rowHover: [{\n                type: Input\n            }], customSort: [{\n                type: Input\n            }], showInitialSortBadge: [{\n                type: Input\n            }], autoLayout: [{\n                type: Input\n            }], exportFunction: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], editMode: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }], onRowSelect: [{\n                type: Output\n            }], onRowUnselect: [{\n                type: Output\n            }], onPage: [{\n                type: Output\n            }], onSort: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], onRowExpand: [{\n                type: Output\n            }], onRowCollapse: [{\n                type: Output\n            }], onContextMenuSelect: [{\n                type: Output\n            }], onColResize: [{\n                type: Output\n            }], onColReorder: [{\n                type: Output\n            }], onRowReorder: [{\n                type: Output\n            }], onEditInit: [{\n                type: Output\n            }], onEditComplete: [{\n                type: Output\n            }], onEditCancel: [{\n                type: Output\n            }], onHeaderCheckboxToggle: [{\n                type: Output\n            }], sortFunction: [{\n                type: Output\n            }], firstChange: [{\n                type: Output\n            }], rowsChange: [{\n                type: Output\n            }], onStateSave: [{\n                type: Output\n            }], onStateRestore: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], resizeHelperViewChild: [{\n                type: ViewChild,\n                args: ['resizeHelper']\n            }], reorderIndicatorUpViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorUp']\n            }], reorderIndicatorDownViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorDown']\n            }], tableViewChild: [{\n                type: ViewChild,\n                args: ['table']\n            }], scrollableViewChild: [{\n                type: ViewChild,\n                args: ['scrollableView']\n            }], scrollableFrozenViewChild: [{\n                type: ViewChild,\n                args: ['scrollableFrozenView']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], value: [{\n                type: Input\n            }], columns: [{\n                type: Input\n            }], first: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], totalRecords: [{\n                type: Input\n            }], sortField: [{\n                type: Input\n            }], sortOrder: [{\n                type: Input\n            }], multiSortMeta: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }] } });\nclass TableBody {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n            if (this.dt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableBody, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: TableBody, selector: \"[pTableBody]\", inputs: { columns: [\"pTableBody\", \"columns\"], template: [\"pTableBodyTemplate\", \"template\"], frozen: \"frozen\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }], pipes: { \"slice\": i3.SlicePipe }, changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableBody, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pTableBody]',\n                    template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate && !(frozen && dt.frozenExpandedRowTemplate)\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.frozenExpandedRowTemplate && frozen\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.frozenExpandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { columns: [{\n                type: Input,\n                args: [\"pTableBody\"]\n            }], template: [{\n                type: Input,\n                args: [\"pTableBodyTemplate\"]\n            }], frozen: [{\n                type: Input\n            }] } });\nclass ScrollableView {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    get scrollHeight() {\n        return this._scrollHeight;\n    }\n    set scrollHeight(val) {\n        this._scrollHeight = val;\n        if (val != null && (val.includes('%') || val.includes('calc'))) {\n            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n        }\n        if (this.dt.virtualScroll && this.virtualScrollBody) {\n            this.virtualScrollBody.ngOnInit();\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.frozen) {\n            if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\n                DomHandler.addClass(this.el.nativeElement, 'p-datatable-unfrozen-view');\n            }\n            let frozenView = this.el.nativeElement.previousElementSibling;\n            if (frozenView) {\n                if (this.dt.virtualScroll)\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-virtual-scrollable-body');\n                else\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n            }\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\n            this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n                this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n            }\n        }\n        else {\n            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n                this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n            }\n        }\n        this.bindEvents();\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                this.headerScrollListener = this.onHeaderScroll.bind(this);\n                this.scrollHeaderViewChild.nativeElement.addEventListener('scroll', this.headerScrollListener);\n            }\n            if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                this.footerScrollListener = this.onFooterScroll.bind(this);\n                this.scrollFooterViewChild.nativeElement.addEventListener('scroll', this.footerScrollListener);\n            }\n            if (!this.frozen) {\n                this.bodyScrollListener = this.onBodyScroll.bind(this);\n                if (this.dt.virtualScroll)\n                    this.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', this.bodyScrollListener);\n                else\n                    this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\n            }\n        });\n    }\n    unbindEvents() {\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n        }\n        if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n            this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n        }\n        if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\n            this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n        }\n    }\n    onHeaderScroll() {\n        const scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    }\n    onFooterScroll() {\n        const scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    }\n    onBodyScroll(event) {\n        if (this.preventBodyScrollPropagation) {\n            this.preventBodyScrollPropagation = false;\n            return;\n        }\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n        if (this.frozenSiblingBody) {\n            this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n        }\n    }\n    onScrollIndexChange(index) {\n        if (this.dt.lazy) {\n            if (this.virtualScrollTimeout) {\n                clearTimeout(this.virtualScrollTimeout);\n            }\n            this.virtualScrollTimeout = setTimeout(() => {\n                let page = Math.floor(index / this.dt.rows);\n                let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.dt.rows;\n                let virtualScrollChunkSize = page === 0 ? this.dt.rows * 2 : this.dt.rows * 3;\n                if (page !== this.virtualPage) {\n                    this.virtualPage = page;\n                    this.dt.onLazyLoad.emit({\n                        first: virtualScrollOffset,\n                        rows: virtualScrollChunkSize,\n                        sortField: this.dt.sortField,\n                        sortOrder: this.dt.sortOrder,\n                        filters: this.dt.filters,\n                        globalFilter: this.dt.filters && this.dt.filters['global'] ? this.dt.filters['global'].value : null,\n                        multiSortMeta: this.dt.multiSortMeta\n                    });\n                }\n            }, this.dt.virtualScrollDelay);\n        }\n    }\n    getPageCount() {\n        let dataToRender = this.dt.filteredValue || this.dt.value;\n        let dataLength = dataToRender ? dataToRender.length : 0;\n        return Math.ceil(dataLength / this.dt.rows);\n    }\n    scrollToVirtualIndex(index) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollToIndex(index);\n        }\n    }\n    scrollTo(options) {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollTo(options);\n        }\n        else {\n            if (this.scrollBodyViewChild.nativeElement.scrollTo) {\n                this.scrollBodyViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n                this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.frozenSiblingBody = null;\n    }\n}\nScrollableView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ScrollableView, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nScrollableView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ScrollableView, selector: \"[pScrollableView]\", inputs: { columns: [\"pScrollableView\", \"columns\"], frozen: \"frozen\", scrollHeight: \"scrollHeight\" }, viewQueries: [{ propertyName: \"scrollHeaderViewChild\", first: true, predicate: [\"scrollHeader\"], descendants: true }, { propertyName: \"scrollHeaderBoxViewChild\", first: true, predicate: [\"scrollHeaderBox\"], descendants: true }, { propertyName: \"scrollBodyViewChild\", first: true, predicate: [\"scrollBody\"], descendants: true }, { propertyName: \"scrollTableViewChild\", first: true, predicate: [\"scrollTable\"], descendants: true }, { propertyName: \"scrollFooterViewChild\", first: true, predicate: [\"scrollFooter\"], descendants: true }, { propertyName: \"scrollFooterBoxViewChild\", first: true, predicate: [\"scrollFooterBox\"], descendants: true }, { propertyName: \"scrollableAlignerViewChild\", first: true, predicate: [\"scrollableAligner\"], descendants: true }, { propertyName: \"virtualScrollBody\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], ngImport: i0, template: `\n        <div #scrollHeader class=\"p-datatable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-datatable-scrollable-header-box\">\n                <table class=\"p-datatable-scrollable-header-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\">\n                        <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                            <ng-container *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!dt.virtualScroll; else virtualScrollTemplate\">\n            <div #scrollBody class=\"p-datatable-scrollable-body\" [ngStyle]=\"{'max-height': dt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && dt.scrollHeight ? 'scroll' : undefined}\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]=\"dt.virtualRowHeight\" tabindex=\"0\" [style.height]=\"dt.scrollHeight !== 'flex' ? scrollHeight : undefined\"\n                    [minBufferPx]=\"dt.minBufferPx\" [maxBufferPx]=\"dt.maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter class=\"p-datatable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-datatable-scrollable-footer-box\">\n                <table class=\"p-datatable-scrollable-footer-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `, isInline: true, components: [{ type: TableBody, selector: \"[pTableBody]\", inputs: [\"pTableBody\", \"pTableBodyTemplate\", \"frozen\"] }, { type: i4.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\"], outputs: [\"scrolledIndexChange\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ScrollableView, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pScrollableView]',\n                    template: `\n        <div #scrollHeader class=\"p-datatable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-datatable-scrollable-header-box\">\n                <table class=\"p-datatable-scrollable-header-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\">\n                        <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                            <ng-container *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!dt.virtualScroll; else virtualScrollTemplate\">\n            <div #scrollBody class=\"p-datatable-scrollable-body\" [ngStyle]=\"{'max-height': dt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && dt.scrollHeight ? 'scroll' : undefined}\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]=\"dt.virtualRowHeight\" tabindex=\"0\" [style.height]=\"dt.scrollHeight !== 'flex' ? scrollHeight : undefined\"\n                    [minBufferPx]=\"dt.minBufferPx\" [maxBufferPx]=\"dt.maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter class=\"p-datatable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-datatable-scrollable-footer-box\">\n                <table class=\"p-datatable-scrollable-footer-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { columns: [{\n                type: Input,\n                args: [\"pScrollableView\"]\n            }], frozen: [{\n                type: Input\n            }], scrollHeaderViewChild: [{\n                type: ViewChild,\n                args: ['scrollHeader']\n            }], scrollHeaderBoxViewChild: [{\n                type: ViewChild,\n                args: ['scrollHeaderBox']\n            }], scrollBodyViewChild: [{\n                type: ViewChild,\n                args: ['scrollBody']\n            }], scrollTableViewChild: [{\n                type: ViewChild,\n                args: ['scrollTable']\n            }], scrollFooterViewChild: [{\n                type: ViewChild,\n                args: ['scrollFooter']\n            }], scrollFooterBoxViewChild: [{\n                type: ViewChild,\n                args: ['scrollFooterBox']\n            }], scrollableAlignerViewChild: [{\n                type: ViewChild,\n                args: ['scrollableAligner']\n            }], virtualScrollBody: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], scrollHeight: [{\n                type: Input\n            }] } });\nclass SortableColumn {\n    constructor(dt) {\n        this.dt = dt;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n                this.updateSortState();\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n    updateSortState() {\n        this.sorted = this.dt.isSorted(this.field);\n        this.sortOrder = this.sorted ? (this.dt.sortOrder === 1 ? 'ascending' : 'descending') : 'none';\n    }\n    onClick(event) {\n        if (this.isEnabled() && !this.isFilterElement(event.target)) {\n            this.updateSortState();\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n            DomHandler.clearSelection();\n        }\n    }\n    onEnterKey(event) {\n        this.onClick(event);\n    }\n    isEnabled() {\n        return this.pSortableColumnDisabled !== true;\n    }\n    isFilterElement(element) {\n        return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSortableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SortableColumn, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nSortableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: SortableColumn, selector: \"[pSortableColumn]\", inputs: { field: [\"pSortableColumn\", \"field\"], pSortableColumnDisabled: \"pSortableColumnDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKey($event)\" }, properties: { \"class.p-sortable-column\": \"isEnabled()\", \"class.p-highlight\": \"sorted\", \"attr.tabindex\": \"isEnabled() ? \\\"0\\\" : null\", \"attr.role\": \"\\\"columnheader\\\"\", \"attr.aria-sort\": \"sortOrder\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SortableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSortableColumn]',\n                    host: {\n                        '[class.p-sortable-column]': 'isEnabled()',\n                        '[class.p-highlight]': 'sorted',\n                        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n                        '[attr.role]': '\"columnheader\"',\n                        '[attr.aria-sort]': 'sortOrder'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { field: [{\n                type: Input,\n                args: [\"pSortableColumn\"]\n            }], pSortableColumnDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKey: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }] } });\nclass SortIcon {\n    constructor(dt, cd) {\n        this.dt = dt;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n    ngOnInit() {\n        this.updateSortState();\n    }\n    onClick(event) {\n        event.preventDefault();\n    }\n    updateSortState() {\n        if (this.dt.sortMode === 'single') {\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        }\n        else if (this.dt.sortMode === 'multiple') {\n            let sortMeta = this.dt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n        this.cd.markForCheck();\n    }\n    getMultiSortMetaIndex() {\n        let multiSortMeta = this.dt._multiSortMeta;\n        let index = -1;\n        if (multiSortMeta && this.dt.sortMode === 'multiple' && (this.dt.showInitialSortBadge || multiSortMeta.length > 1)) {\n            for (let i = 0; i < multiSortMeta.length; i++) {\n                let meta = multiSortMeta[i];\n                if (meta.field === this.field || meta.field === this.field) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    isMultiSorted() {\n        return this.dt.sortMode === 'multiple' && this.getMultiSortMetaIndex() > -1;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSortIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SortIcon, deps: [{ token: Table }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSortIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: SortIcon, selector: \"p-sortIcon\", inputs: { field: \"field\" }, ngImport: i0, template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getMultiSortMetaIndex() + 1}}</span>\n    `, isInline: true, directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SortIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-sortIcon',\n                    template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n        <span *ngIf=\"isMultiSorted()\" class=\"p-sortable-column-badge\">{{getMultiSortMetaIndex() + 1}}</span>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { field: [{\n                type: Input\n            }] } });\nclass SelectableRow {\n    constructor(dt, tableService) {\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n    onTouchEnd(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowTouchEnd(event);\n        }\n    }\n    onArrowDownKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        const row = event.currentTarget;\n        const nextRow = this.findNextSelectableRow(row);\n        if (nextRow) {\n            nextRow.focus();\n        }\n        event.preventDefault();\n    }\n    onArrowUpKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        const row = event.currentTarget;\n        const prevRow = this.findPrevSelectableRow(row);\n        if (prevRow) {\n            prevRow.focus();\n        }\n        event.preventDefault();\n    }\n    onEnterKeyDown(event) {\n        if (!this.isEnabled()) {\n            return;\n        }\n        this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n        });\n    }\n    onPageDownKeyDown() {\n        if (this.dt.virtualScroll) {\n            DomHandler.findSingle(this.dt.scrollableViewChild.el.nativeElement, 'cdk-virtual-scroll-viewport').focus();\n        }\n    }\n    onSpaceKeydown() {\n        if (this.dt.virtualScroll && !this.dt.editingCell) {\n            DomHandler.findSingle(this.dt.scrollableViewChild.el.nativeElement, 'cdk-virtual-scroll-viewport').focus();\n        }\n    }\n    findNextSelectableRow(row) {\n        let nextRow = row.nextElementSibling;\n        if (nextRow) {\n            if (DomHandler.hasClass(nextRow, 'p-selectable-row'))\n                return nextRow;\n            else\n                return this.findNextSelectableRow(nextRow);\n        }\n        else {\n            return null;\n        }\n    }\n    findPrevSelectableRow(row) {\n        let prevRow = row.previousElementSibling;\n        if (prevRow) {\n            if (DomHandler.hasClass(prevRow, 'p-selectable-row'))\n                return prevRow;\n            else\n                return this.findPrevSelectableRow(prevRow);\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSelectableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SelectableRow, deps: [{ token: Table }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: SelectableRow, selector: \"[pSelectableRow]\", inputs: { data: [\"pSelectableRow\", \"data\"], index: [\"pSelectableRowIndex\", \"index\"], pSelectableRowDisabled: \"pSelectableRowDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\", \"touchend\": \"onTouchEnd($event)\", \"keydown.arrowdown\": \"onArrowDownKeyDown($event)\", \"keydown.arrowup\": \"onArrowUpKeyDown($event)\", \"keydown.enter\": \"onEnterKeyDown($event)\", \"keydown.shift.enter\": \"onEnterKeyDown($event)\", \"keydown.meta.enter\": \"onEnterKeyDown($event)\", \"keydown.pagedown\": \"onPageDownKeyDown()\", \"keydown.pageup\": \"onPageDownKeyDown()\", \"keydown.home\": \"onPageDownKeyDown()\", \"keydown.end\": \"onPageDownKeyDown()\", \"keydown.space\": \"onSpaceKeydown()\" }, properties: { \"class.p-selectable-row\": \"isEnabled()\", \"class.p-highlight\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SelectableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSelectableRow]',\n                    host: {\n                        '[class.p-selectable-row]': 'isEnabled()',\n                        '[class.p-highlight]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pSelectableRow\"]\n            }], index: [{\n                type: Input,\n                args: [\"pSelectableRowIndex\"]\n            }], pSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onTouchEnd: [{\n                type: HostListener,\n                args: ['touchend', ['$event']]\n            }], onArrowDownKeyDown: [{\n                type: HostListener,\n                args: ['keydown.arrowdown', ['$event']]\n            }], onArrowUpKeyDown: [{\n                type: HostListener,\n                args: ['keydown.arrowup', ['$event']]\n            }], onEnterKeyDown: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.enter', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.meta.enter', ['$event']]\n            }], onPageDownKeyDown: [{\n                type: HostListener,\n                args: ['keydown.pagedown']\n            }, {\n                type: HostListener,\n                args: ['keydown.pageup']\n            }, {\n                type: HostListener,\n                args: ['keydown.home']\n            }, {\n                type: HostListener,\n                args: ['keydown.end']\n            }], onSpaceKeydown: [{\n                type: HostListener,\n                args: ['keydown.space']\n            }] } });\nclass SelectableRowDblClick {\n    constructor(dt, tableService) {\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nSelectableRowDblClick.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SelectableRowDblClick, deps: [{ token: Table }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nSelectableRowDblClick.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: SelectableRowDblClick, selector: \"[pSelectableRowDblClick]\", inputs: { data: [\"pSelectableRowDblClick\", \"data\"], index: [\"pSelectableRowIndex\", \"index\"], pSelectableRowDisabled: \"pSelectableRowDisabled\" }, host: { listeners: { \"dblclick\": \"onClick($event)\" }, properties: { \"class.p-selectable-row\": \"isEnabled()\", \"class.p-highlight\": \"selected\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SelectableRowDblClick, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSelectableRowDblClick]',\n                    host: {\n                        '[class.p-selectable-row]': 'isEnabled()',\n                        '[class.p-highlight]': 'selected'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pSelectableRowDblClick\"]\n            }], index: [{\n                type: Input,\n                args: [\"pSelectableRowIndex\"]\n            }], pSelectableRowDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }] } });\nclass ContextMenuRow {\n    constructor(dt, tableService, el) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.el = el;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe((data) => {\n                this.selected = this.dt.equals(this.data, data);\n            });\n        }\n    }\n    onContextMenu(event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowRightClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.pContextMenuRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nContextMenuRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ContextMenuRow, deps: [{ token: Table }, { token: TableService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nContextMenuRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ContextMenuRow, selector: \"[pContextMenuRow]\", inputs: { data: [\"pContextMenuRow\", \"data\"], index: [\"pContextMenuRowIndex\", \"index\"], pContextMenuRowDisabled: \"pContextMenuRowDisabled\" }, host: { listeners: { \"contextmenu\": \"onContextMenu($event)\" }, properties: { \"class.p-highlight-contextmenu\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ContextMenuRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pContextMenuRow]',\n                    host: {\n                        '[class.p-highlight-contextmenu]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pContextMenuRow\"]\n            }], index: [{\n                type: Input,\n                args: [\"pContextMenuRowIndex\"]\n            }], pContextMenuRowDisabled: [{\n                type: Input\n            }], onContextMenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\nclass RowToggler {\n    constructor(dt) {\n        this.dt = dt;\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.toggleRow(this.data, event);\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.pRowTogglerDisabled !== true;\n    }\n}\nRowToggler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: RowToggler, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Directive });\nRowToggler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: RowToggler, selector: \"[pRowToggler]\", inputs: { data: [\"pRowToggler\", \"data\"], pRowTogglerDisabled: \"pRowTogglerDisabled\" }, host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: RowToggler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pRowToggler]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { data: [{\n                type: Input,\n                args: ['pRowToggler']\n            }], pRowTogglerDisabled: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass ResizableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'p-column-resizer';\n            this.el.nativeElement.appendChild(this.resizer);\n            this.zone.runOutsideAngular(() => {\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n            });\n        }\n    }\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n            document.addEventListener('mouseup', this.documentMouseUpListener);\n        });\n    }\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (event.which === 1) {\n            this.dt.onColumnResizeBegin(event);\n            this.bindDocumentEvents();\n        }\n    }\n    onDocumentMouseMove(event) {\n        this.dt.onColumnResize(event);\n    }\n    onDocumentMouseUp(event) {\n        this.dt.onColumnResizeEnd(event, this.el.nativeElement);\n        this.unbindDocumentEvents();\n    }\n    isEnabled() {\n        return this.pResizableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n        this.unbindDocumentEvents();\n    }\n}\nResizableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ResizableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nResizableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ResizableColumn, selector: \"[pResizableColumn]\", inputs: { pResizableColumnDisabled: \"pResizableColumnDisabled\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ResizableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pResizableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { pResizableColumnDisabled: [{\n                type: Input\n            }] } });\nclass ReorderableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n            this.dragOverListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            this.dragEnterListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n    onDragStart(event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n    }\n    onDragOver(event) {\n        event.preventDefault();\n    }\n    onDragEnter(event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n    onDragLeave(event) {\n        this.dt.onColumnDragLeave(event);\n    }\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n    isEnabled() {\n        return this.pReorderableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n}\nReorderableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ReorderableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ReorderableColumn, selector: \"[pReorderableColumn]\", inputs: { pReorderableColumnDisabled: \"pReorderableColumnDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ReorderableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { pReorderableColumnDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass EditableColumn {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.dt.editingCellClick = true;\n            if (this.dt.editingCell) {\n                if (this.dt.editingCell !== this.el.nativeElement) {\n                    if (!this.dt.isEditingCellValid()) {\n                        return;\n                    }\n                    this.closeEditingCell(true, event);\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n    openCell() {\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.dt.onEditInit.emit({ field: this.field, data: this.data, index: this.rowIndex });\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n                let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n                if (focusableElement) {\n                    focusableElement.focus();\n                }\n            }, 50);\n        });\n    }\n    closeEditingCell(completed, event) {\n        if (completed)\n            this.dt.onEditComplete.emit({ field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex });\n        else\n            this.dt.onEditCancel.emit({ field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex });\n        DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n    }\n    onEnterKeyDown(event) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n            }\n            event.preventDefault();\n        }\n    }\n    onEscapeKeyDown(event) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(false, event);\n            }\n            event.preventDefault();\n        }\n    }\n    onShiftKeyDown(event) {\n        if (this.isEnabled()) {\n            if (event.shiftKey)\n                this.moveToPreviousCell(event);\n            else {\n                this.moveToNextCell(event);\n            }\n        }\n    }\n    onArrowDown(event) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findNextEditableColumnByIndex(currentCell, cellIndex);\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n                event.preventDefault();\n            }\n        }\n    }\n    onArrowUp(event) {\n        if (this.isEnabled()) {\n            let currentCell = this.findCell(event.target);\n            if (currentCell) {\n                let cellIndex = DomHandler.index(currentCell);\n                let targetCell = this.findPrevEditableColumnByIndex(currentCell, cellIndex);\n                if (targetCell) {\n                    if (this.dt.isEditingCellValid()) {\n                        this.closeEditingCell(true, event);\n                    }\n                    DomHandler.invokeElementMethod(event.target, 'blur');\n                    DomHandler.invokeElementMethod(targetCell, 'click');\n                }\n                event.preventDefault();\n            }\n        }\n    }\n    onArrowLeft(event) {\n        if (this.isEnabled()) {\n            this.moveToPreviousCell(event);\n        }\n    }\n    onArrowRight(event) {\n        if (this.isEnabled()) {\n            this.moveToNextCell(event);\n        }\n    }\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n    moveToPreviousCell(event) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findPreviousEditableColumn(currentCell);\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n    moveToNextCell(event) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findNextEditableColumn(currentCell);\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n    findPreviousEditableColumn(cell) {\n        let prevCell = cell.previousElementSibling;\n        if (!prevCell) {\n            let previousRow = cell.parentElement.previousElementSibling;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumn(cell) {\n        let nextCell = cell.nextElementSibling;\n        if (!nextCell) {\n            let nextRow = cell.parentElement.nextElementSibling;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumnByIndex(cell, index) {\n        let nextRow = cell.parentElement.nextElementSibling;\n        if (nextRow) {\n            let nextCell = nextRow.children[index];\n            if (nextCell && DomHandler.hasClass(nextCell, 'p-editable-column')) {\n                return nextCell;\n            }\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n    findPrevEditableColumnByIndex(cell, index) {\n        let prevRow = cell.parentElement.previousElementSibling;\n        if (prevRow) {\n            let prevCell = prevRow.children[index];\n            if (prevCell && DomHandler.hasClass(prevCell, 'p-editable-column')) {\n                return prevCell;\n            }\n            return null;\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.pEditableColumnDisabled !== true;\n    }\n}\nEditableColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: EditableColumn, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nEditableColumn.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: EditableColumn, selector: \"[pEditableColumn]\", inputs: { data: [\"pEditableColumn\", \"data\"], field: [\"pEditableColumnField\", \"field\"], rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"], pEditableColumnDisabled: \"pEditableColumnDisabled\", pFocusCellSelector: \"pFocusCellSelector\" }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKeyDown($event)\", \"keydown.escape\": \"onEscapeKeyDown($event)\", \"keydown.tab\": \"onShiftKeyDown($event)\", \"keydown.shift.tab\": \"onShiftKeyDown($event)\", \"keydown.meta.tab\": \"onShiftKeyDown($event)\", \"keydown.arrowdown\": \"onArrowDown($event)\", \"keydown.arrowup\": \"onArrowUp($event)\", \"keydown.arrowleft\": \"onArrowLeft($event)\", \"keydown.arrowright\": \"onArrowRight($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: EditableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pEditableColumn]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pEditableColumn\"]\n            }], field: [{\n                type: Input,\n                args: [\"pEditableColumnField\"]\n            }], rowIndex: [{\n                type: Input,\n                args: [\"pEditableColumnRowIndex\"]\n            }], pEditableColumnDisabled: [{\n                type: Input\n            }], pFocusCellSelector: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKeyDown: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }], onEscapeKeyDown: [{\n                type: HostListener,\n                args: ['keydown.escape', ['$event']]\n            }], onShiftKeyDown: [{\n                type: HostListener,\n                args: ['keydown.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.meta.tab', ['$event']]\n            }], onArrowDown: [{\n                type: HostListener,\n                args: ['keydown.arrowdown', ['$event']]\n            }], onArrowUp: [{\n                type: HostListener,\n                args: ['keydown.arrowup', ['$event']]\n            }], onArrowLeft: [{\n                type: HostListener,\n                args: ['keydown.arrowleft', ['$event']]\n            }], onArrowRight: [{\n                type: HostListener,\n                args: ['keydown.arrowright', ['$event']]\n            }] } });\nclass EditableRow {\n    constructor(el) {\n        this.el = el;\n    }\n    isEnabled() {\n        return this.pEditableRowDisabled !== true;\n    }\n}\nEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: EditableRow, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: EditableRow, selector: \"[pEditableRow]\", inputs: { data: [\"pEditableRow\", \"data\"], pEditableRowDisabled: \"pEditableRowDisabled\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: EditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input,\n                args: [\"pEditableRow\"]\n            }], pEditableRowDisabled: [{\n                type: Input\n            }] } });\nclass InitEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\nInitEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: InitEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nInitEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: InitEditableRow, selector: \"[pInitEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: InitEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pInitEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass SaveEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n    }\n}\nSaveEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SaveEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nSaveEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: SaveEditableRow, selector: \"[pSaveEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: SaveEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pSaveEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass CancelEditableRow {\n    constructor(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    onClick(event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\nCancelEditableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: CancelEditableRow, deps: [{ token: Table }, { token: EditableRow }], target: i0.ɵɵFactoryTarget.Directive });\nCancelEditableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: CancelEditableRow, selector: \"[pCancelEditableRow]\", host: { listeners: { \"click\": \"onClick($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: CancelEditableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pCancelEditableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableRow }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\nclass CellEditor {\n    constructor(dt, editableColumn, editableRow) {\n        this.dt = dt;\n        this.editableColumn = editableColumn;\n        this.editableRow = editableRow;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get editing() {\n        return (this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement) ||\n            (this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data));\n    }\n}\nCellEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: CellEditor, deps: [{ token: Table }, { token: EditableColumn, optional: true }, { token: EditableRow, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCellEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: CellEditor, selector: \"p-cellEditor\", queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: CellEditor, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-cellEditor',\n                    template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: EditableColumn, decorators: [{\n                    type: Optional\n                }] }, { type: EditableRow, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TableRadioButton {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithRadio({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableRadioButton, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: TableRadioButton, selector: \"p-tableRadioButton\", inputs: { disabled: \"disabled\", value: \"value\", index: \"index\", inputId: \"inputId\", name: \"name\", ariaLabel: \"ariaLabel\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableRadioButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableRadioButton',\n                    template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }] } });\nclass TableCheckbox {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithCheckbox({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTableCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableCheckbox, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: TableCheckbox, selector: \"p-tableCheckbox\", inputs: { disabled: \"disabled\", value: \"value\", index: \"index\", inputId: \"inputId\", name: \"name\", required: \"required\", ariaLabel: \"ariaLabel\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }] } });\nclass TableHeaderCheckbox {\n    constructor(dt, tableService, cd) {\n        this.dt = dt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            if (this.dt.value && this.dt.value.length > 0) {\n                this.dt.toggleRowsWithCheckbox(event, !this.checked);\n            }\n        }\n        DomHandler.clearSelection();\n    }\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n    isDisabled() {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n    }\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n    updateCheckedState() {\n        this.cd.markForCheck();\n        if (this.dt.filteredValue) {\n            const val = this.dt.filteredValue;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked());\n        }\n        else {\n            const val = this.dt.value;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === val.length);\n        }\n    }\n    isAllFilteredValuesChecked() {\n        if (!this.dt.filteredValue) {\n            return false;\n        }\n        else {\n            for (let rowData of this.dt.filteredValue) {\n                if (!this.dt.isSelected(rowData)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n}\nTableHeaderCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableHeaderCheckbox, deps: [{ token: Table }, { token: TableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTableHeaderCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: TableHeaderCheckbox, selector: \"p-tableHeaderCheckbox\", inputs: { disabled: \"disabled\", inputId: \"inputId\", name: \"name\", ariaLabel: \"ariaLabel\" }, viewQueries: [{ propertyName: \"boxViewChild\", first: true, predicate: [\"box\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableHeaderCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tableHeaderCheckbox',\n                    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: TableService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { boxViewChild: [{\n                type: ViewChild,\n                args: ['box']\n            }], disabled: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }] } });\nclass ReorderableRowHandle {\n    constructor(el) {\n        this.el = el;\n    }\n    ngAfterViewInit() {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n    }\n}\nReorderableRowHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ReorderableRowHandle, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableRowHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ReorderableRowHandle, selector: \"[pReorderableRowHandle]\", inputs: { index: [\"pReorderableRowHandle\", \"index\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ReorderableRowHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableRowHandle]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { index: [{\n                type: Input,\n                args: [\"pReorderableRowHandle\"]\n            }] } });\nclass ReorderableRow {\n    constructor(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.el.nativeElement.droppable = true;\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n            this.dragEndListener = this.onDragEnd.bind(this);\n            this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n            this.dragOverListener = this.onDragOver.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragStartListener) {\n            document.removeEventListener('dragstart', this.dragStartListener);\n            this.dragStartListener = null;\n        }\n        if (this.dragEndListener) {\n            document.removeEventListener('dragend', this.dragEndListener);\n            this.dragEndListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n    onMouseDown(event) {\n        if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n            this.el.nativeElement.draggable = true;\n        else\n            this.el.nativeElement.draggable = false;\n    }\n    onDragStart(event) {\n        this.dt.onRowDragStart(event, this.index);\n    }\n    onDragEnd(event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n    }\n    onDragOver(event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n    }\n    onDragLeave(event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n    }\n    isEnabled() {\n        return this.pReorderableRowDisabled !== true;\n    }\n    onDrop(event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n            this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n        event.preventDefault();\n    }\n}\nReorderableRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ReorderableRow, deps: [{ token: Table }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nReorderableRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ReorderableRow, selector: \"[pReorderableRow]\", inputs: { index: [\"pReorderableRow\", \"index\"], pReorderableRowDisabled: \"pReorderableRowDisabled\" }, host: { listeners: { \"drop\": \"onDrop($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ReorderableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pReorderableRow]'\n                }]\n        }], ctorParameters: function () { return [{ type: Table }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { index: [{\n                type: Input,\n                args: [\"pReorderableRow\"]\n            }], pReorderableRowDisabled: [{\n                type: Input\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass ColumnFilterFormElement {\n    constructor(dt) {\n        this.dt = dt;\n        this.useGrouping = true;\n    }\n    ngOnInit() {\n        this.filterCallback = value => {\n            this.filterConstraint.value = value;\n            this.dt._filter();\n        };\n    }\n    onModelChange(value) {\n        this.filterConstraint.value = value;\n        if (this.type === 'boolean' || value === '') {\n            this.dt._filter();\n        }\n    }\n    onTextInputEnterKeyDown(event) {\n        this.dt._filter();\n        event.preventDefault();\n    }\n    onNumericInputKeyDown(event) {\n        if (event.key === 'Enter') {\n            this.dt._filter();\n            event.preventDefault();\n        }\n    }\n}\nColumnFilterFormElement.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ColumnFilterFormElement, deps: [{ token: Table }], target: i0.ɵɵFactoryTarget.Component });\nColumnFilterFormElement.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ColumnFilterFormElement, selector: \"p-columnFilterFormElement\", inputs: { field: \"field\", type: \"type\", filterConstraint: \"filterConstraint\", filterTemplate: \"filterTemplate\", placeholder: \"placeholder\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", locale: \"locale\", localeMatcher: \"localeMatcher\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\" }, ngImport: i0, template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `, isInline: true, components: [{ type: i5.InputNumber, selector: \"p-inputNumber\", inputs: [\"showButtons\", \"format\", \"buttonLayout\", \"inputId\", \"styleClass\", \"style\", \"placeholder\", \"size\", \"maxlength\", \"tabindex\", \"title\", \"ariaLabel\", \"ariaRequired\", \"name\", \"required\", \"autocomplete\", \"min\", \"max\", \"incrementButtonClass\", \"decrementButtonClass\", \"incrementButtonIcon\", \"decrementButtonIcon\", \"step\", \"inputStyle\", \"inputStyleClass\", \"locale\", \"localeMatcher\", \"mode\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"disabled\"], outputs: [\"onInput\", \"onFocus\", \"onBlur\", \"onKeyDown\"] }, { type: i6.TriStateCheckbox, selector: \"p-triStateCheckbox\", inputs: [\"disabled\", \"name\", \"ariaLabelledBy\", \"tabindex\", \"inputId\", \"style\", \"styleClass\", \"label\", \"readonly\", \"checkboxTrueIcon\", \"checkboxFalseIcon\"], outputs: [\"onChange\"] }, { type: i7.Calendar, selector: \"p-calendar\", inputs: [\"style\", \"styleClass\", \"inputStyle\", \"inputId\", \"name\", \"inputStyleClass\", \"placeholder\", \"ariaLabelledBy\", \"disabled\", \"dateFormat\", \"multipleSeparator\", \"rangeSeparator\", \"inline\", \"showOtherMonths\", \"selectOtherMonths\", \"showIcon\", \"icon\", \"appendTo\", \"readonlyInput\", \"shortYearCutoff\", \"monthNavigator\", \"yearNavigator\", \"hourFormat\", \"timeOnly\", \"stepHour\", \"stepMinute\", \"stepSecond\", \"showSeconds\", \"required\", \"showOnFocus\", \"showWeek\", \"dataType\", \"selectionMode\", \"maxDateCount\", \"showButtonBar\", \"todayButtonStyleClass\", \"clearButtonStyleClass\", \"autoZIndex\", \"baseZIndex\", \"panelStyleClass\", \"panelStyle\", \"keepInvalid\", \"hideOnDateTimeSelect\", \"numberOfMonths\", \"view\", \"touchUI\", \"timeSeparator\", \"focusTrap\", \"firstDayOfWeek\", \"showTransitionOptions\", \"hideTransitionOptions\", \"tabindex\", \"defaultDate\", \"minDate\", \"maxDate\", \"disabledDates\", \"disabledDays\", \"yearRange\", \"showTime\", \"locale\"], outputs: [\"onFocus\", \"onBlur\", \"onClose\", \"onSelect\", \"onInput\", \"onTodayClick\", \"onClearClick\", \"onMonthChange\", \"onYearChange\", \"onClickOutside\", \"onShow\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.InputText, selector: \"[pInputText]\" }, { type: i9.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i9.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ColumnFilterFormElement, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-columnFilterFormElement',\n                    template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\" [placeholder]=\"placeholder\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: Table }]; }, propDecorators: { field: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], filterConstraint: [{\n                type: Input\n            }], filterTemplate: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }] } });\nclass ColumnFilter {\n    constructor(el, dt, renderer, config) {\n        this.el = el;\n        this.dt = dt;\n        this.renderer = renderer;\n        this.config = config;\n        this.type = 'text';\n        this.display = 'row';\n        this.showMenu = true;\n        this.operator = FilterOperator.AND;\n        this.showOperator = true;\n        this.showClearButton = true;\n        this.showApplyButton = true;\n        this.showMatchModes = true;\n        this.showAddButton = true;\n        this.hideOnClear = false;\n        this.maxConstraints = 2;\n        this.useGrouping = true;\n    }\n    ngOnInit() {\n        if (!this.dt.filters[this.field]) {\n            this.initFieldFilterConstraint();\n        }\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.generateMatchModeOptions();\n            this.generateOperatorOptions();\n        });\n        this.resetSubscription = this.dt.tableService.resetSource$.subscribe(() => {\n            this.clearFilter();\n        });\n        this.generateMatchModeOptions();\n        this.generateOperatorOptions();\n    }\n    generateMatchModeOptions() {\n        var _a;\n        this.matchModes = this.matchModeOptions ||\n            ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(key => {\n                return { label: this.config.getTranslation(key), value: key };\n            }));\n    }\n    generateOperatorOptions() {\n        this.operatorOptions = [\n            { label: this.config.getTranslation(TranslationKeys.MATCH_ALL), value: FilterOperator.AND },\n            { label: this.config.getTranslation(TranslationKeys.MATCH_ANY), value: FilterOperator.OR }\n        ];\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                default:\n                    this.filterTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    initFieldFilterConstraint() {\n        let defaultMatchMode = this.getDefaultMatchMode();\n        this.dt.filters[this.field] = this.display == 'row' ? { value: null, matchMode: defaultMatchMode } : [{ value: null, matchMode: defaultMatchMode, operator: this.operator }];\n    }\n    onMenuMatchModeChange(value, filterMeta) {\n        filterMeta.matchMode = value;\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n    onRowMatchModeChange(matchMode) {\n        this.dt.filters[this.field].matchMode = matchMode;\n        this.dt._filter();\n        this.hide();\n    }\n    onRowMatchModeKeyDown(event) {\n        let item = event.target;\n        switch (event.key) {\n            case 'ArrowDown':\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    item.removeAttribute('tabindex');\n                    nextItem.tabIndex = '0';\n                    nextItem.focus();\n                }\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    item.removeAttribute('tabindex');\n                    prevItem.tabIndex = '0';\n                    prevItem.focus();\n                }\n                event.preventDefault();\n                break;\n        }\n    }\n    onRowClearItemClick() {\n        this.clearFilter();\n        this.hide();\n    }\n    isRowMatchModeSelected(matchMode) {\n        return this.dt.filters[this.field].matchMode === matchMode;\n    }\n    addConstraint() {\n        this.dt.filters[this.field].push({ value: null, matchMode: this.getDefaultMatchMode(), operator: this.getDefaultOperator() });\n        this.dt._filter();\n    }\n    removeConstraint(filterMeta) {\n        this.dt.filters[this.field] = this.dt.filters[this.field].filter(meta => meta !== filterMeta);\n        this.dt._filter();\n    }\n    onOperatorChange(value) {\n        this.dt.filters[this.field].forEach(filterMeta => {\n            filterMeta.operator = value;\n            this.operator = value;\n        });\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n    toggleMenu() {\n        this.overlayVisible = !this.overlayVisible;\n    }\n    onToggleButtonKeyDown(event) {\n        switch (event.key) {\n            case 'Escape':\n            case 'Tab':\n                this.overlayVisible = false;\n                break;\n            case 'ArrowDown':\n                if (this.overlayVisible) {\n                    let focusable = DomHandler.getFocusableElements(this.overlay);\n                    if (focusable) {\n                        focusable[0].focus();\n                    }\n                    event.preventDefault();\n                }\n                else if (event.altKey) {\n                    this.overlayVisible = true;\n                    event.preventDefault();\n                }\n                break;\n        }\n    }\n    onEscape() {\n        this.overlayVisible = false;\n        this.icon.nativeElement.focus();\n    }\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return item.parentElement.firstElementChild;\n    }\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return item.parentElement.lastElementChild;\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                document.body.appendChild(this.overlay);\n                this.overlay.style.zIndex = String(++DomHandler.zindex);\n                DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    getDefaultMatchMode() {\n        if (this.matchMode) {\n            return this.matchMode;\n        }\n        else {\n            if (this.type === 'text')\n                return FilterMatchMode.STARTS_WITH;\n            else if (this.type === 'numeric')\n                return FilterMatchMode.EQUALS;\n            else if (this.type === 'date')\n                return FilterMatchMode.DATE_IS;\n            else\n                return FilterMatchMode.CONTAINS;\n        }\n    }\n    getDefaultOperator() {\n        return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n    }\n    hasRowFilter() {\n        return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n    }\n    get fieldConstraints() {\n        return this.dt.filters ? this.dt.filters[this.field] : null;\n    }\n    get showRemoveIcon() {\n        return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n    }\n    get showMenuButton() {\n        return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n    }\n    get isShowOperator() {\n        return this.showOperator && this.type !== 'boolean';\n    }\n    get isShowAddConstraint() {\n        return this.showAddButton && this.type !== 'boolean' && (this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints);\n    }\n    get applyButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.APPLY);\n    }\n    get clearButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.CLEAR);\n    }\n    get addRuleButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.ADD_RULE);\n    }\n    get removeRuleButtonLabel() {\n        return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n    }\n    get noFilterLabel() {\n        return this.config.getTranslation(TranslationKeys.NO_FILTER);\n    }\n    hasFilter() {\n        let fieldFilter = this.dt.filters[this.field];\n        if (fieldFilter) {\n            if (Array.isArray(fieldFilter))\n                return !this.dt.isFilterBlank(fieldFilter[0].value);\n            else\n                return !this.dt.isFilterBlank(fieldFilter.value);\n        }\n        return false;\n    }\n    isOutsideClicked(event) {\n        return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target)\n            || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target)\n            || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button')\n            || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n                if (this.isOutsideClicked(event)) {\n                    this.hide();\n                }\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = () => this.hide();\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    hide() {\n        this.overlayVisible = false;\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n    }\n    clearFilter() {\n        this.initFieldFilterConstraint();\n        this.dt._filter();\n        if (this.hideOnClear)\n            this.hide();\n    }\n    applyFilter() {\n        this.dt._filter();\n        this.hide();\n    }\n    ngOnDestroy() {\n        if (this.overlay) {\n            this.el.nativeElement.appendChild(this.overlay);\n            this.onOverlayHide();\n        }\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n        if (this.resetSubscription) {\n            this.resetSubscription.unsubscribe();\n        }\n    }\n}\nColumnFilter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ColumnFilter, deps: [{ token: i0.ElementRef }, { token: Table }, { token: i0.Renderer2 }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nColumnFilter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.0\", type: ColumnFilter, selector: \"p-columnFilter\", inputs: { field: \"field\", type: \"type\", display: \"display\", showMenu: \"showMenu\", matchMode: \"matchMode\", operator: \"operator\", showOperator: \"showOperator\", showClearButton: \"showClearButton\", showApplyButton: \"showApplyButton\", showMatchModes: \"showMatchModes\", showAddButton: \"showAddButton\", hideOnClear: \"hideOnClear\", placeholder: \"placeholder\", matchModeOptions: \"matchModeOptions\", maxConstraints: \"maxConstraints\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", locale: \"locale\", localeMatcher: \"localeMatcher\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"icon\", first: true, predicate: [\"icon\"], descendants: true }], ngImport: i0, template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\" \n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" \n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, components: [{ type: ColumnFilterFormElement, selector: \"p-columnFilterFormElement\", inputs: [\"field\", \"type\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"] }, { type: i10.Dropdown, selector: \"p-dropdown\", inputs: [\"scrollHeight\", \"filter\", \"name\", \"style\", \"panelStyle\", \"styleClass\", \"panelStyleClass\", \"readonly\", \"required\", \"editable\", \"appendTo\", \"tabindex\", \"placeholder\", \"filterPlaceholder\", \"filterLocale\", \"inputId\", \"selectId\", \"dataKey\", \"filterBy\", \"autofocus\", \"resetFilterOnHide\", \"dropdownIcon\", \"optionLabel\", \"optionValue\", \"optionDisabled\", \"optionGroupLabel\", \"optionGroupChildren\", \"autoDisplayFirst\", \"group\", \"showClear\", \"emptyFilterMessage\", \"emptyMessage\", \"virtualScroll\", \"itemSize\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"ariaFilterLabel\", \"ariaLabelledBy\", \"filterMatchMode\", \"maxlength\", \"tooltip\", \"tooltipPosition\", \"tooltipPositionStyle\", \"tooltipStyleClass\", \"autofocusFilter\", \"disabled\", \"options\", \"filterValue\"], outputs: [\"onChange\", \"onFilter\", \"onFocus\", \"onBlur\", \"onClick\", \"onShow\", \"onHide\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i9.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i9.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i11.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n            ]),\n            transition(':leave', [\n                animate('.1s linear', style({ opacity: 0 }))\n            ])\n        ])\n    ], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: ColumnFilter, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-columnFilter',\n                    template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\" \n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" \n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <div>\n                                <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button *ngIf=\"showClearButton\" type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button *ngIf=\"showApplyButton\" type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n                            ]),\n                            transition(':leave', [\n                                animate('.1s linear', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: Table }, { type: i0.Renderer2 }, { type: i1.PrimeNGConfig }]; }, propDecorators: { field: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], showMenu: [{\n                type: Input\n            }], matchMode: [{\n                type: Input\n            }], operator: [{\n                type: Input\n            }], showOperator: [{\n                type: Input\n            }], showClearButton: [{\n                type: Input\n            }], showApplyButton: [{\n                type: Input\n            }], showMatchModes: [{\n                type: Input\n            }], showAddButton: [{\n                type: Input\n            }], hideOnClear: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], matchModeOptions: [{\n                type: Input\n            }], maxConstraints: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }], icon: [{\n                type: ViewChild,\n                args: ['icon']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TableModule {\n}\nTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableModule, declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement], imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], exports: [Table, SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter] });\nTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableModule, imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule,\n        ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.0\", ngImport: i0, type: TableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n                    exports: [Table, SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon,\n                        TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n                    declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon,\n                        TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowToggler, SaveEditableRow, ScrollableView, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService };\n//# sourceMappingURL=primeng-table.js.map\n"]},"metadata":{},"sourceType":"module"}