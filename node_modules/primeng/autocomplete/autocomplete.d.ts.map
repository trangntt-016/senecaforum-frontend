{"version":3,"file":"autocomplete.d.ts","sources":["autocomplete.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["import { ElementRef, AfterViewChecked, AfterContentInit, OnDestroy, EventEmitter, QueryList, TemplateRef, Renderer2, ChangeDetectorRef, IterableDiffers } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nexport declare const AUTOCOMPLETE_VALUE_ACCESSOR: any;\nexport declare class AutoComplete implements AfterViewChecked, AfterContentInit, OnDestroy, ControlValueAccessor {\n    el: ElementRef;\n    renderer: Renderer2;\n    cd: ChangeDetectorRef;\n    differs: IterableDiffers;\n    minLength: number;\n    delay: number;\n    style: any;\n    panelStyle: any;\n    styleClass: string;\n    panelStyleClass: string;\n    inputStyle: any;\n    inputId: string;\n    inputStyleClass: string;\n    placeholder: string;\n    readonly: boolean;\n    disabled: boolean;\n    virtualScroll: boolean;\n    itemSize: number;\n    maxlength: number;\n    name: string;\n    required: boolean;\n    size: number;\n    appendTo: any;\n    autoHighlight: boolean;\n    forceSelection: boolean;\n    type: string;\n    autoZIndex: boolean;\n    baseZIndex: number;\n    ariaLabel: string;\n    ariaLabelledBy: string;\n    dropdownIcon: string;\n    unique: boolean;\n    group: boolean;\n    completeOnFocus: boolean;\n    completeMethod: EventEmitter<any>;\n    onSelect: EventEmitter<any>;\n    onUnselect: EventEmitter<any>;\n    onFocus: EventEmitter<any>;\n    onBlur: EventEmitter<any>;\n    onDropdownClick: EventEmitter<any>;\n    onClear: EventEmitter<any>;\n    onKeyUp: EventEmitter<any>;\n    onShow: EventEmitter<any>;\n    onHide: EventEmitter<any>;\n    field: string;\n    scrollHeight: string;\n    dropdown: boolean;\n    dropdownMode: string;\n    multiple: boolean;\n    tabindex: number;\n    dataKey: string;\n    emptyMessage: string;\n    showTransitionOptions: string;\n    hideTransitionOptions: string;\n    autofocus: boolean;\n    autocomplete: string;\n    optionGroupChildren: string;\n    optionGroupLabel: string;\n    containerEL: ElementRef;\n    inputEL: ElementRef;\n    multiInputEL: ElementRef;\n    multiContainerEL: ElementRef;\n    dropdownButton: ElementRef;\n    viewPort: CdkVirtualScrollViewport;\n    templates: QueryList<any>;\n    overlay: HTMLDivElement;\n    itemsWrapper: HTMLDivElement;\n    itemTemplate: TemplateRef<any>;\n    selectedItemTemplate: TemplateRef<any>;\n    groupTemplate: TemplateRef<any>;\n    value: any;\n    _suggestions: any[];\n    onModelChange: Function;\n    onModelTouched: Function;\n    timeout: any;\n    overlayVisible: boolean;\n    documentClickListener: any;\n    suggestionsUpdated: boolean;\n    highlightOption: any;\n    highlightOptionChanged: boolean;\n    focus: boolean;\n    filled: boolean;\n    inputClick: boolean;\n    inputKeyDown: boolean;\n    noResults: boolean;\n    differ: any;\n    inputFieldValue: string;\n    loading: boolean;\n    scrollHandler: any;\n    documentResizeListener: any;\n    forceSelectionUpdateModelTimeout: any;\n    listId: string;\n    itemClicked: boolean;\n    virtualScrollSelectedIndex: number;\n    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, differs: IterableDiffers);\n    get suggestions(): any[];\n    set suggestions(val: any[]);\n    ngAfterViewChecked(): void;\n    handleSuggestionsChange(): void;\n    ngAfterContentInit(): void;\n    updateVirtualScrollSelectedIndex(): void;\n    writeValue(value: any): void;\n    getOptionGroupChildren(optionGroup: any): any;\n    getOptionGroupLabel(optionGroup: any): any;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    onInput(event: Event): void;\n    onInputClick(event: MouseEvent): void;\n    search(event: any, query: string): void;\n    selectItem(option: any, focus?: boolean): void;\n    show(): void;\n    onOverlayAnimationStart(event: AnimationEvent): void;\n    appendOverlay(): void;\n    resolveFieldData(value: any): any;\n    restoreOverlayAppend(): void;\n    alignOverlay(): void;\n    hide(): void;\n    handleDropdownClick(event: any): void;\n    focusInput(): void;\n    removeItem(item: any): void;\n    onKeydown(event: any): void;\n    onKeyup(event: any): void;\n    onInputFocus(event: any): void;\n    onInputBlur(event: any): void;\n    onInputChange(event: any): void;\n    onInputPaste(event: ClipboardEvent): void;\n    isSelected(val: any): boolean;\n    findOptionIndex(option: any, suggestions: any): number;\n    findOptionGroupIndex(val: any, opts: any[]): any;\n    updateFilledState(): void;\n    updateInputField(): void;\n    bindDocumentClickListener(): void;\n    isDropdownClick(event: any): boolean;\n    unbindDocumentClickListener(): void;\n    bindDocumentResizeListener(): void;\n    unbindDocumentResizeListener(): void;\n    onWindowResize(): void;\n    bindScrollListener(): void;\n    unbindScrollListener(): void;\n    onOverlayHide(): void;\n    ngOnDestroy(): void;\n}\nexport declare class AutoCompleteModule {\n}\n"]}