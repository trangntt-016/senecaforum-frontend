{"version":3,"file":"dropdown.d.ts","sources":["dropdown.d.ts"],"names":[],"mappingssourcesContent":["import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { ElementRef, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, Renderer2, EventEmitter, QueryList, TemplateRef, ChangeDetectorRef, NgZone } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { PrimeNGConfig, SelectItem } from 'primeng/api';\nimport { FilterService } from 'primeng/api';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const DROPDOWN_VALUE_ACCESSOR: any;\nexport declare class DropdownItem {\n    option: SelectItem;\n    selected: boolean;\n    label: string;\n    disabled: boolean;\n    visible: boolean;\n    itemSize: number;\n    template: TemplateRef<any>;\n    onClick: EventEmitter<any>;\n    onOptionClick(event: Event): void;\n}\nexport declare class Dropdown implements OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, ControlValueAccessor {\n    el: ElementRef;\n    renderer: Renderer2;\n    cd: ChangeDetectorRef;\n    zone: NgZone;\n    filterService: FilterService;\n    config: PrimeNGConfig;\n    scrollHeight: string;\n    filter: boolean;\n    name: string;\n    style: any;\n    panelStyle: any;\n    styleClass: string;\n    panelStyleClass: string;\n    readonly: boolean;\n    required: boolean;\n    editable: boolean;\n    appendTo: any;\n    tabindex: number;\n    placeholder: string;\n    filterPlaceholder: string;\n    filterLocale: string;\n    inputId: string;\n    selectId: string;\n    dataKey: string;\n    filterBy: string;\n    autofocus: boolean;\n    resetFilterOnHide: boolean;\n    dropdownIcon: string;\n    optionLabel: string;\n    optionValue: string;\n    optionDisabled: string;\n    optionGroupLabel: string;\n    optionGroupChildren: string;\n    autoDisplayFirst: boolean;\n    group: boolean;\n    showClear: boolean;\n    emptyFilterMessage: string;\n    emptyMessage: string;\n    virtualScroll: boolean;\n    itemSize: number;\n    autoZIndex: boolean;\n    baseZIndex: number;\n    showTransitionOptions: string;\n    hideTransitionOptions: string;\n    ariaFilterLabel: string;\n    ariaLabelledBy: string;\n    filterMatchMode: string;\n    maxlength: number;\n    tooltip: string;\n    tooltipPosition: string;\n    tooltipPositionStyle: string;\n    tooltipStyleClass: string;\n    autofocusFilter: boolean;\n    onChange: EventEmitter<any>;\n    onFilter: EventEmitter<any>;\n    onFocus: EventEmitter<any>;\n    onBlur: EventEmitter<any>;\n    onClick: EventEmitter<any>;\n    onShow: EventEmitter<any>;\n    onHide: EventEmitter<any>;\n    containerViewChild: ElementRef;\n    filterViewChild: ElementRef;\n    accessibleViewChild: ElementRef;\n    viewPort: CdkVirtualScrollViewport;\n    editableInputViewChild: ElementRef;\n    templates: QueryList<any>;\n    private _disabled;\n    get disabled(): boolean;\n    set disabled(_disabled: boolean);\n    overlay: HTMLDivElement;\n    itemsWrapper: HTMLDivElement;\n    itemTemplate: TemplateRef<any>;\n    groupTemplate: TemplateRef<any>;\n    selectedItemTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    footerTemplate: TemplateRef<any>;\n    emptyFilterTemplate: TemplateRef<any>;\n    emptyTemplate: TemplateRef<any>;\n    selectedOption: any;\n    _options: any[];\n    value: any;\n    onModelChange: Function;\n    onModelTouched: Function;\n    optionsToDisplay: any[];\n    hover: boolean;\n    focused: boolean;\n    overlayVisible: boolean;\n    documentClickListener: any;\n    scrollHandler: any;\n    optionsChanged: boolean;\n    panel: HTMLDivElement;\n    dimensionsUpdated: boolean;\n    hoveredItem: any;\n    selectedOptionUpdated: boolean;\n    _filterValue: string;\n    searchValue: string;\n    searchIndex: number;\n    searchTimeout: any;\n    previousSearchChar: string;\n    currentSearchChar: string;\n    documentResizeListener: any;\n    virtualAutoScrolled: boolean;\n    virtualScrollSelectedIndex: number;\n    viewPortOffsetTop: number;\n    preventModelTouched: boolean;\n    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, zone: NgZone, filterService: FilterService, config: PrimeNGConfig);\n    ngAfterContentInit(): void;\n    ngOnInit(): void;\n    get options(): any[];\n    set options(val: any[]);\n    get filterValue(): string;\n    set filterValue(val: string);\n    ngAfterViewInit(): void;\n    get label(): string;\n    get emptyMessageLabel(): string;\n    get emptyFilterMessageLabel(): string;\n    updateEditableLabel(): void;\n    getOptionLabel(option: any): any;\n    getOptionValue(option: any): any;\n    isOptionDisabled(option: any): any;\n    getOptionGroupLabel(optionGroup: any): any;\n    getOptionGroupChildren(optionGroup: any): any;\n    onItemClick(event: any): void;\n    selectItem(event: any, option: any): void;\n    ngAfterViewChecked(): void;\n    writeValue(value: any): void;\n    resetFilter(): void;\n    updateSelectedOption(val: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    onMouseclick(event: any): void;\n    isInputClick(event: any): boolean;\n    isOutsideClicked(event: Event): boolean;\n    isEmpty(): boolean;\n    onEditableInputClick(): void;\n    onEditableInputFocus(event: any): void;\n    onEditableInputChange(event: any): void;\n    show(): void;\n    onOverlayAnimationStart(event: AnimationEvent): void;\n    scrollToSelectedVirtualScrollElement(): void;\n    updateVirtualScrollSelectedIndex(resetOffset: any): void;\n    appendOverlay(): void;\n    restoreOverlayAppend(): void;\n    hide(): void;\n    alignOverlay(): void;\n    onInputFocus(event: any): void;\n    onInputBlur(event: any): void;\n    findPrevEnabledOption(index: any): any;\n    findNextEnabledOption(index: any): any;\n    onKeydown(event: KeyboardEvent, search: boolean): void;\n    search(event: KeyboardEvent): void;\n    searchOption(index: any): any;\n    searchOptionInRange(start: any, end: any): any;\n    searchOptionWithinGroup(index: any): any;\n    findOptionIndex(val: any, opts: any[]): number;\n    findOptionGroupIndex(val: any, opts: any[]): any;\n    findOption(val: any, opts: any[], inGroup?: boolean): SelectItem;\n    onFilterInputChange(event: any): void;\n    activateFilter(): void;\n    applyFocus(): void;\n    focus(): void;\n    bindDocumentClickListener(): void;\n    unbindDocumentClickListener(): void;\n    bindDocumentResizeListener(): void;\n    unbindDocumentResizeListener(): void;\n    onWindowResize(): void;\n    bindScrollListener(): void;\n    unbindScrollListener(): void;\n    clear(event: Event): void;\n    onOverlayHide(): void;\n    ngOnDestroy(): void;\n}\nexport declare class DropdownModule {\n}\n"]}