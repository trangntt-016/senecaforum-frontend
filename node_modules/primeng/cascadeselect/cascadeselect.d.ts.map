{"version":3,"file":"cascadeselect.d.ts","sources":["cascadeselect.d.ts"],"names":[],"mappingssourcesContent":["import { TemplateRef, QueryList, ElementRef, EventEmitter, ChangeDetectorRef, OnDestroy, OnInit, AfterContentInit } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nexport declare const CASCADESELECT_VALUE_ACCESSOR: any;\nexport declare class CascadeSelectSub implements OnInit {\n    private el;\n    selectionPath: any[];\n    options: any[];\n    optionGroupChildren: any[];\n    optionTemplate: TemplateRef<any>;\n    level: number;\n    optionLabel: string;\n    optionValue: string;\n    optionGroupLabel: string;\n    dirty: boolean;\n    root: boolean;\n    onSelect: EventEmitter<any>;\n    onGroupSelect: EventEmitter<any>;\n    get parentActive(): boolean;\n    set parentActive(val: boolean);\n    activeOption: any;\n    _parentActive: boolean;\n    constructor(el: ElementRef);\n    ngOnInit(): void;\n    onOptionClick(event: any, option: any): void;\n    onOptionSelect(event: any): void;\n    onOptionGroupSelect(event: any): void;\n    getOptionLabel(option: any): any;\n    getOptionValue(option: any): any;\n    getOptionGroupLabel(optionGroup: any): any;\n    getOptionGroupChildren(optionGroup: any): any;\n    isOptionGroup(option: any): any;\n    getOptionLabelToRender(option: any): any;\n    getItemClass(option: any): {\n        'p-cascadeselect-item': boolean;\n        'p-cascadeselect-item-group': any;\n        'p-cascadeselect-item-active p-highlight': boolean;\n    };\n    isOptionActive(option: any): boolean;\n    onKeyDown(event: any, option: any, index: any): void;\n    position(): void;\n}\nexport declare class CascadeSelect implements OnInit, AfterContentInit, OnDestroy {\n    private el;\n    private cd;\n    styleClass: string;\n    style: any;\n    options: any[];\n    optionLabel: string;\n    optionValue: string;\n    optionGroupLabel: string;\n    optionGroupChildren: any[];\n    placeholder: string;\n    value: string;\n    dataKey: string;\n    inputId: string;\n    tabindex: string;\n    ariaLabelledBy: string;\n    appendTo: any;\n    disabled: boolean;\n    rounded: boolean;\n    showTransitionOptions: string;\n    hideTransitionOptions: string;\n    focusInputEl: ElementRef;\n    containerEl: ElementRef;\n    onChange: EventEmitter<any>;\n    onGroupChange: EventEmitter<any>;\n    onShow: EventEmitter<any>;\n    onHide: EventEmitter<any>;\n    onBeforeShow: EventEmitter<any>;\n    onBeforeHide: EventEmitter<any>;\n    templates: QueryList<any>;\n    selectionPath: any;\n    focused: boolean;\n    filled: boolean;\n    overlayVisible: boolean;\n    dirty: boolean;\n    valueTemplate: TemplateRef<any>;\n    optionTemplate: TemplateRef<any>;\n    outsideClickListener: any;\n    scrollHandler: any;\n    resizeListener: any;\n    overlayEl: any;\n    onModelChange: Function;\n    onModelTouched: Function;\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    onOptionSelect(event: any): void;\n    onOptionGroupSelect(event: any): void;\n    getOptionLabel(option: any): any;\n    getOptionValue(option: any): any;\n    getOptionGroupChildren(optionGroup: any, level: any): any;\n    isOptionGroup(option: any, level: any): any;\n    updateSelectionPath(): void;\n    updateFilledState(): void;\n    findModelOptionInGroup(option: any, level: any): any;\n    show(): void;\n    hide(): void;\n    onClick(event: any): void;\n    onFocus(): void;\n    onBlur(): void;\n    onOverlayAnimationStart(event: AnimationEvent): void;\n    onOverlayAnimationDone(event: AnimationEvent): void;\n    onOverlayEnter(): void;\n    onOverlayLeave(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    alignOverlay(): void;\n    bindOutsideClickListener(): void;\n    unbindOutsideClickListener(): void;\n    bindScrollListener(): void;\n    unbindScrollListener(): void;\n    bindResizeListener(): void;\n    unbindResizeListener(): void;\n    appendContainer(): void;\n    restoreAppend(): void;\n    label(): any;\n    onKeyDown(event: any): void;\n    containerClass(): {\n        'p-cascadeselect p-component p-inputwrapper': boolean;\n        'p-disabled': boolean;\n        'p-focus': boolean;\n    };\n    labelClass(): {\n        'p-cascadeselect-label': boolean;\n        'p-placeholder': boolean;\n        'p-cascadeselect-label-empty': boolean;\n    };\n    ngOnDestroy(): void;\n}\nexport declare class CascadeSelectModule {\n}\n"]}