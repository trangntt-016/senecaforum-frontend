{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/app/components/dropdown/dropdown.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","DROPDOWN_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Dropdown","multi","DropdownItem","this","onClick","EventEmitter","prototype","onOptionClick","event","emit","originalEvent","option","Component","args","selector","template","Input","Output","el","renderer","cd","zone","filterService","config","scrollHeight","resetFilterOnHide","dropdownIcon","optionGroupChildren","autoDisplayFirst","emptyFilterMessage","emptyMessage","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","filterMatchMode","tooltip","tooltipPosition","tooltipPositionStyle","autofocusFilter","onChange","onFilter","onFocus","onBlur","onShow","onHide","onModelChange","onModelTouched","viewPortOffsetTop","defineProperty","_disabled","focused","overlayVisible","hide","destroyed","detectChanges","ngAfterContentInit","_this","templates","forEach","item","getType","itemTemplate","selectedItemTemplate","headerTemplate","footerTemplate","emptyFilterTemplate","emptyTemplate","groupTemplate","ngOnInit","optionsToDisplay","options","updateSelectedOption","_options","val","optionsChanged","_filterValue","activateFilter","ngAfterViewInit","editable","updateEditableLabel","selectedOption","getOptionLabel","getTranslation","TranslationKeys","EMPTY_MESSAGE","EMPTY_FILTER_MESSAGE","editableInputViewChild","nativeElement","optionLabel","ObjectUtils","resolveFieldData","undefined","label","getOptionValue","optionValue","isOptionDisabled","optionDisabled","disabled","getOptionGroupLabel","optionGroup","optionGroupLabel","getOptionGroupChildren","items","onItemClick","selectItem","accessibleViewChild","focus","setTimeout","virtualScroll","viewPort","measureScrollOffset","ngAfterViewChecked","updateVirtualScrollSelectedIndex","runOutsideAngular","alignOverlay","selectedOptionUpdated","itemsWrapper","range","getRenderedRange","start","virtualScrollSelectedIndex","end","scrollToIndex","DomHandler","findSingle","overlay","scrollInView","writeValue","filter","resetFilter","markForCheck","filterViewChild","findOption","placeholder","registerOnChange","fn","registerOnTouched","setDisabledState","onMouseclick","readonly","isInputClick","show","hasClass","target","isSameNode","isOutsideClicked","contains","isEmpty","onEditableInputClick","bindDocumentClickListener","onEditableInputFocus","onEditableInputChange","onOverlayAnimationStart","toState","element","itemsWrapperSelector","appendOverlay","style","zIndex","String","zindex","bindDocumentResizeListener","bindScrollListener","selectedListItem","preventModelTouched","onOverlayHide","scrollToSelectedVirtualScrollElement","virtualAutoScrolled","scrollToOffset","resetOffset","findOptionIndex","appendTo","document","body","appendChild","minWidth","getWidth","containerViewChild","restoreOverlayAppend","absolutePosition","relativePosition","onInputFocus","onInputBlur","findPrevEnabledOption","index","prevEnabledOption","findNextEnabledOption","nextEnabledOption","onKeydown","search","which","altKey","group","selectedItemIndex","findOptionGroupIndex","nextItemIndex","itemIndex","groupIndex","preventDefault","prevItemIndex","prevGroup","metaKey","searchTimeout","clearTimeout","newOption","char","key","previousSearchChar","currentSearchChar","searchValue","searchIndex","searchOptionWithinGroup","searchOption","searchOptionInRange","opt","toLocaleLowerCase","filterLocale","startsWith","j","opts","equals","dataKey","inGroup","opts_1","opts_1_1","optgroup","onFilterInputChange","inputValue","searchFields","filterBy","split","filteredGroups","_c","_d","filteredSubOptions","filterValue","push","assign","_b","applyFocus","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","isAndroid","scrollHandler","ConnectedOverlayScrollHandler","unbindScrollListener","clear","ngOnDestroy","destroy","animations","trigger","transition","opacity","transform","animate","host","[class.p-inputwrapper-filled]","[class.p-inputwrapper-focus]","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ChangeDetectorRef","NgZone","FilterService","PrimeNGConfig","ViewChild","CdkVirtualScrollViewport","ContentChildren","PrimeTemplate","NgModule","imports","CommonModule","SharedModule","ScrollingModule","TooltipModule","RippleModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {ScrollingModule, CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\nimport {NgModule,Component,ElementRef,OnInit,AfterViewInit,AfterContentInit,AfterViewChecked,OnDestroy,Input,Output,Renderer2,EventEmitter,ContentChildren,\n        QueryList,ViewChild,TemplateRef,forwardRef,ChangeDetectorRef,NgZone,ViewRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {trigger,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {PrimeNGConfig, SelectItem, TranslationKeys} from 'primeng/api';\nimport {SharedModule,PrimeTemplate, FilterService} from 'primeng/api';\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\nimport {ObjectUtils} from 'primeng/utils';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {TooltipModule} from 'primeng/tooltip';\nimport {RippleModule} from 'primeng/ripple';\n\nexport const DROPDOWN_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\n\n@Component({\n    selector: 'p-dropdownItem',\n    template: `\n        <li (click)=\"onOptionClick($event)\" role=\"option\" pRipple\n            [attr.aria-label]=\"label\" [attr.aria-selected]=\"selected\"\n            [ngStyle]=\"{'height': itemSize + 'px'}\"\n            [ngClass]=\"{'p-dropdown-item':true, 'p-highlight': selected, 'p-disabled': disabled}\">\n            <span *ngIf=\"!template\">{{label||'empty'}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n        </li>\n    `\n})\nexport class DropdownItem {\n\n    @Input() option: SelectItem;\n\n    @Input() selected: boolean;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() visible: boolean;\n\n    @Input() itemSize: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    onOptionClick(event: Event) {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    }\n}\n\n@Component({\n    selector: 'p-dropdown',\n    template: `\n         <div #container [ngClass]=\"{'p-dropdown p-component':true,\n            'p-disabled':disabled, 'p-dropdown-open':overlayVisible, 'p-focus':focused, 'p-dropdown-clearable': showClear && !disabled}\"\n            (click)=\"onMouseclick($event)\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-hidden-accessible\">\n                <input #in [attr.id]=\"inputId\" type=\"text\" readonly (focus)=\"onInputFocus($event)\" aria-haspopup=\"listbox\"\n                    aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" [attr.aria-labelledby]=\"ariaLabelledBy\" (blur)=\"onInputBlur($event)\" (keydown)=\"onKeydown($event, true)\"\n                    [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.autofocus]=\"autofocus\">\n            </div>\n            <span [ngClass]=\"{'p-dropdown-label p-inputtext':true,'p-dropdown-label-empty':(label == null || label.length === 0)}\" *ngIf=\"!editable && (label != null)\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\n                <ng-container *ngIf=\"!selectedItemTemplate\">{{label||'empty'}}</ng-container>\n                <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: selectedOption}\"></ng-container>\n            </span>\n            <span [ngClass]=\"{'p-dropdown-label p-inputtext p-placeholder':true,'p-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\" *ngIf=\"!editable && (label == null)\">{{placeholder||'empty'}}</span>\n            <input #editableInput type=\"text\" [attr.maxlength]=\"maxlength\" class=\"p-dropdown-label p-inputtext\" *ngIf=\"editable\" [disabled]=\"disabled\" [attr.placeholder]=\"placeholder\"\n                aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\" (click)=\"onEditableInputClick()\" (input)=\"onEditableInputChange($event)\" (focus)=\"onEditableInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n            <i class=\"p-dropdown-clear-icon pi pi-times\" (click)=\"clear($event)\" *ngIf=\"value != null && showClear && !disabled\"></i>\n            <div class=\"p-dropdown-trigger\" role=\"button\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\">\n                <span class=\"p-dropdown-trigger-icon\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"'p-dropdown-panel p-component'\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-dropdown-header\" *ngIf=\"filter\" >\n                    <div class=\"p-dropdown-filter-container\" (click)=\"$event.stopPropagation()\">\n                        <input #filter type=\"text\" autocomplete=\"off\" [value]=\"filterValue||''\" class=\"p-dropdown-filter p-inputtext p-component\" [attr.placeholder]=\"filterPlaceholder\"\n                        (keydown.enter)=\"$event.preventDefault()\" (keydown)=\"onKeydown($event, false)\" (input)=\"onFilterInputChange($event)\" [attr.aria-label]=\"ariaFilterLabel\">\n                        <span class=\"p-dropdown-filter-icon pi pi-search\"></span>\n                    </div>\n                </div>\n                <div class=\"p-dropdown-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n                    <ul class=\"p-dropdown-items\" [ngClass]=\"{'p-dropdown-virtualscroll': virtualScroll}\" role=\"listbox\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"optionsToDisplay\">\n                                <li class=\"p-dropdown-item-group\">\n                                    <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup), selectedOption: selectedOption}\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-options let-selectedOption=\"selectedOption\">\n                            <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                                <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                    <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                    (onClick)=\"onItemClick($event)\"\n                                                    [template]=\"itemTemplate\"></p-dropdownItem>\n                                </ng-template>\n                            </ng-container>\n                            <ng-template #virtualScrollList>\n                                <cdk-virtual-scroll-viewport (scrolledIndexChange)=\"scrollToSelectedVirtualScrollElement()\" #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && optionsToDisplay && optionsToDisplay.length\">\n                                    <ng-container *cdkVirtualFor=\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                        <p-dropdownItem [option]=\"option\" [selected]=\"selectedOption == option\" [label]=\"getOptionLabel(option)\" [disabled]=\"isOptionDisabled(option)\"\n                                                                   (onClick)=\"onItemClick($event)\"\n                                                                   [template]=\"itemTemplate\"></p-dropdownItem>\n                                    </ng-container>\n                                </cdk-virtual-scroll-viewport>\n                            </ng-template>\n                        </ng-template>\n                        <li *ngIf=\"filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{emptyFilterMessageLabel}}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!filterValue && isEmpty()\" class=\"p-dropdown-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </div>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n            ])\n        ])\n    ],\n    host: {\n        '[class.p-inputwrapper-filled]': 'value',\n        '[class.p-inputwrapper-focus]': 'focused || overlayVisible'\n    },\n    providers: [DROPDOWN_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./dropdown.css']\n})\nexport class Dropdown implements OnInit,AfterViewInit,AfterContentInit,AfterViewChecked,OnDestroy,ControlValueAccessor {\n\n    @Input() scrollHeight: string = '200px';\n\n    @Input() filter: boolean;\n\n    @Input() name: string;\n\n    @Input() style: any;\n\n    @Input() panelStyle: any;\n\n    @Input() styleClass: string;\n\n    @Input() panelStyleClass: string;\n\n    @Input() readonly: boolean;\n\n    @Input() required: boolean;\n\n    @Input() editable: boolean;\n\n    @Input() appendTo: any;\n\n    @Input() tabindex: number;\n\n    @Input() placeholder: string;\n\n    @Input() filterPlaceholder: string;\n\n    @Input() filterLocale: string;\n\n    @Input() inputId: string;\n\n    @Input() selectId: string;\n\n    @Input() dataKey: string;\n\n    @Input() filterBy: string;\n\n    @Input() autofocus: boolean;\n\n    @Input() resetFilterOnHide: boolean = false;\n\n    @Input() dropdownIcon: string = 'pi pi-chevron-down';\n\n    @Input() optionLabel: string;\n\n    @Input() optionValue: string;\n\n    @Input() optionDisabled: string;\n\n    @Input() optionGroupLabel: string;\n\n    @Input() optionGroupChildren: string = \"items\";\n\n    @Input() autoDisplayFirst: boolean = true;\n\n    @Input() group: boolean;\n\n    @Input() showClear: boolean;\n\n    @Input() emptyFilterMessage: string = '';\n\n    @Input() emptyMessage: string = '';\n\n    @Input() virtualScroll: boolean;\n\n    @Input() itemSize: number;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Input() ariaFilterLabel: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() filterMatchMode: string = \"contains\";\n\n    @Input() maxlength: number;\n\n    @Input() tooltip: string = '';\n\n    @Input() tooltipPosition: string = 'right';\n\n    @Input() tooltipPositionStyle: string = 'absolute';\n\n    @Input() tooltipStyleClass: string;\n\n    @Input() autofocusFilter: boolean = true;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('filter') filterViewChild: ElementRef;\n\n    @ViewChild('in') accessibleViewChild: ElementRef;\n\n    @ViewChild(CdkVirtualScrollViewport) viewPort: CdkVirtualScrollViewport;\n\n    @ViewChild('editableInput') editableInputViewChild: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    private _disabled: boolean;\n\n    @Input() get disabled(): boolean {\n        return this._disabled;\n    };\n\n    set disabled(_disabled: boolean) {\n        if (_disabled) {\n            this.focused = false;\n\n            if (this.overlayVisible)\n                this.hide();\n        }\n\n        this._disabled = _disabled;\n        if (!(this.cd as ViewRef).destroyed) {\n            this.cd.detectChanges();\n        }\n    }\n\n    overlay: HTMLDivElement;\n\n    itemsWrapper: HTMLDivElement;\n\n    itemTemplate: TemplateRef<any>;\n\n    groupTemplate: TemplateRef<any>;\n\n    selectedItemTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    emptyFilterTemplate: TemplateRef<any>;\n\n    emptyTemplate: TemplateRef<any>;\n\n    selectedOption: any;\n\n    _options: any[];\n\n    value: any;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    optionsToDisplay: any[];\n\n    hover: boolean;\n\n    focused: boolean;\n\n    overlayVisible: boolean;\n\n    documentClickListener: any;\n\n    scrollHandler: any;\n\n    optionsChanged: boolean;\n\n    panel: HTMLDivElement;\n\n    dimensionsUpdated: boolean;\n\n    hoveredItem: any;\n\n    selectedOptionUpdated: boolean;\n\n    _filterValue: string;\n\n    searchValue: string;\n\n    searchIndex: number;\n\n    searchTimeout: any;\n\n    previousSearchChar: string;\n\n    currentSearchChar: string;\n\n    documentResizeListener: any;\n\n    virtualAutoScrolled: boolean;\n\n    virtualScrollSelectedIndex: number;\n\n    viewPortOffsetTop: number = 0;\n\n    preventModelTouched: boolean;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef, public zone: NgZone, public filterService: FilterService, public config: PrimeNGConfig) {}\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                break;\n\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                break;\n\n                case 'group':\n                    this.groupTemplate = item.template;\n                break;\n\n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.optionsToDisplay = this.options;\n        this.updateSelectedOption(null);\n    }\n\n    @Input() get options(): any[] {\n        return this._options;\n    }\n\n    set options(val: any[]) {\n        this._options = val;\n        this.optionsToDisplay = this._options;\n        this.updateSelectedOption(this.value);\n        this.optionsChanged = true;\n\n        if (this._filterValue && this._filterValue.length) {\n            this.activateFilter();\n        }\n    }\n\n    @Input() get filterValue(): string {\n        return this._filterValue;\n    }\n\n    set filterValue(val: string) {\n        this._filterValue = val;\n        this.activateFilter();\n    }\n\n    ngAfterViewInit() {\n        if (this.editable) {\n            this.updateEditableLabel();\n        }\n    }\n\n    get label(): string {\n        return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null;\n    }\n\n    get emptyMessageLabel(): string {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n\n    get emptyFilterMessageLabel(): string {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n\n    updateEditableLabel(): void {\n        if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n            this.editableInputViewChild.nativeElement.value = (this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value||'');\n        }\n    }\n\n    getOptionLabel(option: any) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : (option.label != undefined ? option.label : option);\n    }\n\n    getOptionValue(option: any) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : (this.optionLabel || option.value === undefined ? option : option.value);\n    }\n\n    isOptionDisabled(option: any) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : (option.disabled !== undefined ? option.disabled : false);\n    }\n\n    getOptionGroupLabel(optionGroup: any) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n\n    getOptionGroupChildren(optionGroup: any) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n\n    onItemClick(event) {\n        const option = event.option;\n\n        if (!this.isOptionDisabled(option)) {\n            this.selectItem(event, option);\n            this.accessibleViewChild.nativeElement.focus();\n        }\n\n        setTimeout(() => {\n            this.hide();\n        }, 150);\n    }\n\n    selectItem(event, option) {\n        if (this.selectedOption != option) {\n            this.selectedOption = option;\n            this.value = this.getOptionValue(option);\n\n            this.onModelChange(this.value);\n            this.updateEditableLabel();\n            this.onChange.emit({\n                originalEvent: event.originalEvent,\n                value: this.value\n            });\n\n            if (this.virtualScroll) {\n                setTimeout(() => {\n                    this.viewPortOffsetTop = this.viewPort ? this.viewPort.measureScrollOffset() : 0;\n                }, 1);\n            }\n        }\n    }\n\n    ngAfterViewChecked() {\n        if (this.optionsChanged && this.overlayVisible) {\n            this.optionsChanged = false;\n\n            if (this.virtualScroll) {\n                this.updateVirtualScrollSelectedIndex(true);\n            }\n\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    this.alignOverlay();\n                }, 1);\n            });\n        }\n\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n            if (this.virtualScroll && this.viewPort) {\n                let range = this.viewPort.getRenderedRange();\n                this.updateVirtualScrollSelectedIndex(false);\n\n                if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n                    this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n                }\n            }\n\n            let selectedItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n            if (selectedItem) {\n                DomHandler.scrollInView(this.itemsWrapper, DomHandler.findSingle(this.overlay, 'li.p-highlight'));\n            }\n            this.selectedOptionUpdated = false;\n        }\n    }\n\n    writeValue(value: any): void {\n        if (this.filter) {\n            this.resetFilter();\n        }\n\n        this.value = value;\n        this.updateSelectedOption(value);\n        this.updateEditableLabel();\n        this.cd.markForCheck();\n    }\n\n    resetFilter(): void {\n        this._filterValue = null;\n\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n\n        this.optionsToDisplay = this.options;\n    }\n\n    updateSelectedOption(val: any): void {\n        this.selectedOption = this.findOption(val, this.optionsToDisplay);\n        if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n            this.selectedOption = this.optionsToDisplay[0];\n        }\n        this.selectedOptionUpdated = true;\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    onMouseclick(event) {\n        if (this.disabled || this.readonly || this.isInputClick(event)) {\n            return;\n        }\n\n        this.onClick.emit(event);\n        this.accessibleViewChild.nativeElement.focus();\n\n        if (this.overlayVisible)\n            this.hide();\n        else\n            this.show();\n\n        this.cd.detectChanges();\n    }\n\n    isInputClick(event): boolean {\n        return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon') ||\n            event.target.isSameNode(this.accessibleViewChild.nativeElement) ||\n            (this.editableInputViewChild && event.target.isSameNode(this.editableInputViewChild.nativeElement));\n    }\n\n    isOutsideClicked(event: Event): boolean {\n        return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || (this.overlay && this.overlay.contains(<Node> event.target)));\n    }\n\n    isEmpty() {\n        return !this.optionsToDisplay || (this.optionsToDisplay && this.optionsToDisplay.length === 0);\n    }\n\n    onEditableInputClick() {\n        this.bindDocumentClickListener();\n    }\n\n    onEditableInputFocus(event) {\n        this.focused = true;\n        this.hide();\n        this.onFocus.emit(event);\n    }\n\n    onEditableInputChange(event) {\n        this.value = event.target.value;\n        this.updateSelectedOption(this.value);\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n\n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                let itemsWrapperSelector = this.virtualScroll ? '.cdk-virtual-scroll-viewport' : '.p-dropdown-items-wrapper';\n                this.itemsWrapper = DomHandler.findSingle(this.overlay, itemsWrapperSelector);\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n\n                if (this.options && this.options.length) {\n                    if (!this.virtualScroll) {\n                        let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n                        if (selectedListItem) {\n                            DomHandler.scrollInView(this.itemsWrapper, selectedListItem);\n                        }\n                    }\n                }\n\n                if (this.filterViewChild && this.filterViewChild.nativeElement) {\n                    this.preventModelTouched = true;\n\n                    if (this.autofocusFilter) {\n                        this.filterViewChild.nativeElement.focus();\n                    }\n                }\n\n                this.onShow.emit(event);\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n                this.onHide.emit(event);\n            break;\n        }\n    }\n\n    scrollToSelectedVirtualScrollElement() {\n        if (!this.virtualAutoScrolled) {\n            if (this.viewPortOffsetTop) {\n                this.viewPort.scrollToOffset(this.viewPortOffsetTop);\n            }\n            else if (this.virtualScrollSelectedIndex > -1) {\n                this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n            }\n        }\n\n        this.virtualAutoScrolled = true;\n    }\n\n    updateVirtualScrollSelectedIndex(resetOffset) {\n        if (this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length) {\n            if (resetOffset) {\n                this.viewPortOffsetTop = 0;\n            }\n\n            this.virtualScrollSelectedIndex = this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay);\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\n            }\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    hide() {\n        this.overlayVisible = false;\n\n        if (this.filter && this.resetFilterOnHide) {\n            this.resetFilter();\n        }\n\n        if (this.virtualScroll) {\n            this.virtualAutoScrolled = false;\n        }\n\n        this.cd.markForCheck();\n    }\n\n    alignOverlay() {\n        if (this.overlay) {\n            if (this.appendTo)\n                DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);\n            else\n                DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\n        }\n    }\n\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event) {\n        this.focused = false;\n        this.onBlur.emit(event);\n\n        if (!this.preventModelTouched) {\n            this.onModelTouched();\n        }\n        this.preventModelTouched = false;\n    }\n\n    findPrevEnabledOption(index) {\n        let prevEnabledOption;\n\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (let i = (index - 1); 0 <= i; i--) {\n                let option = this.optionsToDisplay[i];\n                if (option.disabled) {\n                    continue;\n                }\n                else {\n                    prevEnabledOption = option;\n                    break;\n                }\n            }\n\n            if (!prevEnabledOption) {\n                for (let i = this.optionsToDisplay.length - 1; i >= index ; i--) {\n                    let option = this.optionsToDisplay[i];\n                    if (this.isOptionDisabled(option)) {\n                        continue;\n                    }\n                    else {\n                        prevEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return prevEnabledOption;\n    }\n\n    findNextEnabledOption(index) {\n        let nextEnabledOption;\n\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (let i = (index + 1); index < (this.optionsToDisplay.length - 1); i++) {\n                let option = this.optionsToDisplay[i];\n                if (this.isOptionDisabled(option)) {\n                    continue;\n                }\n                else {\n                    nextEnabledOption = option;\n                    break;\n                }\n            }\n\n            if (!nextEnabledOption) {\n                for (let i = 0; i < index; i++) {\n                    let option = this.optionsToDisplay[i];\n                    if (this.isOptionDisabled(option)) {\n                        continue;\n                    }\n                    else {\n                        nextEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return nextEnabledOption;\n    }\n\n    onKeydown(event: KeyboardEvent, search: boolean) {\n        if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n            return;\n        }\n\n        switch(event.which) {\n            //down\n            case 40:\n                if (!this.overlayVisible && event.altKey) {\n                    this.show();\n                }\n                else {\n                    if (this.group) {\n                        let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                        \n                        if (selectedItemIndex !== -1) {\n                            let nextItemIndex = selectedItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex]).length)) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[nextItemIndex]);\n                                this.selectedOptionUpdated = true;\n                            }\n                            else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex + 1])[0]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                        else {\n                            this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[0])[0]);\n                        }\n                    }\n                    else {\n                        let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                        let nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n                        if (nextEnabledOption) {\n                            this.selectItem(event, nextEnabledOption);\n                            this.selectedOptionUpdated = true;\n                        }\n                    }\n                }\n\n                event.preventDefault();\n\n            break;\n\n            //up\n            case 38:\n                if (this.group) {\n                    let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    if (selectedItemIndex !== -1) {\n                        let prevItemIndex = selectedItemIndex.itemIndex - 1;\n                        if (prevItemIndex >= 0) {\n                            this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[prevItemIndex]);\n                            this.selectedOptionUpdated = true;\n                        }\n                        else if (prevItemIndex < 0) {\n                            let prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n                            if (prevGroup) {\n                                this.selectItem(event, this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                    }\n                }\n                else {\n                    let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n                    let prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n                    if (prevEnabledOption) {\n                        this.selectItem(event, prevEnabledOption);\n                        this.selectedOptionUpdated = true;\n                    }\n                }\n\n                event.preventDefault();\n            break;\n\n            //space\n            case 32:\n            case 32:\n                if (!this.overlayVisible){\n                    this.show();\n                    event.preventDefault();\n                }\n            break;\n\n            //enter\n            case 13:\n                if (!this.filter || (this.optionsToDisplay && this.optionsToDisplay.length > 0)) {\n                    this.hide();\n                }\n\n                event.preventDefault();\n            break;\n\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n\n            //search item based on keyboard input\n            default:\n                if (search && !event.metaKey) {\n                    this.search(event);\n                }\n            break;\n        }\n    }\n\n    search(event: KeyboardEvent) {\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n\n        const char = event.key;\n        this.previousSearchChar = this.currentSearchChar;\n        this.currentSearchChar = char;\n\n        if (this.previousSearchChar === this.currentSearchChar)\n            this.searchValue = this.currentSearchChar;\n        else\n            this.searchValue = this.searchValue ? this.searchValue + char : char;\n\n        let newOption;\n        if (this.group) {\n            let searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : {groupIndex: 0, itemIndex: 0};\n            newOption = this.searchOptionWithinGroup(searchIndex);\n        }\n        else {\n            let searchIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            newOption = this.searchOption(++searchIndex);\n        }\n\n        if (newOption && !this.isOptionDisabled(newOption)) {\n            this.selectItem(event, newOption);\n            this.selectedOptionUpdated = true;\n        }\n\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = null;\n        }, 250);\n    }\n\n    searchOption(index) {\n        let option;\n\n        if (this.searchValue) {\n            option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n\n            if (!option) {\n                option = this.searchOptionInRange(0, index);\n            }\n        }\n\n        return option;\n    }\n\n    searchOptionInRange(start, end) {\n        for (let i = start; i < end; i++) {\n            let opt = this.optionsToDisplay[i];\n            if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith((this.searchValue as any).toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                return opt;\n            }\n        }\n\n        return null;\n    }\n\n    searchOptionWithinGroup(index) {\n        let option;\n\n        if (this.searchValue) {\n            for (let i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n                for (let j = (index.groupIndex === i) ? (index.itemIndex + 1) : 0; j < this.getOptionGroupChildren(this.optionsToDisplay[i]).length; j++) {\n                    let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                    if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith((this.searchValue as any).toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                        return opt;\n                    }\n                }\n            }\n\n            if (!option) {\n                for (let i = 0; i <= index.groupIndex; i++) {\n                    for (let j = 0; j < ((index.groupIndex === i) ? index.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[i]).length); j++) {\n                        let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                        if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith((this.searchValue as any).toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                            return opt;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    findOptionIndex(val: any, opts: any[]): number {\n        let index: number = -1;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                if ((val == null && this.getOptionValue(opts[i]) == null) || ObjectUtils.equals(val, this.getOptionValue(opts[i]), this.dataKey)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    findOptionGroupIndex(val: any, opts: any[]): any {\n        let groupIndex, itemIndex;\n\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n\n        if (itemIndex !== -1) {\n            return {groupIndex: groupIndex, itemIndex: itemIndex};\n        }\n        else {\n            return -1;\n        }\n    }\n\n    findOption(val: any, opts: any[], inGroup?: boolean): SelectItem {\n        if (this.group && !inGroup) {\n            let opt: SelectItem;\n            if (opts && opts.length) {\n                for (let optgroup of opts) {\n                    opt = this.findOption(val, this.getOptionGroupChildren(optgroup), true);\n                    if (opt) {\n                        break;\n                    }\n                }\n            }\n            return opt;\n        }\n        else {\n            let index: number = this.findOptionIndex(val, opts);\n            return (index != -1) ? opts[index] : null;\n        }\n    }\n\n    onFilterInputChange(event): void {\n        let inputValue = event.target.value;\n        if (inputValue && inputValue.length) {\n            this._filterValue = inputValue;\n            this.activateFilter();\n        }\n        else {\n            this._filterValue = null;\n            this.optionsToDisplay = this.options;\n        }\n\n        this.optionsChanged = true;\n        this.onFilter.emit({originalEvent: event, filter: this._filterValue});\n    }\n\n    activateFilter() {\n        let searchFields: string[] = (this.filterBy || this.optionLabel || 'label').split(',');\n\n        if (this.options && this.options.length) {\n            if (this.group) {\n                let filteredGroups = [];\n                for (let optgroup of this.options) {\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push({...optgroup, ...{[this.optionGroupChildren]: filteredSubOptions}});\n                    }\n                }\n\n                this.optionsToDisplay = filteredGroups;\n            }\n            else {\n                this.optionsToDisplay = this.filterService.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n            }\n\n            this.optionsChanged = true;\n        }\n    }\n\n    applyFocus(): void {\n        if (this.editable)\n            DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();\n        else\n            DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n    }\n\n    focus(): void {\n        this.applyFocus();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (this.isOutsideClicked(event)) {\n                    this.hide();\n                    this.unbindDocumentClickListener();\n                }\n\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        if (!DomHandler.isAndroid()) {\n            this.hide();\n        }\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, (event: any) => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    clear(event: Event) {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n        this.updateSelectedOption(this.value);\n        this.updateEditableLabel();\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n        this.itemsWrapper = null;\n        this.onModelTouched();\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,SharedModule,ScrollingModule,TooltipModule,RippleModule],\n    exports: [Dropdown,SharedModule,ScrollingModule],\n    declarations: [Dropdown,DropdownItem]\n})\nexport class DropdownModule { }\n"]}