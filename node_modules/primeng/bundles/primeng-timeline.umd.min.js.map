{"version":3,"sources":["../../src/app/components/timeline/timeline.ts"],"names":["Timeline","el","this","align","layout","prototype","getBlockableElement","nativeElement","children","ngAfterContentInit","_this","templates","forEach","item","getType","contentTemplate","template","oppositeTemplate","markerTemplate","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Input","ContentChildren","PrimeTemplate","NgModule","imports","CommonModule","exports","SharedModule","declarations"],"mappings":"2dA0DI,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAZXC,KAAAC,MAAgB,OAEhBD,KAAAE,OAAiB,kBAY1BJ,EAAAK,UAAAC,oBAAA,WACI,OAAOJ,KAAKD,GAAGM,cAAcC,SAAS,IAG1CR,EAAAK,UAAAI,mBAAA,WAAA,IAAAC,EAAAR,KACIA,KAAKS,UAAUC,SAAQ,SAACC,GACpB,OAAOA,EAAKC,WACR,IAAK,UACDJ,EAAKK,gBAAkBF,EAAKG,SAChC,MAEA,IAAK,WACDN,EAAKO,iBAAmBJ,EAAKG,SACjC,MAEA,IAAK,SACDN,EAAKQ,eAAiBL,EAAKG,uCAxE9CG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,aACVL,SAAU,0kDA4BVM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,owDAnCDC,EAAAA,6CAwC/BC,EAAAA,qBAEAA,EAAAA,0BAEAA,EAAAA,qBAEAA,EAAAA,sBAEAA,EAAAA,yBAEAC,EAAAA,gBAAeV,KAAA,CAACW,EAAAA,wBAuCrB,iCALCC,EAAAA,SAAQZ,KAAA,CAAC,CACNa,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACnC,EAAUoC,EAAAA,cACpBC,aAAc,CAACrC","sourcesContent":["import {NgModule ,Component, Input, ElementRef, ChangeDetectionStrategy, ViewEncapsulation, AfterContentInit, ContentChildren, QueryList, TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockableUI, PrimeTemplate, SharedModule} from 'primeng/api';\n\n@Component({\n    selector: 'p-timeline',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"{'p-timeline p-component': true, \n                'p-timeline-left': align === 'left',\n                'p-timeline-right': align === 'right',\n                'p-timeline-top': align === 'top',\n                'p-timeline-bottom': align === 'bottom',\n                'p-timeline-alternate': align === 'alternate',\n                'p-timeline-vertical': layout === 'vertical',\n                'p-timeline-horizontal': layout === 'horizontal'}\">\n            <div *ngFor=\"let event of value; let last=last\" class=\"p-timeline-event\">\n                <div class=\"p-timeline-event-opposite\">\n                    <ng-container *ngTemplateOutlet=\"oppositeTemplate; context: {$implicit: event}\"></ng-container>\n                </div>\n                <div class=\"p-timeline-event-separator\">\n                    <ng-container *ngIf=\"markerTemplate; else marker\">\n                        <ng-container *ngTemplateOutlet=\"markerTemplate; context: {$implicit: event}\"></ng-container>\n                    </ng-container>\n                    <ng-template #marker>\n                        <div class=\"p-timeline-event-marker\"></div>\n                    </ng-template>\n                    <div *ngIf=\"!last\" class=\"p-timeline-event-connector\"></div>\n                </div>\n                <div class=\"p-timeline-event-content\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate; context: {$implicit: event}\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./timeline.css']\n})\nexport class Timeline implements AfterContentInit, BlockableUI {\n\n    @Input() value: any[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() align: string = 'left';\n\n    @Input() layout: string = 'vertical';\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    contentTemplate: TemplateRef<any>;\n\n    oppositeTemplate: TemplateRef<any>;\n\n    markerTemplate: TemplateRef<any>;\n\n    constructor(private el: ElementRef) {}\n\n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'opposite':\n                    this.oppositeTemplate = item.template;\n                break;\n\n                case 'marker':\n                    this.markerTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Timeline, SharedModule],\n    declarations: [Timeline]\n})\nexport class TimelineModule { }\n"]}