!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("primeng/tristatecheckbox",["exports","@angular/core","@angular/common","@angular/forms"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).primeng=e.primeng||{},e.primeng.tristatecheckbox={}),e.ng.core,e.ng.common,e.ng.forms)}(this,(function(e,t,n,o){"use strict";var i={provide:o.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return a})),multi:!0},a=function(){function e(e){this.cd=e,this.checkboxTrueIcon="pi pi-check",this.checkboxFalseIcon="pi pi-times",this.onChange=new t.EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype.onClick=function(e,t){this.disabled||this.readonly||(this.toggle(e),this.focused=!0,t.focus())},e.prototype.onKeydown=function(e){32==e.keyCode&&e.preventDefault()},e.prototype.onKeyup=function(e){32!=e.keyCode||this.readonly||(this.toggle(e),e.preventDefault())},e.prototype.toggle=function(e){null==this.value||null==this.value?this.value=!0:1==this.value?this.value=!1:0==this.value&&(this.value=null),this.onModelChange(this.value),this.onChange.emit({originalEvent:e,value:this.value})},e.prototype.onFocus=function(){this.focused=!0},e.prototype.onBlur=function(){this.focused=!1,this.onModelTouched()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.writeValue=function(e){this.value=e,this.cd.markForCheck()},e.prototype.setDisabledState=function(e){this.disabled=e,this.cd.markForCheck()},e}();a.decorators=[{type:t.Component,args:[{selector:"p-triStateCheckbox",template:'\n        <div [ngStyle]="style" [ngClass]="{\'p-checkbox p-component\': true,\'p-checkbox-disabled\': disabled, \'p-checkbox-focused\': focused}" [class]="styleClass">\n            <div class="p-hidden-accessible">\n                <input #input type="text" [attr.id]="inputId" [name]="name" [attr.tabindex]="tabindex" [readonly]="readonly" [disabled]="disabled" (keyup)="onKeyup($event)" (keydown)="onKeydown($event)" (focus)="onFocus()" (blur)="onBlur()" [attr.aria-labelledby]="ariaLabelledBy" inputmode="none">\n            </div>\n            <div class="p-checkbox-box" (click)="onClick($event,input)"  role="checkbox" [attr.aria-checked]="value === true"\n                [ngClass]="{\'p-highlight\':value!=null,\'p-disabled\':disabled,\'p-focus\':focused}">\n                <span class="p-checkbox-icon" [ngClass]="value === true ? checkboxTrueIcon : value === false ? checkboxFalseIcon : \'\'"></span>\n            </div>\n        </div>\n        <label class="p-checkbox-label" (click)="onClick($event,input)"\n               [ngClass]="{\'p-checkbox-label-active\':value!=null, \'p-disabled\':disabled, \'p-checkbox-label-focus\':focused}"\n               *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[i],changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None}]}],a.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},a.propDecorators={disabled:[{type:t.Input}],name:[{type:t.Input}],ariaLabelledBy:[{type:t.Input}],tabindex:[{type:t.Input}],inputId:[{type:t.Input}],style:[{type:t.Input}],styleClass:[{type:t.Input}],label:[{type:t.Input}],readonly:[{type:t.Input}],checkboxTrueIcon:[{type:t.Input}],checkboxFalseIcon:[{type:t.Input}],onChange:[{type:t.Output}]};var l=function(){};l.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule],exports:[a],declarations:[a]}]}],e.TRISTATECHECKBOX_VALUE_ACCESSOR=i,e.TriStateCheckbox=a,e.TriStateCheckboxModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-tristatecheckbox.umd.min.js.map