!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("primeng/api"),require("primeng/ripple"),require("@angular/animations")):"function"==typeof define&&define.amd?define("primeng/panel",["exports","@angular/core","@angular/common","primeng/api","primeng/ripple","@angular/animations"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).primeng=e.primeng||{},e.primeng.panel={}),e.ng.core,e.ng.common,e.primeng.api,e.primeng.ripple,e.ng.animations)}(this,(function(e,t,n,a,i,o){"use strict";var l=0,p=function(){function e(e){this.el=e,this.collapsed=!1,this.expandIcon="pi pi-plus",this.collapseIcon="pi pi-minus",this.showHeader=!0,this.toggler="icon",this.collapsedChange=new t.EventEmitter,this.onBeforeToggle=new t.EventEmitter,this.onAfterToggle=new t.EventEmitter,this.transitionOptions="400ms cubic-bezier(0.86, 0, 0.07, 1)",this.id="p-panel-"+l++}return e.prototype.ngAfterContentInit=function(){var e=this;this.templates.forEach((function(t){switch(t.getType()){case"header":e.headerTemplate=t.template;break;case"content":e.contentTemplate=t.template;break;case"footer":e.footerTemplate=t.template;break;case"icons":e.iconTemplate=t.template;break;default:e.contentTemplate=t.template}}))},e.prototype.onHeaderClick=function(e){"header"===this.toggler&&this.toggle(e)},e.prototype.onIconClick=function(e){"icon"===this.toggler&&this.toggle(e)},e.prototype.toggle=function(e){if(this.animating)return!1;this.animating=!0,this.onBeforeToggle.emit({originalEvent:e,collapsed:this.collapsed}),this.toggleable&&(this.collapsed?this.expand(e):this.collapse(e)),e.preventDefault()},e.prototype.expand=function(e){this.collapsed=!1,this.collapsedChange.emit(this.collapsed)},e.prototype.collapse=function(e){this.collapsed=!0,this.collapsedChange.emit(this.collapsed)},e.prototype.getBlockableElement=function(){return this.el.nativeElement.children[0]},e.prototype.onToggleDone=function(e){this.animating=!1,this.onAfterToggle.emit({originalEvent:e,collapsed:this.collapsed})},e}();p.decorators=[{type:t.Component,args:[{selector:"p-panel",template:'\n        <div [attr.id]="id" [ngClass]="{\'p-panel p-component\': true, \'p-panel-toggleable\': toggleable}" [ngStyle]="style" [class]="styleClass">\n            <div class="p-panel-header" *ngIf="showHeader" (click)="onHeaderClick($event)" [attr.id]="id + \'-titlebar\'">\n                <span class="p-panel-title" *ngIf="header" [attr.id]="id + \'_header\'">{{header}}</span>\n                <ng-content select="p-header"></ng-content>\n                <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n                <div class="p-panel-icons">\n                    <ng-template *ngTemplateOutlet="iconTemplate"></ng-template>\n                    <button *ngIf="toggleable" type="button" [attr.id]="id + \'-label\'" class="p-panel-header-icon p-panel-toggler p-link" pRipple\n                        (click)="onIconClick($event)" (keydown.enter)="onIconClick($event)" [attr.aria-controls]="id + \'-content\'" role="tab" [attr.aria-expanded]="!collapsed">\n                        <span [class]="collapsed ? expandIcon : collapseIcon"></span>\n                    </button>\n                </div>\n            </div>\n            <div [attr.id]="id + \'-content\'" class="p-toggleable-content" [@panelContent]="collapsed ? {value: \'hidden\', params: {transitionParams: animating ? transitionOptions : \'0ms\', height: \'0\', opacity:\'0\'}} : {value: \'visible\', params: {transitionParams: animating ? transitionOptions : \'0ms\', height: \'*\', opacity: \'1\'}}" (@panelContent.done)="onToggleDone($event)"\n                role="region" [attr.aria-hidden]="collapsed" [attr.aria-labelledby]="id  + \'-titlebar\'">\n                <div class="p-panel-content">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n                </div>\n                \n                <div class="p-panel-footer" *ngIf="footerFacet || footerTemplate">\n                    <ng-content select="p-footer"></ng-content>\n                    <ng-container *ngTemplateOutlet="footerTemplate"></ng-container>\n                </div>\n            </div>\n        </div>\n    ',animations:[o.trigger("panelContent",[o.state("hidden",o.style({height:"0",overflow:"hidden"})),o.state("void",o.style({height:"{{height}}"}),{params:{height:"0"}}),o.state("visible",o.style({height:"*"})),o.transition("visible <=> hidden",[o.style({overflow:"hidden"}),o.animate("{{transitionParams}}")]),o.transition("void => hidden",o.animate("{{transitionParams}}")),o.transition("void => visible",o.animate("{{transitionParams}}"))])],changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None,styles:[".p-panel-header{align-items:center;display:flex;justify-content:space-between}.p-panel-title{line-height:1}.p-panel-header-icon{align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;text-decoration:none}"]}]}],p.ctorParameters=function(){return[{type:t.ElementRef}]},p.propDecorators={toggleable:[{type:t.Input}],header:[{type:t.Input}],collapsed:[{type:t.Input}],style:[{type:t.Input}],styleClass:[{type:t.Input}],expandIcon:[{type:t.Input}],collapseIcon:[{type:t.Input}],showHeader:[{type:t.Input}],toggler:[{type:t.Input}],collapsedChange:[{type:t.Output}],onBeforeToggle:[{type:t.Output}],onAfterToggle:[{type:t.Output}],transitionOptions:[{type:t.Input}],footerFacet:[{type:t.ContentChild,args:[a.Footer]}],templates:[{type:t.ContentChildren,args:[a.PrimeTemplate]}]};var r=function(){};r.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,a.SharedModule,i.RippleModule],exports:[p,a.SharedModule],declarations:[p]}]}],e.Panel=p,e.PanelModule=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-panel.umd.min.js.map