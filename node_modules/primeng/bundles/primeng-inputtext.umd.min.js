!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("primeng/inputtext",["exports","@angular/core","@angular/forms","@angular/common"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).primeng=e.primeng||{},e.primeng.inputtext={}),e.ng.core,e.ng.forms,e.ng.common)}(this,(function(e,t,n,o){"use strict";var r=function(){function e(e,t){this.el=e,this.ngModel=t}return e.prototype.ngDoCheck=function(){this.updateFilledState()},e.prototype.onInput=function(e){this.updateFilledState()},e.prototype.updateFilledState=function(){this.filled=this.el.nativeElement.value&&this.el.nativeElement.value.length||this.ngModel&&this.ngModel.model},e}();r.decorators=[{type:t.Directive,args:[{selector:"[pInputText]",host:{"[class.p-inputtext]":"true","[class.p-component]":"true","[class.p-filled]":"filled"}}]}],r.ctorParameters=function(){return[{type:t.ElementRef},{type:n.NgModel,decorators:[{type:t.Optional}]}]},r.propDecorators={onInput:[{type:t.HostListener,args:["input",["$event"]]}]};var i=function(){};i.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule],exports:[r],declarations:[r]}]}],e.InputText=r,e.InputTextModule=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-inputtext.umd.min.js.map