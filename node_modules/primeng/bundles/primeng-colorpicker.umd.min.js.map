{"version":3,"sources":["../../src/app/components/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","onShow","onHide","value","h","s","b","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","onHueTouchStart","onColorTouchStart","colorDragging","pickColor","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","validateHSB","Math","floor","max","min","pageY","changedTouches","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","onMove","preventDefault","onDragEnd","unbindDocumentMousemoveListener","unbindDocumentMouseupListener","rect","left","scrollLeft","saturation","pageX","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","markForCheck","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentMousemoveListener","documentMouseupListener","documentResizeListener","onWindowResize","bind","addEventListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","ConnectedOverlayScrollHandler","containerViewChild","unbindScrollListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","destroy","Component","args","selector","template","animations","trigger","transition","opacity","transform","animate","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ChangeDetectorRef","Input","Output","ViewChild","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-colorpicker p-component':true,'p-colorpicker-overlay':!inline,'p-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"p-colorpicker-preview p-inputtext\" readonly=\"readonly\" [ngClass]=\"{'p-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel':!inline, 'p-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\" \n                    (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <div class=\"p-colorpicker-content\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (touchstart)=\"onColorTouchStart($event)\" (touchmove)=\"onMove($event)\" (touchend)=\"onDragEnd()\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"p-colorpicker-color\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\" (touchstart)=\"onHueTouchStart($event)\" (touchmove)=\"onMove($event)\" (touchend)=\"onDragEnd()\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./colorpicker.css']\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inline: boolean;\n\n    @Input() format: string = 'hex';\n\n    @Input() appendTo: any;\n\n    @Input() disabled: boolean;\n\n    @Input() tabindex: string;\n\n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('input') inputViewChild: ElementRef;\n\n    value: any = {h:0, s: 100, b: 100};\n\n    inputBgColor: string;\n\n    shown: boolean;\n\n    overlayVisible: boolean;\n\n    defaultColor: string = 'ff0000';\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    documentClickListener: Function;\n\n    documentResizeListener: any;\n\n    documentMousemoveListener: Function;\n\n    documentMouseupListener: Function;\n\n    documentHueMoveListener: Function;\n\n    scrollHandler: any;\n\n    selfClick: boolean;\n\n    colorDragging: boolean;\n\n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n\n    colorHandleViewChild: ElementRef;\n\n    hueViewChild: ElementRef;\n\n    hueHandleViewChild: ElementRef;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n\n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n\n    onHueTouchStart(event) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n\n    onColorTouchStart(event) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n\n    pickHue(event) {\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, ((event.pageY || event.changedTouches[0].pageY) - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n\n    onMove(event) {\n        if (this.colorDragging) {\n            this.pickColor(event);\n            event.preventDefault();\n        }\n\n        if (this.hueDragging) {\n            this.pickHue(event);\n            event.preventDefault();\n        }\n    }\n\n    onDragEnd() {\n        this.colorDragging = false;\n        this.hueDragging = false;\n\n        this.unbindDocumentMousemoveListener();\n        this.unbindDocumentMouseupListener();\n    }\n\n    pickColor(event) {\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, ((event.pageX || event.changedTouches[0].pageX)- left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, ((event.pageY || event.changedTouches[0].pageY) - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n\n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n\n            case 'hsb':\n                val = this.value;\n            break;\n        }\n\n        return val;\n    }\n\n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n\n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n\n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n\n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n\n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n\n    onInputFocus() {\n        this.onModelTouched();\n    }\n\n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                    this.bindScrollListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    onOverlayAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.onShow.emit({})\n                }\n            break;\n\n            case 'void':\n                this.onHide.emit({})\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n\n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n\n    onPanelClick() {\n        this.selfClick = true;\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n\n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMousemoveListener = this.renderer.listen(documentTarget, 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n\n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n\n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n\n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMouseupListener = this.renderer.listen(documentTarget, 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n\n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n\n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n\n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n\n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n\n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n\n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n\n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        }\n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n\n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n\n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }\n\n        return hex.join('');\n    }\n\n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindScrollListener();\n        this.unbindDocumentResizeListener();\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}