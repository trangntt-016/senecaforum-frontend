{"version":3,"file":"primeng-captcha.umd.js","sources":["../../src/app/components/captcha/captcha.ts","../../src/app/components/captcha/primeng-captcha.ts"],"sourcesContent":["import {NgModule,AfterViewInit,Component,EventEmitter,Input,NgZone,OnDestroy,Output,ElementRef,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-captcha',\n    template: `<div></div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Captcha implements AfterViewInit,OnDestroy {\n\n    @Input() siteKey: string = null;\n        \n    @Input() theme = 'light';\n    \n    @Input() type = 'image';\n    \n    @Input() size = 'normal';\n    \n    @Input() tabindex = 0;\n     \n    @Input() initCallback = \"initRecaptcha\";\n    \n    @Output() onResponse: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onExpire: EventEmitter<any> = new EventEmitter();\n    \n    private _instance: any = null;\n\n    private _language: any = null;\n\n\n    @Input() get language(): string {\n        return this._language;\n    }\n\n    set language(language: string) {\n        this._language = language;\n        this.init();\n    }\n\n    constructor(public el: ElementRef, public _zone: NgZone, public cd: ChangeDetectorRef) {}\n    \n    ngAfterViewInit() {\n        if ((<any>window).grecaptcha) {\n            if (!(<any>window).grecaptcha.render){\n                setTimeout(() =>{\n                    this.init();\n                },100)\n            }\n            else {\n                this.init();\n            }\n        }\n        else {\n            (<any>window)[this.initCallback] = () => {\n              this.init();\n            }\n        } \n    }\n    \n    init()Â {\n        this._instance = (<any>window).grecaptcha.render(this.el.nativeElement.children[0], {\n            'sitekey': this.siteKey,\n            'theme': this.theme,\n            'type': this.type,\n            'size': this.size,\n            'tabindex': this.tabindex,\n            'hl': this.language,\n            'callback': (response: string) => {this._zone.run(() => this.recaptchaCallback(response))},\n            'expired-callback': () => {this._zone.run(() => this.recaptchaExpiredCallback())}\n        });\n    }\n    \n    reset() {\n        if (this._instance === null)\n            return;\n        \n        (<any>window).grecaptcha.reset(this._instance);\n        this.cd.markForCheck();\n    }\n    \n    getResponse(): String {\n        if (this._instance === null)\n            return null;\n        \n        return (<any>window).grecaptcha.getResponse(this._instance);\n    }\n    \n    recaptchaCallback(response: string) {\n        this.onResponse.emit({\n            response: response\n        });\n    }\n\n    recaptchaExpiredCallback() {\n        this.onExpire.emit();\n    }\n    \n    ngOnDestroy() {\n        if (this._instance != null) {\n          (<any>window).grecaptcha.reset(this._instance);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Captcha],\n    declarations: [Captcha]\n})\nexport class CaptchaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","NgZone","ChangeDetectorRef","Input","Output","NgModule","CommonModule"],"mappings":"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"}