{"version":3,"file":"multiselect.d.ts","sources":["multiselect.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, Renderer2, EventEmitter, ChangeDetectorRef, TemplateRef, QueryList } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { FilterService } from 'primeng/api';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const MULTISELECT_VALUE_ACCESSOR: any;\nexport declare class MultiSelectItem {\n    option: any;\n    selected: boolean;\n    label: any;\n    disabled: boolean;\n    itemSize: number;\n    template: TemplateRef<any>;\n    onClick: EventEmitter<any>;\n    onKeydown: EventEmitter<any>;\n    onOptionClick(event: Event): void;\n    onOptionKeydown(event: Event): void;\n}\nexport declare class MultiSelect implements OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy, ControlValueAccessor {\n    el: ElementRef;\n    renderer: Renderer2;\n    cd: ChangeDetectorRef;\n    filterService: FilterService;\n    style: any;\n    styleClass: string;\n    panelStyle: any;\n    panelStyleClass: string;\n    inputId: string;\n    disabled: boolean;\n    readonly: boolean;\n    group: boolean;\n    filter: boolean;\n    filterPlaceHolder: string;\n    filterLocale: string;\n    overlayVisible: boolean;\n    tabindex: number;\n    appendTo: any;\n    dataKey: string;\n    name: string;\n    ariaLabelledBy: string;\n    displaySelectedLabel: boolean;\n    maxSelectedLabels: number;\n    selectionLimit: number;\n    selectedItemsLabel: string;\n    showToggleAll: boolean;\n    emptyFilterMessage: string;\n    resetFilterOnHide: boolean;\n    dropdownIcon: string;\n    optionLabel: string;\n    optionValue: string;\n    optionDisabled: string;\n    optionGroupLabel: string;\n    optionGroupChildren: string;\n    showHeader: boolean;\n    autoZIndex: boolean;\n    baseZIndex: number;\n    filterBy: string;\n    virtualScroll: boolean;\n    itemSize: number;\n    showTransitionOptions: string;\n    hideTransitionOptions: string;\n    ariaFilterLabel: string;\n    filterMatchMode: string;\n    tooltip: string;\n    tooltipPosition: string;\n    tooltipPositionStyle: string;\n    tooltipStyleClass: string;\n    autofocusFilter: boolean;\n    display: string;\n    containerViewChild: ElementRef;\n    filterInputChild: ElementRef;\n    accessibleViewChild: ElementRef;\n    footerFacet: any;\n    headerFacet: any;\n    templates: QueryList<any>;\n    onChange: EventEmitter<any>;\n    onFilter: EventEmitter<any>;\n    onFocus: EventEmitter<any>;\n    onBlur: EventEmitter<any>;\n    onClick: EventEmitter<any>;\n    onPanelShow: EventEmitter<any>;\n    onPanelHide: EventEmitter<any>;\n    scrollHeight: string;\n    _defaultLabel: string;\n    set defaultLabel(val: string);\n    get defaultLabel(): string;\n    _placeholder: string;\n    set placeholder(val: string);\n    get placeholder(): string;\n    get options(): any[];\n    set options(val: any[]);\n    get filterValue(): string;\n    set filterValue(val: string);\n    value: any[];\n    _filteredOptions: any[];\n    onModelChange: Function;\n    onModelTouched: Function;\n    overlay: HTMLDivElement;\n    valuesAsString: string;\n    focus: boolean;\n    filled: boolean;\n    documentClickListener: any;\n    _filterValue: string;\n    filtered: boolean;\n    itemTemplate: TemplateRef<any>;\n    groupTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    footerTemplate: TemplateRef<any>;\n    selectedItemsTemplate: TemplateRef<any>;\n    headerCheckboxFocus: boolean;\n    _options: any[];\n    maxSelectionLimitReached: boolean;\n    scrollHandler: any;\n    documentResizeListener: any;\n    preventModelTouched: boolean;\n    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, filterService: FilterService);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    ngAfterViewChecked(): void;\n    getOptionLabel(option: any): any;\n    getOptionValue(option: any): any;\n    getOptionGroupLabel(optionGroup: any): any;\n    getOptionGroupChildren(optionGroup: any): any;\n    isOptionDisabled(option: any): any;\n    writeValue(value: any): void;\n    checkSelectionLimit(): void;\n    updateFilledState(): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    onOptionClick(event: any): void;\n    isSelected(option: any): boolean;\n    findSelectionIndex(val: any): number;\n    get toggleAllDisabled(): boolean;\n    toggleAll(event: any): void;\n    checkAll(): void;\n    uncheckAll(): void;\n    show(): void;\n    onOverlayAnimationStart(event: AnimationEvent): void;\n    appendOverlay(): void;\n    restoreOverlayAppend(): void;\n    alignOverlay(): void;\n    hide(): void;\n    close(event: any): void;\n    onMouseclick(event: MouseEvent, input: any): void;\n    removeChip(chip: any, event: MouseEvent): void;\n    isOverlayClick(event: MouseEvent): boolean;\n    isOutsideClicked(event: MouseEvent): boolean;\n    onInputFocus(event: any): void;\n    onInputBlur(event: any): void;\n    onOptionKeydown(event: any): void;\n    findNextItem(item: any): any;\n    findPrevItem(item: any): any;\n    onKeydown(event: KeyboardEvent): void;\n    updateLabel(): void;\n    findLabelByValue(val: any): string;\n    searchLabelByValue(val: any, options: any[]): string;\n    get allChecked(): boolean;\n    get optionsToRender(): any[];\n    get emptyOptions(): boolean;\n    hasFilter(): boolean;\n    onFilterInputChange(event: KeyboardEvent): void;\n    activateFilter(): void;\n    onHeaderCheckboxFocus(): void;\n    onHeaderCheckboxBlur(): void;\n    bindDocumentClickListener(): void;\n    unbindDocumentClickListener(): void;\n    bindDocumentResizeListener(): void;\n    unbindDocumentResizeListener(): void;\n    onWindowResize(): void;\n    bindScrollListener(): void;\n    unbindScrollListener(): void;\n    onOverlayHide(): void;\n    ngOnDestroy(): void;\n}\nexport declare class MultiSelectModule {\n}\n"]}