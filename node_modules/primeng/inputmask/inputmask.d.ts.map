{"version":3,"file":"inputmask.d.ts","sources":["inputmask.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["import { ElementRef, OnInit, OnDestroy, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const INPUTMASK_VALUE_ACCESSOR: any;\nexport declare class InputMask implements OnInit, OnDestroy, ControlValueAccessor {\n    el: ElementRef;\n    private cd;\n    type: string;\n    slotChar: string;\n    autoClear: boolean;\n    style: any;\n    inputId: string;\n    styleClass: string;\n    placeholder: string;\n    size: number;\n    maxlength: number;\n    tabindex: string;\n    title: string;\n    ariaLabel: string;\n    ariaRequired: boolean;\n    disabled: boolean;\n    readonly: boolean;\n    unmask: boolean;\n    name: string;\n    required: boolean;\n    characterPattern: string;\n    autoFocus: boolean;\n    autocomplete: string;\n    inputViewChild: ElementRef;\n    onComplete: EventEmitter<any>;\n    onFocus: EventEmitter<any>;\n    onBlur: EventEmitter<any>;\n    onInput: EventEmitter<any>;\n    onKeydown: EventEmitter<any>;\n    value: any;\n    _mask: string;\n    onModelChange: Function;\n    onModelTouched: Function;\n    input: HTMLInputElement;\n    filled: boolean;\n    defs: any;\n    tests: any[];\n    partialPosition: any;\n    firstNonMaskPos: number;\n    lastRequiredNonMaskPos: any;\n    len: number;\n    oldVal: string;\n    buffer: any;\n    defaultBuffer: string;\n    focusText: string;\n    caretTimeoutId: any;\n    androidChrome: boolean;\n    focused: boolean;\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    get mask(): string;\n    set mask(val: string);\n    initMask(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    caret(first?: number, last?: number): {\n        begin: any;\n        end: any;\n    };\n    isCompleted(): boolean;\n    getPlaceholder(i: number): string;\n    seekNext(pos: any): any;\n    seekPrev(pos: any): any;\n    shiftL(begin: number, end: number): void;\n    shiftR(pos: any): void;\n    handleAndroidInput(e: any): void;\n    onInputBlur(e: any): void;\n    onInputKeydown(e: any): void;\n    onKeyPress(e: any): void;\n    clearBuffer(start: any, end: any): void;\n    writeBuffer(): void;\n    checkVal(allow?: boolean): any;\n    onInputFocus(event: any): void;\n    onInputChange(event: any): void;\n    handleInputChange(event: any): void;\n    getUnmaskedValue(): string;\n    updateModel(e: any): void;\n    updateFilledState(): void;\n    focus(): void;\n    ngOnDestroy(): void;\n}\nexport declare class InputMaskModule {\n}\n"]}