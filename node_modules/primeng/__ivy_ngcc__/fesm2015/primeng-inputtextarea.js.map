{"version":3,"file":"primeng-inputtextarea.js","sources":["../../src/app/components/inputtextarea/inputtextarea.ts","../../src/app/components/inputtextarea/primeng-inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output, EventEmitter,Optional, AfterViewInit, OnInit, OnDestroy, ChangeDetectorRef} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n    }\n})\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy  {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl, private cd: ChangeDetectorRef) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}