{"version":3,"file":"primeng-button.js","sources":["../../src/app/components/button/button.ts","../../src/app/components/button/primeng-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, AfterContentInit, TemplateRef, QueryList} from '@angular/core';\nimport {DomHandler} from 'primeng/dom';\nimport {CommonModule} from '@angular/common';\nimport {RippleModule} from 'primeng/ripple'; \nimport {PrimeTemplate} from 'primeng/api'; \n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\n            \n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\n\n    public _label: string;\n    \n    public _icon: string;\n\n    public _loading: boolean = false;\n            \n    public initialized: boolean;\n    \n    public _initialStyleClass: string;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this._initialStyleClass = this.el.nativeElement.className;\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n        if (this.icon) {\n            this.createIconEl();\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n\n        if (this.label)\n            labelElement.appendChild(document.createTextNode(this.label));\n        else \n            labelElement.innerHTML = '&nbsp;';\n        \n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'p-button p-component';\n        if (this.icon && !this.label) {\n            styleClass = styleClass + ' p-button-icon-only';\n        }\n\n        if (this.loading) {\n            styleClass = styleClass + ' p-disabled p-button-loading';\n            if (!this.icon && this.label)\n                styleClass = styleClass + ' p-button-loading-label-only';\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n\n    createIconEl() {\n        let iconElement = document.createElement(\"span\");\n        iconElement.className = 'p-button-icon';\n        iconElement.setAttribute(\"aria-hidden\", \"true\");\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n        \n        if (iconPosClass) {\n            DomHandler.addClass(iconElement, iconPosClass);\n        }\n\n        DomHandler.addMultipleClasses(iconElement, this.getIconClass());\n        let labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label')\n\n        if (labelEl)\n            this.el.nativeElement.insertBefore(iconElement, labelEl);\n        else\n            this.el.nativeElement.appendChild(iconElement)\n    }\n\n    getIconClass() {\n        return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\n    }\n\n    setIconClass() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        if (iconElement) {\n            if (this.iconPos) \n                iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();\n            else \n                iconElement.className = 'p-button-icon ' + this.getIconClass();\n        }\n        else {\n            this.createIconEl();\n        }\n    }\n\n    removeIconElement() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        this.el.nativeElement.removeChild(iconElement)\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            this.setIconClass();\n            this.setStyleClass();\n        }\n    }\n\n    @Input() get loading(): boolean {\n        return this._loading;\n    }\n\n    set loading(val: boolean) {\n        this._loading = val;\n        \n        if (this.initialized) {\n            if (this.loading || this.icon)\n                this.setIconClass();\n            else \n                this.removeIconElement();\n            \n            this.setStyleClass();\n        }\n    }\n    \n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\n                        'p-disabled': this.disabled || this.loading,\n                        'p-button-loading': this.loading,\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Button implements AfterContentInit {\n\n    @Input() type: string = \"button\";\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() badge: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() loading: boolean = false;\n\n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() badgeClass: string;\n\n    contentTemplate: TemplateRef<any>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    badgeStyleClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}